{
  "research_question_4": "For stages in parallel, fail-fast feature is used for what type of operations(stage names)? When it is used/unused, what are the operations running in parallel?",
  "parallel_stages_analysis": [
    {
      "outer_stage_name": "parallel",
      "fail_fast": false,
      "parallel_stages": [
        "windows",
        "linux"
      ]
    },
    {
      "outer_stage_name": "ekathhe",
      "fail_fast": false,
      "parallel_stages": [
        "parallel1",
        "parallel2"
      ]
    },
    {
      "outer_stage_name": "build",
      "fail_fast": false,
      "parallel_stages": [
        "Build 1",
        "Build 2"
      ]
    },
    {
      "outer_stage_name": "build",
      "fail_fast": false,
      "parallel_stages": [
        "Build"
      ]
    },
    {
      "outer_stage_name": "test",
      "fail_fast": false,
      "parallel_stages": [
        "Test"
      ]
    },
    {
      "outer_stage_name": "welcome",
      "fail_fast": false,
      "parallel_stages": [
        "FirstStage",
        "FirstParallelStage"
      ]
    },
    {
      "outer_stage_name": "build",
      "fail_fast": true,
      "parallel_stages": [
        "Build on linux",
        "Test on linux"
      ]
    },
    {
      "outer_stage_name": "parallel",
      "fail_fast": false,
      "parallel_stages": [
        "windows",
        "linux"
      ]
    },
    {
      "outer_stage_name": "jjjj",
      "fail_fast": false,
      "parallel_stages": [
        "gg",
        "pruebaaaa"
      ]
    },
    {
      "outer_stage_name": "test",
      "fail_fast": false,
      "parallel_stages": [
        "Test",
        "error"
      ]
    },
    {
      "outer_stage_name": "build",
      "fail_fast": false,
      "parallel_stages": [
        "Pre-build",
        "Test"
      ]
    },
    {
      "outer_stage_name": "test",
      "fail_fast": false,
      "parallel_stages": [
        "test-front-end",
        "test-back-end"
      ]
    },
    {
      "outer_stage_name": "test1",
      "fail_fast": false,
      "parallel_stages": [
        "test1",
        "dfdff"
      ]
    },
    {
      "outer_stage_name": "app install",
      "fail_fast": false,
      "parallel_stages": [
        "API INSTALL",
        "SITE INSTALL"
      ]
    },
    {
      "outer_stage_name": "app lint",
      "fail_fast": false,
      "parallel_stages": [
        "API LINT",
        "SITE LINT"
      ]
    },
    {
      "outer_stage_name": "app unit test",
      "fail_fast": false,
      "parallel_stages": [
        "API UNIT TEST",
        "SITE UNIT TEST"
      ]
    },
    {
      "outer_stage_name": "app build",
      "fail_fast": false,
      "parallel_stages": [
        "API BUILD",
        "SITE BUILD"
      ]
    },
    {
      "outer_stage_name": "plist files",
      "fail_fast": false,
      "parallel_stages": [
        "List Files",
        "List Files2",
        "Print Environment"
      ]
    },
    {
      "outer_stage_name": "check repo",
      "fail_fast": false,
      "parallel_stages": [
        "Check Repo",
        "List contents"
      ]
    },
    {
      "outer_stage_name": "1",
      "fail_fast": false,
      "parallel_stages": [
        "1",
        "2"
      ]
    },
    {
      "outer_stage_name": "starting",
      "fail_fast": false,
      "parallel_stages": [
        "Starting",
        "Parallel Start"
      ]
    },
    {
      "outer_stage_name": "build",
      "fail_fast": false,
      "parallel_stages": [
        "Build",
        "parallel Build"
      ]
    },
    {
      "outer_stage_name": "test",
      "fail_fast": false,
      "parallel_stages": [
        "Test",
        "Parallel Test ..."
      ]
    },
    {
      "outer_stage_name": "stage 1",
      "fail_fast": false,
      "parallel_stages": [
        "print",
        "error"
      ]
    },
    {
      "outer_stage_name": "build",
      "fail_fast": false,
      "parallel_stages": [
        "build",
        "parallel"
      ]
    },
    {
      "outer_stage_name": "stage1",
      "fail_fast": false,
      "parallel_stages": [
        "stage1",
        "parallel stage1"
      ]
    },
    {
      "outer_stage_name": "group deployments",
      "fail_fast": false,
      "parallel_stages": [
        "Stage1",
        "error",
        "Stage3"
      ]
    },
    {
      "outer_stage_name": "build",
      "fail_fast": false,
      "parallel_stages": [
        "build",
        "parallel"
      ]
    },
    {
      "outer_stage_name": "res",
      "fail_fast": false,
      "parallel_stages": [
        "res",
        "error"
      ]
    },
    {
      "outer_stage_name": "preparation",
      "fail_fast": false,
      "parallel_stages": [
        "Preparation",
        "second"
      ]
    },
    {
      "outer_stage_name": "test",
      "fail_fast": false,
      "parallel_stages": [
        "node 1",
        "node 2"
      ]
    },
    {
      "outer_stage_name": "g",
      "fail_fast": false,
      "parallel_stages": [
        "build",
        "e"
      ]
    },
    {
      "outer_stage_name": "build",
      "fail_fast": false,
      "parallel_stages": [
        "Build",
        "Run",
        "this job wont work"
      ]
    },
    {
      "outer_stage_name": "build",
      "fail_fast": false,
      "parallel_stages": [
        "Build",
        "error"
      ]
    },
    {
      "outer_stage_name": "parallel stage",
      "fail_fast": true,
      "parallel_stages": [
        "Branch A",
        "Branch B"
      ]
    },
    {
      "outer_stage_name": "build",
      "fail_fast": false,
      "parallel_stages": [
        "build",
        "install"
      ]
    },
    {
      "outer_stage_name": "ga",
      "fail_fast": false,
      "parallel_stages": [
        "A",
        "B"
      ]
    },
    {
      "outer_stage_name": "testes",
      "fail_fast": false,
      "parallel_stages": [
        "Testes",
        "Teste IE",
        "Teste Firefox"
      ]
    },
    {
      "outer_stage_name": "ls",
      "fail_fast": false,
      "parallel_stages": [
        "ls",
        "bash"
      ]
    },
    {
      "outer_stage_name": "test",
      "fail_fast": false,
      "parallel_stages": [
        "Test",
        "Run"
      ]
    }
  ],
  "project_details": [
    {
      "full_repo_name": "blissnd/jenkins_pipeline_test",
      "repo_url": "https://github.com/blissnd/jenkins_pipeline_test",
      "html_url_jenkinsfile": "https://github.com/blissnd/jenkins_pipeline_test/blob/f8906d2b832a9f77ce4c4bcfa5a856567a3bb2dd/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/121729955/git/blobs/6495d341bd8f9a34107a694b65e218e11edbc6ab",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Parallel",
              "parallel": [
                {
                  "name": "windows",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "Hello Sir"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "agent": {
                    "type": "label",
                    "argument": {
                      "isLiteral": true,
                      "value": "fetch"
                    }
                  }
                },
                {
                  "name": "linux",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "Hello Sir"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "agent": {
                    "type": "any"
                  }
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "himanshushar90/HelloWorld",
      "repo_url": "https://github.com/himanshushar90/HelloWorld",
      "html_url_jenkinsfile": "https://github.com/himanshushar90/HelloWorld/blob/c9b11cba9311bbc65e6316f6f5346d024ab44c1e/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/107992353/git/blobs/c9ab82ecc0625ceca568050f106356ad3af2b388",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Ekathhe",
              "parallel": [
                {
                  "name": "parallel1",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "1"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "agent": {
                    "type": "any"
                  }
                },
                {
                  "name": "parallel2",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "2"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "agent": {
                    "type": "any"
                  }
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "ckulla/jenkins2",
      "repo_url": "https://github.com/ckulla/jenkins2",
      "html_url_jenkinsfile": "https://github.com/ckulla/jenkins2/blob/746d5d3c2b5d1ac4d3d0168b1a1a727f35cf34c1/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/88268527/git/blobs/dd54b2862ae812ff9e6beb72aaf2558fbd90454d",
      "jenkins_pipeline": [
        {
          "error": [
            "Invalid step \"parallel\" used - not allowed in this context - The parallel step can only be used as the only top-level step in a stages step block @ line 16, column 15.",
            "Invalid step \"parallel\" used - not allowed in this context - The parallel step can only be used as the only top-level step in a stages step block @ line 32, column 15."
          ]
        }
      ]
    },
    {
      "full_repo_name": "croquiscom/jenkins-test",
      "repo_url": "https://github.com/croquiscom/jenkins-test",
      "html_url_jenkinsfile": "https://github.com/croquiscom/jenkins-test/blob/17a94f55f8cd5acda068c06cc3aa62d861c283b4/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/123147052/git/blobs/2eaa1e602601916c990c73388de0120b8cbfab2c",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Build",
              "parallel": [
                {
                  "name": "Build 1",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "echo Build 1"
                              }
                            }
                          ]
                        },
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "cat Jenkinsfile"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Build 2",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "echo Build 2"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Deploy",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo Deploy"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "fragoi/dockerfiles",
      "repo_url": "https://github.com/fragoi/dockerfiles",
      "html_url_jenkinsfile": "https://github.com/fragoi/dockerfiles/blob/93d95fc9643ff75060bdd0d05b02dbf24a817bf8/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/84665455/git/blobs/b9c4a34869f04c5a38df9cf6463aa0cb7b71edae",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Build Docker Images",
              "branches": [
                {
                  "name": "Test1",
                  "steps": [
                    {
                      "name": "load",
                      "arguments": [
                        {
                          "key": "path",
                          "value": {
                            "isLiteral": true,
                            "value": "test1/Jenkinsfile"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Test2",
                  "steps": [
                    {
                      "name": "load",
                      "arguments": [
                        {
                          "key": "path",
                          "value": {
                            "isLiteral": true,
                            "value": "test2/Jenkinsfile"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Run integration tests",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Doing something"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Approve release",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Mock testing..."
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Deploy",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Mock deploy"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "zhangzening/test-jenkinsfile",
      "repo_url": "https://github.com/zhangzening/test-jenkinsfile",
      "html_url_jenkinsfile": "https://github.com/zhangzening/test-jenkinsfile/blob/1515aef7fd71f23a62a3a534115cf4190733fd05/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/116078632/git/blobs/96e23506597075cad2dfdee3c75b601d8ba3722d",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Build",
              "parallel": [
                {
                  "name": "Build",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "echo 'this is a test-jenkinsfile build'"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Test",
              "parallel": [
                {
                  "name": "Test",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "echo \"this is a test-jenkinsfile test\""
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "deved65/Second",
      "repo_url": "https://github.com/deved65/Second",
      "html_url_jenkinsfile": "https://github.com/deved65/Second/blob/a2fc7b7db01f92f6142a38ba9502dfa1085ee484/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/108224797/git/blobs/73e1f2ec7861cbd61f0ce0669abb474688d4d2c3",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Welcome",
              "parallel": [
                {
                  "name": "FirstStage",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "Hello World"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "FirstParallelStage",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "Other Hello World"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "ampcode666/prev2018",
      "repo_url": "https://github.com/ampcode666/prev2018",
      "html_url_jenkinsfile": "https://github.com/ampcode666/prev2018/blob/1c8eb73f1703be48c20da2b41ae862ce983dc07d/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/90838282/git/blobs/0d6ddcf608bea626a9ce3d154fc912f942ce10ee",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "error",
              "branches": [
                {
                  "name": "error",
                  "steps": [
                    {
                      "name": "timeout",
                      "arguments": [
                        {
                          "key": "time",
                          "value": {
                            "isLiteral": true,
                            "value": 12
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "Inka07/helloworld",
      "repo_url": "https://github.com/Inka07/helloworld",
      "html_url_jenkinsfile": "https://github.com/Inka07/helloworld/blob/899dd21a54646a4830f9e497c0ffed07f43ecc4e/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/110152341/git/blobs/adabe659c4fe670b8ee52740dafe3c426a4a9d6a",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Build",
              "parallel": [
                {
                  "name": "Build on linux",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "On Branch A"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Test on linux",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": false,
                                "value": "${test.sh}"
                              }
                            }
                          ]
                        },
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "Testing Branch A"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "failFast": true
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "linjunmin/test",
      "repo_url": "https://github.com/linjunmin/test",
      "html_url_jenkinsfile": "https://github.com/linjunmin/test/blob/eb6732af7a4c4ed3263a9266aab8bf5f0b849aa6/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/104170665/git/blobs/d5bb883f3d881fbecd9b5752c8da331dc4b36747",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Initial",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Hello"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Build",
              "branches": [
                {
                  "name": "Build",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "pwd\nls -al\ncat Jenkinsfile\nexit 0\n\n"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Bootstrap",
                  "steps": [
                    {
                      "name": "build",
                      "arguments": [
                        {
                          "key": "job",
                          "value": {
                            "isLiteral": true,
                            "value": "Github-at91bootstrap"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "john-dederer/Brettspiel",
      "repo_url": "https://github.com/john-dederer/Brettspiel",
      "html_url_jenkinsfile": "https://github.com/john-dederer/Brettspiel/blob/afeb8574484cb30a0e5764d2b914640bffa58de9/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/60341172/git/blobs/eb5dc7f3b6e1ba00271a43f7e0f876f1c6468c4d",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "error",
              "branches": [
                {
                  "name": "Stage 1",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Hello"
                          }
                        }
                      ]
                    },
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Whatup"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Stage 2",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Other Stage"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "andres-lowrie/dump",
      "repo_url": "https://github.com/andres-lowrie/dump",
      "html_url_jenkinsfile": "https://github.com/andres-lowrie/dump/blob/4562193980d001a6b022dc56af82a16b6e839f29/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/22577634/git/blobs/c6f1cf357a3b2b5218f6fade2298e1a33776dd30",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "build",
              "branches": [
                {
                  "name": "build",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "mvn --version"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "athing",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "a thing's message"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "docker",
            "argument": {
              "isLiteral": true,
              "value": "maven:3.3.3"
            }
          }
        }
      }
    },
    {
      "full_repo_name": "gabber12/shell-scripts",
      "repo_url": "https://github.com/gabber12/shell-scripts",
      "html_url_jenkinsfile": "https://github.com/gabber12/shell-scripts/blob/aa39a3a646f9575f3a3620318f001bc056c9251d/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/3540971/git/blobs/c3f4e1cae915ed64df28e336c7253066fc1233e4",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Build",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Building."
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Test",
              "branches": [
                {
                  "name": "Test",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Testing.."
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Integration Test",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Integration Test..."
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Deploy",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Deploying...."
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "rogueai/jenkins",
      "repo_url": "https://github.com/rogueai/jenkins",
      "html_url_jenkinsfile": "https://github.com/rogueai/jenkins/blob/bfc0245db81fbd8b0a57075e7e4c4ec9320f9260/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/92092236/git/blobs/ef39fa2306fb92937bbfef2b1ddccfd0963770f9",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Build",
              "branches": [
                {
                  "name": "Build",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Tigoddiri"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "SP2010",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "SP2010"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Finalise",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Done"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "azweb76/x-crypto",
      "repo_url": "https://github.com/azweb76/x-crypto",
      "html_url_jenkinsfile": "https://github.com/azweb76/x-crypto/blob/18512bcad36c678aed85ca07b736def9d4bf0cba/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/70161218/git/blobs/98e8da81915e062b0e0997a1fdf009dfbd793f3f",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Test",
              "branches": [
                {
                  "name": "Test",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo hi"
                          }
                        }
                      ]
                    },
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "hi"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Test2",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo hi"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "rbhokare145/RB-hello-world",
      "repo_url": "https://github.com/rbhokare145/RB-hello-world",
      "html_url_jenkinsfile": "https://github.com/rbhokare145/RB-hello-world/blob/ddeb89513f322c9a7fe41b20a618f35c31e8fda2/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/54822581/git/blobs/f639f3e35e59b7fea306362be6f78aeb3d95dba7",
      "jenkins_pipeline": [
        {
          "error": "unexpected char: 0x80 @ line 8, column 8."
        }
      ]
    },
    {
      "full_repo_name": "narayandas1818/Test",
      "repo_url": "https://github.com/narayandas1818/Test",
      "html_url_jenkinsfile": "https://github.com/narayandas1818/Test/blob/cc327b90343efd95c3daab7052c8728a1c4078a7/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/105802867/git/blobs/660daee1666bd8f951df10437aaf2d45c82eaedd",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "error",
              "branches": [
                {
                  "name": "error",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "hi"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "man",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "mvn -v"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "vsistek/jenkins-rpmbuild",
      "repo_url": "https://github.com/vsistek/jenkins-rpmbuild",
      "html_url_jenkinsfile": "https://github.com/vsistek/jenkins-rpmbuild/blob/19de889def096e78a5538dd066b94cd0fa8a5f48/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/98873332/git/blobs/6bc74d766dbec8e73d8adafa8b2663c63700da1d",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "rm-old",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "node",
                      "arguments": {
                        "isLiteral": true,
                        "value": "master"
                      },
                      "children": [
                        {
                          "name": "checkout",
                          "arguments": [
                            {
                              "key": "scm",
                              "value": {
                                "isLiteral": false,
                                "value": "${scm}"
                              }
                            }
                          ]
                        },
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "docker rmi jenkins-rpmbuild || true"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "parallel-demo",
              "branches": [
                {
                  "name": "Dockerfile",
                  "steps": [
                    {
                      "name": "node",
                      "arguments": {
                        "isLiteral": true,
                        "value": "master"
                      },
                      "children": [
                        {
                          "name": "checkout",
                          "arguments": [
                            {
                              "key": "scm",
                              "value": {
                                "isLiteral": false,
                                "value": "${scm}"
                              }
                            }
                          ]
                        },
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "cat Dockerfile"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Jenkinsfile",
                  "steps": [
                    {
                      "name": "node",
                      "arguments": {
                        "isLiteral": true,
                        "value": "master"
                      },
                      "children": [
                        {
                          "name": "checkout",
                          "arguments": [
                            {
                              "key": "scm",
                              "value": {
                                "isLiteral": false,
                                "value": "${scm}"
                              }
                            }
                          ]
                        },
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "cat Jenkinsfile"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "build-new",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "node",
                      "arguments": {
                        "isLiteral": true,
                        "value": "master"
                      },
                      "children": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "ls -la ; docker build ./ -t jenkins-rpmbuild"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "none"
          }
        }
      }
    },
    {
      "full_repo_name": "Jarema/db-connection-pooling-daemon",
      "repo_url": "https://github.com/Jarema/db-connection-pooling-daemon",
      "html_url_jenkinsfile": "https://github.com/Jarema/db-connection-pooling-daemon/blob/c271ebcf9c0d1384429e8f921e975a48bac9b365/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/42768295/git/blobs/2ce691880e5937f9cad967950ee44671122e5b20",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "error",
              "branches": [
                {
                  "name": "1",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "testing new pipelines"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "2",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "something in parallel?"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "sh",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "sh \"ls -la\""
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "depy-io/test-pipeline-parallel",
      "repo_url": "https://github.com/depy-io/test-pipeline-parallel",
      "html_url_jenkinsfile": "https://github.com/depy-io/test-pipeline-parallel/blob/f221a3ae884c27f51295e314dee557ea50b5d903/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/114493074/git/blobs/8a26a003889151bbc9b44cd7120a61a13a7a8f7c",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "parallel",
              "parallel": [
                {
                  "name": "windows",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "windows slave"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "agent": {
                    "type": "node",
                    "arguments": [
                      {
                        "key": "label",
                        "value": {
                          "isLiteral": true,
                          "value": "windows"
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "linux",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "linux slave"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "agent": {
                    "type": "node",
                    "arguments": [
                      {
                        "key": "label",
                        "value": {
                          "isLiteral": true,
                          "value": "linux"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "carlos-salgado-cardozo/prueba",
      "repo_url": "https://github.com/carlos-salgado-cardozo/prueba",
      "html_url_jenkinsfile": "https://github.com/carlos-salgado-cardozo/prueba/blob/8066a1d8cb8d2d232a76ede3cf7e155c0a9ced44/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/107057749/git/blobs/a95af295f0460fd62328975c1e1790aa90bee62c",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "jjjj",
              "parallel": [
                {
                  "name": "gg",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "hola"
                              }
                            }
                          ]
                        },
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "holaaaaaaaa"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "pruebaaaa",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "oeeeeeeee"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "jhdev1/Cloudbees",
      "repo_url": "https://github.com/jhdev1/Cloudbees",
      "html_url_jenkinsfile": "https://github.com/jhdev1/Cloudbees/blob/495ec783a3f1ed95b3d30be8428e7abaafecedd0/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/127185142/git/blobs/deed95763cedf5948aa84b0a13b14c70ab81e88c",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Build",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo 'test'"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Test",
              "parallel": [
                {
                  "name": "Test",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "echo 'test'"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "error",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "echo 'test2'"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "022107206/learninggit",
      "repo_url": "https://github.com/022107206/learninggit",
      "html_url_jenkinsfile": "https://github.com/022107206/learninggit/blob/603b774d5c3bdb45921d2f84be70f10598430963/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/25998781/git/blobs/fda6b4c4214995974991a830d34ca453ae215299",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "test_o",
              "branches": [
                {
                  "name": "printmesage",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "input num"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "sleep10",
                  "steps": [
                    {
                      "name": "sleep",
                      "arguments": [
                        {
                          "key": "time",
                          "value": {
                            "isLiteral": true,
                            "value": 10
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "buildjob2",
                  "steps": [
                    {
                      "name": "build",
                      "arguments": [
                        {
                          "key": "job",
                          "value": {
                            "isLiteral": true,
                            "value": "job2"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "pauloeliasjr/hello-world",
      "repo_url": "https://github.com/pauloeliasjr/hello-world",
      "html_url_jenkinsfile": "https://github.com/pauloeliasjr/hello-world/blob/dc61d953e18c592c138eeb841c2a8615e6b674ef/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/104347821/git/blobs/03c6bce6484737eb2151812ee8b68f655eb56f0a",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Build",
              "parallel": [
                {
                  "name": "Pre-build",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "docker info"
                              }
                            }
                          ]
                        },
                        {
                          "name": "fileExists",
                          "arguments": [
                            {
                              "key": "file",
                              "value": {
                                "isLiteral": true,
                                "value": "Dockerfile"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Test",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "ls -l\n"
                              }
                            }
                          ]
                        },
                        {
                          "name": "fileExists",
                          "arguments": [
                            {
                              "key": "file",
                              "value": {
                                "isLiteral": true,
                                "value": "Jenkinsfile"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Approval",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "input",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Voce aprova?"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "elleuca/dummy-jen",
      "repo_url": "https://github.com/elleuca/dummy-jen",
      "html_url_jenkinsfile": "https://github.com/elleuca/dummy-jen/blob/6d7b1381b343fba19af20c1c008782d2d8edc3b5/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/87802313/git/blobs/d77acbb673332972b6893af866b727f66b76e6c1",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Prepare",
              "branches": [
                {
                  "name": "Prepare",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo \"prepare\""
                          }
                        }
                      ]
                    },
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "this is a message"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Parallel prepare",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "parallel 1"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Build",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "build step here"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "test",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "archiveArtifacts",
                      "arguments": [
                        {
                          "key": "artifacts",
                          "value": {
                            "isLiteral": true,
                            "value": "**/*"
                          }
                        },
                        {
                          "key": "onlyIfSuccessful",
                          "value": {
                            "isLiteral": true,
                            "value": true
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "docker",
            "arguments": [
              {
                "key": "image",
                "value": {
                  "isLiteral": true,
                  "value": "ubuntu"
                }
              }
            ]
          }
        }
      }
    },
    {
      "full_repo_name": "Wizzzo/test_blue_ocean",
      "repo_url": "https://github.com/Wizzzo/test_blue_ocean",
      "html_url_jenkinsfile": "https://github.com/Wizzzo/test_blue_ocean/blob/5636ae6eb574445827ec6baac7bfcff779ac7975/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/100490162/git/blobs/40c4b37cbab049ebcf8914f51d9e9fd274580b6f",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Build",
              "branches": [
                {
                  "name": "Build",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Building.."
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Build 2",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo \"this is in parallel build\""
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Test",
              "branches": [
                {
                  "name": "Test",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Testing.."
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Test 2",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "thats is a a new message on the test step"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Deploy",
              "branches": [
                {
                  "name": "Deploy",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Deploying...."
                          }
                        }
                      ]
                    },
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "curl https://graph.facebook.com/youtube?access_token=EAADuoZCJsjN8BAFJSkvlDD3N7QtelCR4Q4trman2yWubE4pFoCQVDTs7i7HPlomTri9pU6TGuhzrlpkm1Af5qK1ffGqTpqHqpZAwU52FH2U104gFZA8E7ZC1ZBSIy23YLCuoSfI2ZCIZAE929tF8hZCUEwZAuC10tHQ4ZD"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Deploy 2",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "this is a parallel message on the deploy step build"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "curl stackoverflow and write text file",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "curl http://ori-load-balancer-1011545099.eu-west-1.elb.amazonaws.com/Boris_Beytza"
                          }
                        }
                      ]
                    },
                    {
                      "name": "writeFile",
                      "arguments": [
                        {
                          "key": "file",
                          "value": {
                            "isLiteral": true,
                            "value": "temp_file.txt"
                          }
                        },
                        {
                          "key": "text",
                          "value": {
                            "isLiteral": true,
                            "value": "this is text"
                          }
                        },
                        {
                          "key": "encoding",
                          "value": {
                            "isLiteral": true,
                            "value": "utf-8"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Post Deploy",
              "branches": [
                {
                  "name": "Post Deploy",
                  "steps": [
                    {
                      "name": "sleep",
                      "arguments": [
                        {
                          "key": "time",
                          "value": {
                            "isLiteral": true,
                            "value": 5
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Post Deploy 2",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "sleeping for 5 seconds while printing this message"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "print file to screen",
                  "steps": [
                    {
                      "name": "readFile",
                      "arguments": [
                        {
                          "key": "file",
                          "value": {
                            "isLiteral": true,
                            "value": "temp_file.txt"
                          }
                        },
                        {
                          "key": "encoding",
                          "value": {
                            "isLiteral": true,
                            "value": "utf-8"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "last step",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo hello"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "bingodevops-res/jenkins-test",
      "repo_url": "https://github.com/bingodevops-res/jenkins-test",
      "html_url_jenkinsfile": "https://github.com/bingodevops-res/jenkins-test/blob/816a984b848b15e45cc9f7ee9457b8258d2de629/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/99212642/git/blobs/565b0f3c2920c6627e297364232f993df196127a",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "test",
              "branches": [
                {
                  "name": "test",
                  "steps": [
                    {
                      "name": "build",
                      "arguments": [
                        {
                          "key": "job",
                          "value": {
                            "isLiteral": true,
                            "value": "test"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "test1.1",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo hello"
                          }
                        }
                      ]
                    },
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo ''"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "test1.2",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "hello 1.2"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "test2",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "test2"
                          }
                        }
                      ]
                    },
                    {
                      "name": "sleep",
                      "arguments": [
                        {
                          "key": "time",
                          "value": {
                            "isLiteral": true,
                            "value": 1
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "johnsheleg/TestRepo",
      "repo_url": "https://github.com/johnsheleg/TestRepo",
      "html_url_jenkinsfile": "https://github.com/johnsheleg/TestRepo/blob/346cbeb95c71b258315c1c879e5ac7c1848ec501/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/102703716/git/blobs/63f3d24fdb9f4bda30e50bf9d167b72d6c681ac9",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Sleep 5",
              "branches": [
                {
                  "name": "Sleep 5",
                  "steps": [
                    {
                      "name": "sleep",
                      "arguments": [
                        {
                          "key": "time",
                          "value": {
                            "isLiteral": true,
                            "value": 5
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Sleep 6",
                  "steps": [
                    {
                      "name": "sleep",
                      "arguments": [
                        {
                          "key": "time",
                          "value": {
                            "isLiteral": true,
                            "value": 6
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Sleep 10",
                  "steps": [
                    {
                      "name": "sleep",
                      "arguments": [
                        {
                          "key": "time",
                          "value": {
                            "isLiteral": true,
                            "value": 10
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Sleep4",
              "branches": [
                {
                  "name": "Sleep4",
                  "steps": [
                    {
                      "name": "sleep",
                      "arguments": [
                        {
                          "key": "time",
                          "value": {
                            "isLiteral": true,
                            "value": 4
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Sleep 6",
                  "steps": [
                    {
                      "name": "sleep",
                      "arguments": [
                        {
                          "key": "time",
                          "value": {
                            "isLiteral": true,
                            "value": 6
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "mniskane/test1",
      "repo_url": "https://github.com/mniskane/test1",
      "html_url_jenkinsfile": "https://github.com/mniskane/test1/blob/6df1db70ffdc631043e9b3472d9ef29b73a0e572/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/89462965/git/blobs/59fb1a1af9aa0915d3b710ff2002638bd41ebe47",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "error",
              "branches": [
                {
                  "name": "Stage one",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Stage One"
                          }
                        }
                      ]
                    },
                    {
                      "name": "sleep",
                      "arguments": [
                        {
                          "key": "time",
                          "value": {
                            "isLiteral": true,
                            "value": 1
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Stage one parallel",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Step One parallel thingy"
                          }
                        }
                      ]
                    },
                    {
                      "name": "sleep",
                      "arguments": [
                        {
                          "key": "time",
                          "value": {
                            "isLiteral": true,
                            "value": 2
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "stage kaksi",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "sleep",
                      "arguments": [
                        {
                          "key": "time",
                          "value": {
                            "isLiteral": true,
                            "value": 3
                          }
                        }
                      ]
                    },
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "hello"
                          }
                        }
                      ]
                    },
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "env\nwhoami"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "environment": [
            {
              "key": "fooname",
              "value": {
                "isLiteral": true,
                "value": "barvalue"
              }
            }
          ],
          "agent": {
            "type": "node",
            "arguments": [
              {
                "key": "label",
                "value": {
                  "isLiteral": true,
                  "value": "eecloud"
                }
              }
            ]
          }
        }
      }
    },
    {
      "full_repo_name": "dwalldorf/track-my-fuel",
      "repo_url": "https://github.com/dwalldorf/track-my-fuel",
      "html_url_jenkinsfile": "https://github.com/dwalldorf/track-my-fuel/blob/8a98bb84b831b040f19c9ade5694bca084460f13/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/86620605/git/blobs/294c0840c21089bea15b42bd67f9e4cdab6d55f4",
      "jenkins_pipeline": [
        {
          "error": [
            "Tool type \"maven\" does not have an install of \"mvn3\" configured - did you mean \"Jenkins_maven\"? @ line 46, column 11.",
            "Tool type \"jdk\" does not have an install of \"jdk8\" configured - did you mean \"null\"? @ line 47, column 9."
          ]
        }
      ]
    },
    {
      "full_repo_name": "hasnat/stateless-jenkins",
      "repo_url": "https://github.com/hasnat/stateless-jenkins",
      "html_url_jenkinsfile": "https://github.com/hasnat/stateless-jenkins/blob/03ba5efdb91d2993c9a75b6c12302362d068ab99/projects/example3/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/122525316/git/blobs/2e9513a86da0b9a83ffd5d73d8c5dae1a7c9af22",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "test",
              "parallel": [
                {
                  "name": "test-front-end",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "TESTING front-end"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "test-back-end",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "TESTING back-end"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "fviana/pipeline",
      "repo_url": "https://github.com/fviana/pipeline",
      "html_url_jenkinsfile": "https://github.com/fviana/pipeline/blob/c1cda008c7a7f597477787355102fa21dba8026f/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/94396395/git/blobs/59c9b60b2181ff1fdce1606d11f29fcd2b0dad76",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Test",
              "branches": [
                {
                  "name": "Test",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Testandoooo"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Test2",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo \"Testandooooo\""
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "environment": [
            {
              "key": "name",
              "value": {
                "isLiteral": true,
                "value": "test"
              }
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "keita69/jenkins",
      "repo_url": "https://github.com/keita69/jenkins",
      "html_url_jenkinsfile": "https://github.com/keita69/jenkins/blob/b0edcf52dcd31eacef261191cb8279286d154026/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/101468789/git/blobs/3c64bcaa3d4fb98a69645551810f09ac4b7b0b3f",
      "jenkins_pipeline": [
        {
          "error": "Invalid step \"parallel\" used - not allowed in this context - The parallel step can only be used as the only top-level step in a stages step block @ line 7, column 17."
        }
      ]
    },
    {
      "full_repo_name": "sn-x/k8s-test",
      "repo_url": "https://github.com/sn-x/k8s-test",
      "html_url_jenkinsfile": "https://github.com/sn-x/k8s-test/blob/392c548f3b1a0e9be6e05a55f2726af1c34ad9dd/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/127017032/git/blobs/1ba8046524cb7641a150d0bc2bb8365e04018fee",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "test1",
              "parallel": [
                {
                  "name": "test1",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "hostname && uptime"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "dfdff",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sleep",
                          "arguments": [
                            {
                              "key": "time",
                              "value": {
                                "isLiteral": true,
                                "value": 5
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "dwalldorf/track-my-time",
      "repo_url": "https://github.com/dwalldorf/track-my-time",
      "html_url_jenkinsfile": "https://github.com/dwalldorf/track-my-time/blob/91615c88624d785b8932ca7950bca9eb39d9bd1e/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/85984273/git/blobs/294c0840c21089bea15b42bd67f9e4cdab6d55f4",
      "jenkins_pipeline": [
        {
          "error": [
            "Tool type \"maven\" does not have an install of \"mvn3\" configured - did you mean \"Jenkins_maven\"? @ line 46, column 11.",
            "Tool type \"jdk\" does not have an install of \"jdk8\" configured - did you mean \"null\"? @ line 47, column 9."
          ]
        }
      ]
    },
    {
      "full_repo_name": "blichev/jenkinspipeline",
      "repo_url": "https://github.com/blichev/jenkinspipeline",
      "html_url_jenkinsfile": "https://github.com/blichev/jenkinspipeline/blob/3990ee38e9c1195cf04b01b67cca2da49e8ff688/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/97730388/git/blobs/b05631ba192ba6ec3d35c7dd990a351168f3ef4f",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "test",
              "branches": [
                {
                  "name": "test",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "java -version"
                          }
                        }
                      ]
                    },
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "uname -a"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "stage 2",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Testing test"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "DeathSy/nextjs-express-pipeline",
      "repo_url": "https://github.com/DeathSy/nextjs-express-pipeline",
      "html_url_jenkinsfile": "https://github.com/DeathSy/nextjs-express-pipeline/blob/5abc7db3a30e7bec687e1fe47aa5c21bfdaba9f1/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/121957785/git/blobs/8eb4bfa918437443be07f0d7936618c423a138af",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "APP PREBUILD",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "make prebuild"
                          }
                        }
                      ]
                    }
                  ]
                }
              ],
              "agent": {
                "type": "any"
              }
            },
            {
              "name": "APP INSTALL",
              "parallel": [
                {
                  "name": "API INSTALL",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "make api-install"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "agent": {
                    "type": "any"
                  }
                },
                {
                  "name": "SITE INSTALL",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "make site-install"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "agent": {
                    "type": "any"
                  }
                }
              ]
            },
            {
              "name": "APP LINT",
              "parallel": [
                {
                  "name": "API LINT",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "make api-lint"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "agent": {
                    "type": "any"
                  }
                },
                {
                  "name": "SITE LINT",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "make site-lint"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "agent": {
                    "type": "any"
                  }
                }
              ]
            },
            {
              "name": "APP UNIT TEST",
              "parallel": [
                {
                  "name": "API UNIT TEST",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "make api-unit-test node_env=test"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "agent": {
                    "type": "any"
                  }
                },
                {
                  "name": "SITE UNIT TEST",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "make site-unit-test node_env=test"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "agent": {
                    "type": "any"
                  }
                }
              ]
            },
            {
              "name": "APP BUILD",
              "parallel": [
                {
                  "name": "API BUILD",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "make api-image"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "agent": {
                    "type": "any"
                  }
                },
                {
                  "name": "SITE BUILD",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "make site-build"
                              }
                            }
                          ]
                        },
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "make site-image"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "agent": {
                    "type": "any"
                  }
                }
              ]
            }
          ],
          "agent": {
            "type": "none"
          }
        }
      }
    },
    {
      "full_repo_name": "arm-conda-forge/pypot-feedstock",
      "repo_url": "https://github.com/arm-conda-forge/pypot-feedstock",
      "html_url_jenkinsfile": "https://github.com/arm-conda-forge/pypot-feedstock/blob/0ac51d0b06aecc79b57667308cde2fcee679c5ea/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/79281902/git/blobs/8bd0b1336230aa301ab6f90d7c5cca8443aed4fd",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "build",
              "branches": [
                {
                  "name": "armv7",
                  "steps": [
                    {
                      "name": "node",
                      "arguments": {
                        "isLiteral": true,
                        "value": "armv7"
                      },
                      "children": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "conda build recipe"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "dringzzz/mymatch",
      "repo_url": "https://github.com/dringzzz/mymatch",
      "html_url_jenkinsfile": "https://github.com/dringzzz/mymatch/blob/c796a845bf273fd321a7fb98d62666757915d54a/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/100433877/git/blobs/9b65476c6a8bbd9df66cdb3350bd82d85742a792",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "error",
              "branches": [
                {
                  "name": "Build",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "TEST"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Test",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Test"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "ramalhais/code",
      "repo_url": "https://github.com/ramalhais/code",
      "html_url_jenkinsfile": "https://github.com/ramalhais/code/blob/00807236e0f111bff9542340793487257f676a81/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/74247066/git/blobs/158448bfd9c4bfb4bc1559cd733ab77138b36ad3",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "PList Files",
              "parallel": [
                {
                  "name": "List Files",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "date; ls -laR; date"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "List Files2",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "date; ls -laR; date"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Print Environment",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "date; env; date; sleep 5; date"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Check disk space",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "date; df -h; date"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Save Artifact",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "archiveArtifacts",
                      "arguments": [
                        {
                          "key": "artifacts",
                          "value": {
                            "isLiteral": true,
                            "value": "Jenkinsfile"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "environment": [
            {
              "key": "dbConnectionString",
              "value": {
                "isLiteral": true,
                "value": "mysql://localhost/bla"
              }
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "nagendrashiromani/test",
      "repo_url": "https://github.com/nagendrashiromani/test",
      "html_url_jenkinsfile": "https://github.com/nagendrashiromani/test/blob/b2d7d9f905cdee75dad05087fbc1f7a7407e30c4/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/98106948/git/blobs/8f4b5b613f96d72eb20f8aa7168034604a591592",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "First Stage",
              "branches": [
                {
                  "name": "First Stage",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo \"Hello world\""
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Parallel First",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo \"parallel first\""
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Second Stage",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo \"second step\""
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "FrantaM/blue",
      "repo_url": "https://github.com/FrantaM/blue",
      "html_url_jenkinsfile": "https://github.com/FrantaM/blue/blob/452c10afd79bb3853427825dd3db56a77a2a6e81/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/92045151/git/blobs/bfa30c1723b421beba8afe4dfa1b8bf045f3d79b",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Build",
              "branches": [
                {
                  "name": "Build X",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "1"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "What?",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "2"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Test",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "3"
                          }
                        }
                      ]
                    },
                    {
                      "name": "waitUntil",
                      "arguments": [],
                      "children": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "4"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "none"
          }
        }
      }
    },
    {
      "full_repo_name": "akhil778/EMSlatest",
      "repo_url": "https://github.com/akhil778/EMSlatest",
      "html_url_jenkinsfile": "https://github.com/akhil778/EMSlatest/blob/ef9590c9344dd0f04f7b0ea9b5acca9b31938c50/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/83405680/git/blobs/da004284fbf9ae7e604a8a9667f8143c7a64f420",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Build",
              "branches": [
                {
                  "name": "Build",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "build message"
                          }
                        }
                      ]
                    },
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "npm install"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Build2",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "build for master"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "erickdavi/vlan",
      "repo_url": "https://github.com/erickdavi/vlan",
      "html_url_jenkinsfile": "https://github.com/erickdavi/vlan/blob/7c7e0bdc63fe9072b468079ba96e0ec0dff76181/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/99311908/git/blobs/79e2d2628ee8e5b3908f27da0fae2a75110e0387",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "build",
              "branches": [
                {
                  "name": "build",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "ls -l"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "testando",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "./vcmd list"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "macg33zr/jenkinsBlue",
      "repo_url": "https://github.com/macg33zr/jenkinsBlue",
      "html_url_jenkinsfile": "https://github.com/macg33zr/jenkinsBlue/blob/21210db492a48df68a429ea0a1838afcfe440598/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/83668073/git/blobs/24a27f22ad73f36cbc518780119049cce0b2f2ac",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Setup",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "script",
                      "arguments": [
                        {
                          "key": "scriptBlock",
                          "value": {
                            "isLiteral": true,
                            "value": "parallelCodeMap['foo'] = {\n                        echo \"Running foo branch..\"\n                    }\n\n                    parallelCodeMap['bar'] = {\n                        echo \"Running bar branch...\"\n                    }"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Dynamic",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "script",
                      "arguments": [
                        {
                          "key": "scriptBlock",
                          "value": {
                            "isLiteral": true,
                            "value": "parallel( parallelCodeMap )"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Static",
              "branches": [
                {
                  "name": "branch_1",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Running static branch 1"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "branch_2",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Running static branch 2"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "rafaelpsouza/UI",
      "repo_url": "https://github.com/rafaelpsouza/UI",
      "html_url_jenkinsfile": "https://github.com/rafaelpsouza/UI/blob/d666b7a19b8314b4070ac6b22962f6d58bbcd9ea/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/72578572/git/blobs/010c180b72924c20a35fba992b733c4537a9772b",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "b1",
              "branches": [
                {
                  "name": "b1",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "ls"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "b2",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "hey"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "p3",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "p3"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "pawelkiszka/FootballSimulator",
      "repo_url": "https://github.com/pawelkiszka/FootballSimulator",
      "html_url_jenkinsfile": "https://github.com/pawelkiszka/FootballSimulator/blob/1cd62ad8ec91089756d6558a5a573062452e4ed4/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/84491630/git/blobs/2e6caca049b390d9d82b316f376171e31f7468c3",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "error",
              "branches": [
                {
                  "name": "DEV",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Message"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Dev",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Message"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "droren/try_git",
      "repo_url": "https://github.com/droren/try_git",
      "html_url_jenkinsfile": "https://github.com/droren/try_git/blob/727dfd5e6bb55fdcffa9e81b571dac908d8fd8ea/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/4970109/git/blobs/840740c2212e1c722018f9811efa531d8d66bb07",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Check Repo",
              "parallel": [
                {
                  "name": "Check Repo",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "Welcome"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "List contents",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "ws",
                          "arguments": [
                            {
                              "key": "dir",
                              "value": {
                                "isLiteral": true,
                                "value": "mydir"
                              }
                            }
                          ],
                          "children": [
                            {
                              "name": "sh",
                              "arguments": [
                                {
                                  "key": "script",
                                  "value": {
                                    "isLiteral": true,
                                    "value": "ls -Al"
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "error",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Exit"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "mabombo/jenkins",
      "repo_url": "https://github.com/mabombo/jenkins",
      "html_url_jenkinsfile": "https://github.com/mabombo/jenkins/blob/85babb55509e074c7ac934343c1ed46a93ef8eea/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/120087756/git/blobs/11fd7fc4c3bbc8eedf4c334afe7ee944c5664754",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "1",
              "parallel": [
                {
                  "name": "1",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "echo \"Ciao\""
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "2",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sleep",
                          "arguments": [
                            {
                              "key": "time",
                              "value": {
                                "isLiteral": true,
                                "value": 50
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "ijyun/pipeline",
      "repo_url": "https://github.com/ijyun/pipeline",
      "html_url_jenkinsfile": "https://github.com/ijyun/pipeline/blob/5a4748f15525fa9a07d45f7a9d9320f53d0e69a9/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/87378302/git/blobs/c0e304bc256cd1f58ac88a7df634ff3f1d1b296e",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "hello",
              "branches": [
                {
                  "name": "hello",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "hello"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "world",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "world"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "jenkins",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "jenkins"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "error",
              "branches": [
                {
                  "name": "hi",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "hi"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "ha",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "ha"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "end",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "end"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "rrrrtt/ProyectoIntegracion",
      "repo_url": "https://github.com/rrrrtt/ProyectoIntegracion",
      "html_url_jenkinsfile": "https://github.com/rrrrtt/ProyectoIntegracion/blob/0c5af06c42be7c3982b627dd44618ef1c9cb3e24/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/109310471/git/blobs/623b80dc981f2ec7f98d28990ac271506d61c658",
      "jenkins_pipeline": [
        {
          "error": "unable to resolve class Declarative \n @ line 1, column 26."
        }
      ]
    },
    {
      "full_repo_name": "Nols1000/teamspeak-client-query",
      "repo_url": "https://github.com/Nols1000/teamspeak-client-query",
      "html_url_jenkinsfile": "https://github.com/Nols1000/teamspeak-client-query/blob/f751737620f6660f2345c8f57e4b5957921504be/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/77348517/git/blobs/4150b6183d96c5e210bac3b06e4bf14cab78296a",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Test",
              "branches": [
                {
                  "name": "Test",
                  "steps": [
                    {
                      "name": "sleep",
                      "arguments": [
                        {
                          "key": "time",
                          "value": {
                            "isLiteral": true,
                            "value": 10
                          }
                        }
                      ]
                    },
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Test Done"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "error",
                  "steps": [
                    {
                      "name": "sleep",
                      "arguments": [
                        {
                          "key": "time",
                          "value": {
                            "isLiteral": true,
                            "value": 5
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "End",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "End"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "fyqls/MapReduceProject",
      "repo_url": "https://github.com/fyqls/MapReduceProject",
      "html_url_jenkinsfile": "https://github.com/fyqls/MapReduceProject/blob/301d1ce22b167f43c1bda2fdf03b491e8911242a/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/46124675/git/blobs/f5277a45f479f354090c3c7aad9bd9db6eca2b8a",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "error",
              "branches": [
                {
                  "name": "xx1",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo \"hello world..\""
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "xx2",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "hahaha"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "yyy1",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "xxxxx"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "none"
          }
        }
      }
    },
    {
      "full_repo_name": "jaohaohsuan/heketi-kubernetes-deploy",
      "repo_url": "https://github.com/jaohaohsuan/heketi-kubernetes-deploy",
      "html_url_jenkinsfile": "https://github.com/jaohaohsuan/heketi-kubernetes-deploy/blob/52b90a7a05430c6540f318d3ab4e287cd2f19f14/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/78762616/git/blobs/f316fd29a8393763b8b1b80865ca67a5bafffdc9",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "build",
              "branches": [
                {
                  "name": "build",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "du -sh ."
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "test",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "let's test"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "wbrucelee/test",
      "repo_url": "https://github.com/wbrucelee/test",
      "html_url_jenkinsfile": "https://github.com/wbrucelee/test/blob/f10e854f010e6854659f215dd26d6a2c08d3766e/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/108428994/git/blobs/3d86487db9237091f2a3945d8637c11c1b971d17"
    },
    {
      "full_repo_name": "IlijaAlchemy/test_jenkins_deploy",
      "repo_url": "https://github.com/IlijaAlchemy/test_jenkins_deploy",
      "html_url_jenkinsfile": "https://github.com/IlijaAlchemy/test_jenkins_deploy/blob/8c3496f3e12016a829c6660312fe3c2c7853d819/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/107417927/git/blobs/c6e799de838168e2b649fc952f607750ef4f9e34"
    },
    {
      "full_repo_name": "vemuri1256/chef-repo",
      "repo_url": "https://github.com/vemuri1256/chef-repo",
      "html_url_jenkinsfile": "https://github.com/vemuri1256/chef-repo/blob/eba431e2654759e78bbef621b6936297ad7e4405/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/64272136/git/blobs/a466ed824310d874b8051445fde34b9445ea02b8"
    },
    {
      "full_repo_name": "jkworth/testing",
      "repo_url": "https://github.com/jkworth/testing",
      "html_url_jenkinsfile": "https://github.com/jkworth/testing/blob/253d28c0e362c47e886f70b66dc6137bc375108e/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/100303505/git/blobs/0d4ee826c6113bb5df78ce625860535cdf59812f"
    },
    {
      "full_repo_name": "nyanim/git-test",
      "repo_url": "https://github.com/nyanim/git-test",
      "html_url_jenkinsfile": "https://github.com/nyanim/git-test/blob/fdbc691804f3f05d46bf88f8803bcd3045ebbab7/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/66852079/git/blobs/27f1ee66d849f2e6b19caf297ce71a618f95cb1a"
    },
    {
      "full_repo_name": "leshcat/eboss",
      "repo_url": "https://github.com/leshcat/eboss",
      "html_url_jenkinsfile": "https://github.com/leshcat/eboss/blob/1c2a819086f296578586b022adef04feacc9e1f1/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/43595722/git/blobs/e4e3d2a7642c613830fe97a90c4c3b3a155735c3"
    },
    {
      "full_repo_name": "carpenterjc/LD26",
      "repo_url": "https://github.com/carpenterjc/LD26",
      "html_url_jenkinsfile": "https://github.com/carpenterjc/LD26/blob/75c7d1e540f02062b4501dc56b00bbfe05f8bfe4/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/9712685/git/blobs/69a99a46eafb704ad9e8e873b80ed559c0be46f1"
    },
    {
      "full_repo_name": "PrabhakaranAnnadurai/demoproject2",
      "repo_url": "https://github.com/PrabhakaranAnnadurai/demoproject2",
      "html_url_jenkinsfile": "https://github.com/PrabhakaranAnnadurai/demoproject2/blob/5d1e867a9ccefd86b4762f9a0d2b87c8397d3d87/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/100055405/git/blobs/e737f0a6b97c4cd32a5a2f1c8194303554165662"
    },
    {
      "full_repo_name": "gguimp/laravel-adminlte",
      "repo_url": "https://github.com/gguimp/laravel-adminlte",
      "html_url_jenkinsfile": "https://github.com/gguimp/laravel-adminlte/blob/388882a87b20cd5f4e345463513fd95a2f1b7b85/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/68868257/git/blobs/6eaad65fba729c0086c96ef45d8e2312a61cbfd7"
    },
    {
      "full_repo_name": "dcmcshan/jci",
      "repo_url": "https://github.com/dcmcshan/jci",
      "html_url_jenkinsfile": "https://github.com/dcmcshan/jci/blob/7362f0c44b1ee20adfb3e6241e2fcccc8946fe88/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/99030019/git/blobs/e817d53edc65c2962dd89f6c7c28579f713b52d2"
    },
    {
      "full_repo_name": "kaushikCanada/boring-app",
      "repo_url": "https://github.com/kaushikCanada/boring-app",
      "html_url_jenkinsfile": "https://github.com/kaushikCanada/boring-app/blob/f4539c29e3feb987a976564914ff81bb42b28e3e/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/132020552/git/blobs/e478243f740b7e79bb77b32a1445e8381978d6b0"
    },
    {
      "full_repo_name": "Irfan0869/MavenProj",
      "repo_url": "https://github.com/Irfan0869/MavenProj",
      "html_url_jenkinsfile": "https://github.com/Irfan0869/MavenProj/blob/2aebf97020eb79183ff1722fc13cdacb75cc4986/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/124319591/git/blobs/99651c8504fb70fe6a37d62de97a307e9bface8f"
    },
    {
      "full_repo_name": "multibranchorg/justreadme",
      "repo_url": "https://github.com/multibranchorg/justreadme",
      "html_url_jenkinsfile": "https://github.com/multibranchorg/justreadme/blob/b05210435747d6e3ffc6f2449404f4f8cb250096/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/84497629/git/blobs/370a36c8f5dea1a71ef1456e73f4d8e2f5436bfc"
    },
    {
      "full_repo_name": "basvankester/docker-whale",
      "repo_url": "https://github.com/basvankester/docker-whale",
      "html_url_jenkinsfile": "https://github.com/basvankester/docker-whale/blob/afc9d961dc7d8cdd4ed5f6102c074bfe29490810/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/87416888/git/blobs/29f1a12bf6f2470e5fe7b1cbcd9cff9cbb1f9a0a"
    },
    {
      "full_repo_name": "EiChr/demo01",
      "repo_url": "https://github.com/EiChr/demo01",
      "html_url_jenkinsfile": "https://github.com/EiChr/demo01/blob/e4071a7cab59874d5a4c6b4cba2e0a9acec5b089/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/109397264/git/blobs/ace420d1a210bb9dadcb6450c647b0a76adf560c"
    },
    {
      "full_repo_name": "autarchprinceps/Heapsort",
      "repo_url": "https://github.com/autarchprinceps/Heapsort",
      "html_url_jenkinsfile": "https://github.com/autarchprinceps/Heapsort/blob/8dc7816f4f1f05d5e16a5af4f285c2ce872a3642/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/4818120/git/blobs/f543d7e7deed0f3f7b0d92cf8d80b10616871ca9"
    },
    {
      "full_repo_name": "zhiyxu/blue",
      "repo_url": "https://github.com/zhiyxu/blue",
      "html_url_jenkinsfile": "https://github.com/zhiyxu/blue/blob/a241ae1b8129d9cdebf89e44c4db7f53a7a6c489/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/118846768/git/blobs/35f90ffabe1395c7946787a529603ad2291bf1f3"
    },
    {
      "full_repo_name": "u10/xchat",
      "repo_url": "https://github.com/u10/xchat",
      "html_url_jenkinsfile": "https://github.com/u10/xchat/blob/087ef17def956b611fe844c4beb18b3f5c26df62/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/63202100/git/blobs/40075448642ee294dc570bbbccef9e1807fbc977"
    },
    {
      "full_repo_name": "kyo88/jenkins-pipeline",
      "repo_url": "https://github.com/kyo88/jenkins-pipeline",
      "html_url_jenkinsfile": "https://github.com/kyo88/jenkins-pipeline/blob/32b6d4388b66962dc1eb9cd50061c7eecaccbd8f/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/109462772/git/blobs/a3f38f8f12f94b92c9fe0d6ef73cee2b881c6985"
    },
    {
      "full_repo_name": "mark-zhao/docker",
      "repo_url": "https://github.com/mark-zhao/docker",
      "html_url_jenkinsfile": "https://github.com/mark-zhao/docker/blob/65dfc99a90e29e9e225584b7aafd2f3a6c859daa/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/58898492/git/blobs/fce1b58faadfa3f45b0504747deaf3ff37a640bc"
    },
    {
      "full_repo_name": "devopscoaching101/maven",
      "repo_url": "https://github.com/devopscoaching101/maven",
      "html_url_jenkinsfile": "https://github.com/devopscoaching101/maven/blob/522d52bb82a8d398c9a87b2af96b2b1f4d2cbf33/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/123615486/git/blobs/f0f6569e16151e441eb247d2456202a62068c946"
    },
    {
      "full_repo_name": "munkyjunky/jenkinsfile-test",
      "repo_url": "https://github.com/munkyjunky/jenkinsfile-test",
      "html_url_jenkinsfile": "https://github.com/munkyjunky/jenkinsfile-test/blob/346ad9fa54a0e11e1cfd4fdb59f3b815641a5829/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/126495724/git/blobs/6a962c382eaa640b7ac28796342b005e9046fb98"
    },
    {
      "full_repo_name": "demersal/estruturaDados",
      "repo_url": "https://github.com/demersal/estruturaDados",
      "html_url_jenkinsfile": "https://github.com/demersal/estruturaDados/blob/1abd5abbd3a6d3f2e25bc07ce20b0dddf95d2033/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/33898109/git/blobs/8b65efb1de430307011507018573f13e2a8350e5"
    },
    {
      "full_repo_name": "jbm1182/Test_Repo",
      "repo_url": "https://github.com/jbm1182/Test_Repo",
      "html_url_jenkinsfile": "https://github.com/jbm1182/Test_Repo/blob/e37749f7917445b9d85b192c7883c516f71ce198/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/132630096/git/blobs/06314f4b5769413b2e5c566772e298169d92cb71"
    },
    {
      "full_repo_name": "jeffy555/Python",
      "repo_url": "https://github.com/jeffy555/Python",
      "html_url_jenkinsfile": "https://github.com/jeffy555/Python/blob/9aca807a1099a6a3f763d191163a25e7ee9c00ce/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/86233147/git/blobs/61d05f78069072f0dc0c921c5a4fab4e447a8520"
    },
    {
      "full_repo_name": "dingy1992/testproject",
      "repo_url": "https://github.com/dingy1992/testproject",
      "html_url_jenkinsfile": "https://github.com/dingy1992/testproject/blob/e3eb05d012c994b6e108a65d0b2e66039a64db8a/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/104245946/git/blobs/b36647658017f221eecae8ac4bd3481d82ef0e69"
    },
    {
      "full_repo_name": "Bharani77/FirstGroovy",
      "repo_url": "https://github.com/Bharani77/FirstGroovy",
      "html_url_jenkinsfile": "https://github.com/Bharani77/FirstGroovy/blob/f3f549ad00fe0fb2505a592b8ac6f7c8c98deead/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/89150173/git/blobs/d6fb8c6197210d058896243825d7fff805713508"
    },
    {
      "full_repo_name": "kiguy/demo",
      "repo_url": "https://github.com/kiguy/demo",
      "html_url_jenkinsfile": "https://github.com/kiguy/demo/blob/a03b150938699a1a62bd3c5366334bfb4ace10ae/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/119387719/git/blobs/6299354ac8e52d1be4912536c16d99b66ea8d058"
    },
    {
      "full_repo_name": "nadeembhatti1970/sn",
      "repo_url": "https://github.com/nadeembhatti1970/sn",
      "html_url_jenkinsfile": "https://github.com/nadeembhatti1970/sn/blob/b61393f5c0969b4827a9d7012439aaab2a97e972/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/122646529/git/blobs/15f3c00b336e4006af44159bc8ef580ca283b212",
      "jenkins_pipeline": [
        {
          "error": [
            "Expected string literal @ line 7, column 17.",
            "Only \"agent none\", \"agent any\" or \"agent {...}\" are allowed. @ line 7, column 11.",
            "Expected string literal @ line 11, column 17.",
            "Only \"agent none\", \"agent any\" or \"agent {...}\" are allowed. @ line 11, column 11.",
            "No \"steps\" or \"parallel\" to execute within stage \"Build 1\" @ line 6, column 9.",
            "No agent type specified. Must be one of [docker, dockerfile, label, any, none] @ line 7, column 11.",
            "No \"steps\" or \"parallel\" to execute within stage \"Build 2\" @ line 10, column 9.",
            "No agent type specified. Must be one of [docker, dockerfile, label, any, none] @ line 11, column 11."
          ]
        }
      ]
    },
    {
      "full_repo_name": "victor-moreno/blueocean",
      "repo_url": "https://github.com/victor-moreno/blueocean",
      "html_url_jenkinsfile": "https://github.com/victor-moreno/blueocean/blob/6c7b415c4e4710928fc0c069011d3b2554ac0330/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/90790230/git/blobs/d10e8021690188294f54f5019b4c041120b86b1b",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "pwd",
              "branches": [
                {
                  "name": "pwd",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "pwd"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "ls",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "ls -la"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "echo",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "end"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "denden-oss/pipeline",
      "repo_url": "https://github.com/denden-oss/pipeline",
      "html_url_jenkinsfile": "https://github.com/denden-oss/pipeline/blob/158d2de3c1af0fa8fb5147326eeb39a29ddd9eea/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/102237972/git/blobs/387c312a22839abc96978c6de4e176797a6ca21f",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Starting",
              "parallel": [
                {
                  "name": "Starting",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "Starting Build"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Parallel Start",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "Paralleling man ohhh"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Build",
              "parallel": [
                {
                  "name": "Build",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "Hello from build"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "parallel Build",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "Parallel build ..."
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Test",
              "parallel": [
                {
                  "name": "Test",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "Testing Testing 123"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Parallel Test ...",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "parallel test"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Deploy",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Deploy something"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "environment": [
            {
              "key": "aa",
              "value": {
                "isLiteral": true,
                "value": "aa"
              }
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "tungpt00179/myrepo",
      "repo_url": "https://github.com/tungpt00179/myrepo",
      "html_url_jenkinsfile": "https://github.com/tungpt00179/myrepo/blob/00609b9e0ca37f8b480ac99e9c533b0178843dc7/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/53238094/git/blobs/bd6376f9b2b5c12d9a645ebbf09afd7a2716a7bd",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "error",
              "branches": [
                {
                  "name": "a",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "a"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "error",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "aaaa"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "de",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "aaaaa"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "huangzulin/k8s-tomcat-hello",
      "repo_url": "https://github.com/huangzulin/k8s-tomcat-hello",
      "html_url_jenkinsfile": "https://github.com/huangzulin/k8s-tomcat-hello/blob/3f5529a227e4eb507e0e71b4e75a28f23241304a/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/130438419/git/blobs/96f98960b9e0a83f4e1ae575a4a5cb3403993c9b",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "stage 1",
              "parallel": [
                {
                  "name": "print",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "Hello world!"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "error",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "echo \"i am script\""
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "venkatthatavarth/WebApp",
      "repo_url": "https://github.com/venkatthatavarth/WebApp",
      "html_url_jenkinsfile": "https://github.com/venkatthatavarth/WebApp/blob/6c62f1005e03bab0ee704cbd904e14e54ccf14a8/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/132477648/git/blobs/3d54177202a055ce0a421f40259997e89116013f",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "build",
              "parallel": [
                {
                  "name": "build",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "bat",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "mvn clean deploy"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "parallel",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "parallel"
                              }
                            }
                          ]
                        },
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "parallel"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "yanscnu/web",
      "repo_url": "https://github.com/yanscnu/web",
      "html_url_jenkinsfile": "https://github.com/yanscnu/web/blob/e94d49d81c03475eb2fdb942907aa9434b9b5fa5/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/53916034/git/blobs/0e2c8db3441c99e0f4075fbeb483019ee080ba3f",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "error",
              "branches": [
                {
                  "name": "test111",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo 111"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "test222",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo 222"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "j123/lunch-menu",
      "repo_url": "https://github.com/j123/lunch-menu",
      "html_url_jenkinsfile": "https://github.com/j123/lunch-menu/blob/173df15e0a716d8747c07297bc1dd843e6420715/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/68797866/git/blobs/1fb9cc1236ffb208f6ec00d60474df0ac5b56daa",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "error",
              "branches": [
                {
                  "name": "stage1",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "1"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "stage2",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "2"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "stage3",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "sleep",
                      "arguments": [
                        {
                          "key": "time",
                          "value": {
                            "isLiteral": true,
                            "value": 10
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "stage4",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "3"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "fgazvini/parallel-pipeline",
      "repo_url": "https://github.com/fgazvini/parallel-pipeline",
      "html_url_jenkinsfile": "https://github.com/fgazvini/parallel-pipeline/blob/dd1b8a576c7666a6620b3d9babb79618cf1c012d/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/110377007/git/blobs/78286d27f5a485a64d56b7c27f7ef1ca66abdb27",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "foo",
              "branches": [
                {
                  "name": "first",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "First branch"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "second",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Second branch"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "none"
          }
        }
      }
    },
    {
      "full_repo_name": "MCardenasBlanco/RepoB",
      "repo_url": "https://github.com/MCardenasBlanco/RepoB",
      "html_url_jenkinsfile": "https://github.com/MCardenasBlanco/RepoB/blob/a9cdbd5db455c0832e3279827dc27bb40b63ccbd/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/87654001/git/blobs/3fb3cc91123e690384646d39805ae3a0b46f68df",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Build",
              "branches": [
                {
                  "name": "Build",
                  "steps": [
                    {
                      "name": "sleep",
                      "arguments": [
                        {
                          "key": "time",
                          "value": {
                            "isLiteral": true,
                            "value": 3
                          }
                        }
                      ]
                    },
                    {
                      "name": "checkpoint",
                      "arguments": {
                        "isLiteral": true,
                        "value": "Build"
                      }
                    }
                  ]
                },
                {
                  "name": "Parallel",
                  "steps": [
                    {
                      "name": "sleep",
                      "arguments": [
                        {
                          "key": "time",
                          "value": {
                            "isLiteral": true,
                            "value": 4
                          }
                        }
                      ]
                    },
                    {
                      "name": "checkpoint",
                      "arguments": {
                        "isLiteral": true,
                        "value": "Parallel"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "serhio83/j-pipeline-tst",
      "repo_url": "https://github.com/serhio83/j-pipeline-tst",
      "html_url_jenkinsfile": "https://github.com/serhio83/j-pipeline-tst/blob/a8ffb287b5960c74d0da3d8bcbd45a3a6264e3ea/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/125217130/git/blobs/e4010bd14762acd1f1fb66797375e7904338b4af",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "stage1",
              "parallel": [
                {
                  "name": "stage1",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "pwd"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "parallel stage1",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "It works in parallel"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "stage 2",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "ls -la"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "HemaGRepo/Jan03Repo2",
      "repo_url": "https://github.com/HemaGRepo/Jan03Repo2",
      "html_url_jenkinsfile": "https://github.com/HemaGRepo/Jan03Repo2/blob/0488660d017aa34fd6897228133da4b8d8fda4f3/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/116115811/git/blobs/61eec53bc1bc78804040b24b736be1d891fa6015",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Group Deployments",
              "parallel": [
                {
                  "name": "Stage1",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "Msg1"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "error",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "Step 2"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Stage3",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "Step 3"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "DIGITALAPPLICATION/WebApp",
      "repo_url": "https://github.com/DIGITALAPPLICATION/WebApp",
      "html_url_jenkinsfile": "https://github.com/DIGITALAPPLICATION/WebApp/blob/a63fad859c25b56818688b5e1d544574a9eb9861/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/112680209/git/blobs/3d54177202a055ce0a421f40259997e89116013f",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "build",
              "parallel": [
                {
                  "name": "build",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "bat",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "mvn clean deploy"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "parallel",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "parallel"
                              }
                            }
                          ]
                        },
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "parallel"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "arunkumar02101986/testrepo",
      "repo_url": "https://github.com/arunkumar02101986/testrepo",
      "html_url_jenkinsfile": "https://github.com/arunkumar02101986/testrepo/blob/18fbd6ac6be45f2619e8cea533366ae96a8b5daf/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/117641145/git/blobs/e7b6c719ddf1f6693cbdf5ae9d698dee9f7b878a",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "res",
              "parallel": [
                {
                  "name": "res",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "clear"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "error",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "75r7"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "error",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "end"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "csxiaoying/git_python",
      "repo_url": "https://github.com/csxiaoying/git_python",
      "html_url_jenkinsfile": "https://github.com/csxiaoying/git_python/blob/249e1fc267e90fae5c576950b352c568845736a1/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/125026528/git/blobs/d129824b9d812ac9a679402cd565cac63bc6ca3b",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Preparation",
              "parallel": [
                {
                  "name": "Preparation",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "git",
                          "arguments": [
                            {
                              "key": "url",
                              "value": {
                                "isLiteral": true,
                                "value": "https://github.com/AliceCodeZhang/sampleCode.git"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "agent": {
                    "type": "node",
                    "arguments": [
                      {
                        "key": "label",
                        "value": {
                          "isLiteral": true,
                          "value": "mac"
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "second",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "echo preparation2"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "agent": {
                    "type": "any"
                  }
                }
              ]
            },
            {
              "name": "build",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "pwd"
                          }
                        }
                      ]
                    },
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "abc"
                          }
                        }
                      ]
                    }
                  ]
                }
              ],
              "agent": {
                "type": "any"
              }
            },
            {
              "name": "Test",
              "parallel": [
                {
                  "name": "node 1",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "pwd"
                              }
                            }
                          ]
                        },
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "sleep 20s"
                              }
                            }
                          ]
                        },
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "echo hstream1"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "agent": {
                    "type": "any"
                  }
                },
                {
                  "name": "node 2",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "pwd"
                              }
                            }
                          ]
                        },
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "sleep 20s"
                              }
                            }
                          ]
                        },
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "echo hello2"
                              }
                            }
                          ]
                        },
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "python ./test/test.py"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "agent": {
                    "type": "label",
                    "argument": {
                      "isLiteral": true,
                      "value": "mac"
                    }
                  }
                }
              ]
            }
          ],
          "agent": {
            "type": "none"
          }
        }
      }
    },
    {
      "full_repo_name": "tevakrief/test1",
      "repo_url": "https://github.com/tevakrief/test1",
      "html_url_jenkinsfile": "https://github.com/tevakrief/test1/blob/21ef20ee2f444d0aebfbf7fec26d0331c4a18737/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/89575910/git/blobs/15af474ab6dd386a97dccd94067a562cd2607a18",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "build",
              "branches": [
                {
                  "name": "build",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Build !"
                          }
                        }
                      ]
                    },
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Nouvelle Task"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "ping",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo \"salut\""
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "end",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo \"ended\""
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "bgdevops/MavenApp",
      "repo_url": "https://github.com/bgdevops/MavenApp",
      "html_url_jenkinsfile": "https://github.com/bgdevops/MavenApp/blob/96fa2c70d5039bacdb1ec90ffe568b12348d3101/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/94565144/git/blobs/d393193f7848914be15f8fa34972c2be390a81f4",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "system testing",
              "branches": [
                {
                  "name": "system testing",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "hello world"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "bug fix",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "hello"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "error",
              "branches": [
                {
                  "name": "uat",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "hello"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "end to end",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "hello"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "IgnaSureksu/TestMac",
      "repo_url": "https://github.com/IgnaSureksu/TestMac",
      "html_url_jenkinsfile": "https://github.com/IgnaSureksu/TestMac/blob/853ff21e98a9447a785d8e231fff41543c13d5d1/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/43151902/git/blobs/9ffb07780c39dfd05e79c589592083d9d3a757c9",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "error",
              "branches": [
                {
                  "name": "Dormir",
                  "steps": [
                    {
                      "name": "sleep",
                      "arguments": [
                        {
                          "key": "time",
                          "value": {
                            "isLiteral": true,
                            "value": 34
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Mensaje",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Mensaje impreso"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "yangfan44777/cclass",
      "repo_url": "https://github.com/yangfan44777/cclass",
      "html_url_jenkinsfile": "https://github.com/yangfan44777/cclass/blob/18250195513f168dcf833a249fa2fb7647d7a67e/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/15522440/git/blobs/228928dc77cb2078a1e0c4037bc126a51b1cbc96",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "g",
              "parallel": [
                {
                  "name": "build",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "echo \"Hello world\""
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "e",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "message!!!"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "end",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "end"
                          }
                        }
                      ]
                    },
                    {
                      "name": "timestamps",
                      "arguments": [],
                      "children": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "time"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "agent": {
                "type": "any"
              }
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "autarchprinceps/Allen",
      "repo_url": "https://github.com/autarchprinceps/Allen",
      "html_url_jenkinsfile": "https://github.com/autarchprinceps/Allen/blob/9f6841a27fd625ef6e1bdff8c843afb88357ca92/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/15070311/git/blobs/85f7440dd22959e75f0680bdef9efb739f8524bc",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "A",
              "branches": [
                {
                  "name": "A",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "A"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "B",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "B"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "C",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "C"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "D",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "D"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "E",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "E"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "yunarta/blueocean",
      "repo_url": "https://github.com/yunarta/blueocean",
      "html_url_jenkinsfile": "https://github.com/yunarta/blueocean/blob/168eb75ceded718d7ea5f8d10842177facee9ee0/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/99243126/git/blobs/5908f83f5887affd3b2efe8c4663f589cbb6ea20",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Check",
              "branches": [
                {
                  "name": "Check",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "printenv"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Build",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "ls -al"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Run",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "pwd"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "iwanariy/jenkins_shared_library",
      "repo_url": "https://github.com/iwanariy/jenkins_shared_library",
      "html_url_jenkinsfile": "https://github.com/iwanariy/jenkins_shared_library/blob/9b35e4508dc1baeb07f762981627f406001ca1a2/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/86931090/git/blobs/2d00fcefc34f1a6ef2690e043094bcff0bb3674b",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Initialize",
              "branches": [
                {
                  "name": "Initialize",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "hello, Jenkins Visual Pipeline Editor"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Initialize2",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Hi, Pipeline"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "jkainmosni/jenkins-test",
      "repo_url": "https://github.com/jkainmosni/jenkins-test",
      "html_url_jenkinsfile": "https://github.com/jkainmosni/jenkins-test/blob/164e88a835c4ff5549ad255dd0d73347717e82a1/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/120313227/git/blobs/f6c5918fae4c85b221dac80199b88fdce9a29c9c",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Build",
              "parallel": [
                {
                  "name": "Build",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "echo \"hello\""
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Run",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "date"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "this job wont work",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "zsexrdctfvgbhnjmk"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "srinivasa-t/test-sri",
      "repo_url": "https://github.com/srinivasa-t/test-sri",
      "html_url_jenkinsfile": "https://github.com/srinivasa-t/test-sri/blob/e374b6d70f53f0146029f073c66712f188618fb3/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/125781112/git/blobs/486eca25658fe76cdeffc49192902b369bf990a5",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Build",
              "parallel": [
                {
                  "name": "Build",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "bat",
                          "arguments": [
                            {
                              "key": "returnStatus",
                              "value": {
                                "isLiteral": true,
                                "value": true
                              }
                            },
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "echo \"Building the code base\""
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "error",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "bat",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "\"Parallel Step....\""
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Build-2",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "bat",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo \"list directory\""
                          }
                        }
                      ]
                    }
                  ]
                }
              ],
              "agent": {
                "type": "any"
              }
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "chanxiaohui/testsonarmaven",
      "repo_url": "https://github.com/chanxiaohui/testsonarmaven",
      "html_url_jenkinsfile": "https://github.com/chanxiaohui/testsonarmaven/blob/1db25bbd2f86f094f083f08e721c81d0d6c60437/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/84814176/git/blobs/1dbac4d83d7c29ab6b70a40b8fbdb613d4233d8a",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Build",
              "branches": [
                {
                  "name": "Build",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo \"hello\""
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "test",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo \"hee\""
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "nadavbrkt/jenkins",
      "repo_url": "https://github.com/nadavbrkt/jenkins",
      "html_url_jenkinsfile": "https://github.com/nadavbrkt/jenkins/blob/60adb0f8a91094ca765e74d5c7e72132ce4e9c17/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/112458832/git/blobs/79de583422f61c1a47df53a5bc66307b7bcb43b9",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Non-Parallel Stage",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "This stage will be executed first."
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Parallel Stage",
              "parallel": [
                {
                  "name": "Branch A",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "On Branch A"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Branch B",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "On Branch B"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "failFast": true,
              "when": {
                "conditions": [
                  {
                    "name": "branch",
                    "arguments": {
                      "isLiteral": true,
                      "value": "master"
                    }
                  }
                ]
              }
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "laxman1129/simpleDemo",
      "repo_url": "https://github.com/laxman1129/simpleDemo",
      "html_url_jenkinsfile": "https://github.com/laxman1129/simpleDemo/blob/78cd6d02a48ac3c99fe414aa50e2f69fb57a1ee1/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/122032338/git/blobs/be3ab04a0050558d611551bf3571ec96c672e3a1",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "build",
              "parallel": [
                {
                  "name": "build",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "./mvnw clean"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "install",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "./mvnw install"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "dotanalon/google-photos-python",
      "repo_url": "https://github.com/dotanalon/google-photos-python",
      "html_url_jenkinsfile": "https://github.com/dotanalon/google-photos-python/blob/b2e5473fd5a9099962d06173fce638ca3015902b/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/107262393/git/blobs/e035c9bd0fad27f94efeae1b1b61d243001f15a0",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "ga",
              "parallel": [
                {
                  "name": "A",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "echo \"Hello World\"\n"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "B",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "echo bla"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "wesleyjoliveira/lambda",
      "repo_url": "https://github.com/wesleyjoliveira/lambda",
      "html_url_jenkinsfile": "https://github.com/wesleyjoliveira/lambda/blob/2e2cec24b99e443ce93615428c2cfa8b5761bcd8/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/113601592/git/blobs/8e852c819605154768ddaf1fa41bf8ae99a83f85",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Testes",
              "parallel": [
                {
                  "name": "Testes",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "teste"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Teste IE",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "Teste no IE"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Teste Firefox",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "Teste Firefox"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "Navjotece19/demo",
      "repo_url": "https://github.com/Navjotece19/demo",
      "html_url_jenkinsfile": "https://github.com/Navjotece19/demo/blob/3558e6936a446347416f9d1bba5d320e2caddba5/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/13343368/git/blobs/4095f0f9a2cf8373de3b9e5e36e56a264e8053f0",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "1",
              "branches": [
                {
                  "name": "1",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "hello"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "2",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "hello2"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "3",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "done"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "hello",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "stage 4"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "johnnyq1313/DeclarativePipeline",
      "repo_url": "https://github.com/johnnyq1313/DeclarativePipeline",
      "html_url_jenkinsfile": "https://github.com/johnnyq1313/DeclarativePipeline/blob/8584baa31d81efca698d1c0576556283ace59d7c/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/106042776/git/blobs/cbe33b2552e78f714255e23be48977bd23421f28",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Machine Clean Up",
              "branches": [
                {
                  "name": "LvNgInstaller13",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Cleaning ..."
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "LvNgInstaller15",
                  "steps": [
                    {
                      "name": "echo",
                      "arguments": [
                        {
                          "key": "message",
                          "value": {
                            "isLiteral": true,
                            "value": "Cleaning..."
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "itelis-tech/markup",
      "repo_url": "https://github.com/itelis-tech/markup",
      "html_url_jenkinsfile": "https://github.com/itelis-tech/markup/blob/0ad2cce7a18c15746e8b3cb0f3aaee6d6547889f/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/113471708/git/blobs/18168dbc86902233f1816d769cf00fbd5179ea37",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "ls",
              "parallel": [
                {
                  "name": "ls",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "test"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "bash",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sh",
                          "arguments": [
                            {
                              "key": "script",
                              "value": {
                                "isLiteral": true,
                                "value": "ls -al"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "MarcinLament/JenkinsTest",
      "repo_url": "https://github.com/MarcinLament/JenkinsTest",
      "html_url_jenkinsfile": "https://github.com/MarcinLament/JenkinsTest/blob/ce5729b9e61fd5038865a5e43d6f60179a58379f/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/90866487/git/blobs/21da09d7d30e50414f6ea9a2c6fb360f2f0fe801",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "error",
              "branches": [
                {
                  "name": "Stage1",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo \"1\""
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Stage2",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "echo \"2\""
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "BEBE",
              "branches": [
                {
                  "name": "default",
                  "steps": [
                    {
                      "name": "sh",
                      "arguments": [
                        {
                          "key": "script",
                          "value": {
                            "isLiteral": true,
                            "value": "wq"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "any"
          }
        }
      }
    },
    {
      "full_repo_name": "teknivor/container-demo",
      "repo_url": "https://github.com/teknivor/container-demo",
      "html_url_jenkinsfile": "https://github.com/teknivor/container-demo/blob/12b01ac962ede4b9ab0d4aaebb76850df9d52e73/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/107638194/git/blobs/ae1b5df6a5e5b1cdb44d24088fbbf6274b2b5ea9",
      "jenkins_pipeline": {
        "pipeline": {
          "stages": [
            {
              "name": "Test",
              "parallel": [
                {
                  "name": "Test",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "sleep",
                          "arguments": [
                            {
                              "key": "time",
                              "value": {
                                "isLiteral": true,
                                "value": 5
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Run",
                  "branches": [
                    {
                      "name": "default",
                      "steps": [
                        {
                          "name": "echo",
                          "arguments": [
                            {
                              "key": "message",
                              "value": {
                                "isLiteral": true,
                                "value": "Hello World"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "agent": {
            "type": "docker",
            "arguments": [
              {
                "key": "image",
                "value": {
                  "isLiteral": true,
                  "value": "rhel7/rhel"
                }
              }
            ]
          }
        }
      }
    },
    {
      "full_repo_name": "AnghelLeonard/SpringMVCDemo",
      "repo_url": "https://github.com/AnghelLeonard/SpringMVCDemo",
      "html_url_jenkinsfile": "https://github.com/AnghelLeonard/SpringMVCDemo/blob/2a79904f8995d9fb9e5bb722f423eb82fcbe4787/jenkinsfile/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/82149103/git/blobs/45ddaf692336f34e987252f0670d658794d0edf9",
      "jenkins_pipeline": [
        {
          "error": "Jenkinsfile content '// change the project version (don't rely on version from pom.xml)\r\nenv.BN = VersionNumber([\r\n        versionNumberString : '${BUILD_MONTH}.${BUILDS_TODAY}.${BUILD_NUMBER}', \r\n        projectStartDate : '2017-02-09', \r\n        versionPrefix : 'v1.'\r\n    ])\r\n\t\t\r\nnode (\"master\") {                  \r\n    stage('Provision') {                \r\n        echo 'PIPELINE STARTED'\r\n        \r\n        echo 'Checkout source code from GitHub ...'\r\n        retry(5){\r\n            git branch: 'developer', credentialsId: 'GitHub', url: 'git@github.com:AnghelLeonard/SpringMVCDemo.git'\r\n        }\r\n        \r\n        echo 'Change the project version ...'\r\n        def W_M2_HOME = tool 'Maven'\r\n        bat \"${W_M2_HOME}\\\\bin\\\\mvn versions:set -DnewVersion=$BN -DgenerateBackupPoms=false\"                \r\n        \r\n        echo \"Create a new branch with name release_${BN} ...\"\r\n        def W_GIT_HOME = tool 'Git'\r\n        bat \"${W_GIT_HOME} checkout -b release_${BN}\"\r\n        \r\n        echo 'Stash the project source code ...'\r\n        stash includes: '**', excludes: '**/TestPlan.jmx', name: 'SOURCE_CODE'\r\n    }\r\n}\r\n\r\nparallel UnitTests:{\r\n    node (\"TestMachine-ut\") {\r\n        // we can also use: withEnv(['M2_HOME=/usr/share/maven', 'JAVA_HOME=/usr']) {}\r\n        env.MAVEN_HOME = '/usr/share/maven'\r\n        env.M2_HOME = '/usr/share/maven'\r\n        env.JAVA_HOME = '/usr'\t \r\n      \r\n        echo 'Preparing Artifactory to resolve dependencies ...'          \r\n        def server = Artifactory.server('artifactory')       \r\n        def rtMaven = Artifactory.newMavenBuild()\r\n        rtMaven.opts = '-Xms1024m -Xmx4096m'\r\n        rtMaven.resolver server: server, releaseRepo: 'virtual-repo', snapshotRepo: 'virtual-repo'\r\n        \r\n        stage('Run-ut') {   \r\n            try{\t\t\r\n                echo 'Unstash the project source code ...'\r\n                unstash 'SOURCE_CODE'\t                                                       \r\n                                \r\n                echo 'Run the unit tests (and Jacoco) ...'\r\n                // sh \"'${M2_HOME}/bin/mvn' clean test-compile jacoco:prepare-agent test -Djacoco.destFile=target/jacoco.exec\"   \r\n                rtMaven.run pom: 'pom.xml', goals: 'clean test-compile jacoco:prepare-agent test -Djacoco.destFile=target/jacoco.exec'\r\n\r\n                echo 'Run the Jacoco code coverage report for unit tests ...'\r\n                step([$class: 'JacocoPublisher', canComputeNew: false, defaultEncoding: '', healthy: '', \r\n                        pattern: '**/target/jacoco.exec', unHealthy: ''])\r\n\t\t\t\r\n                echo 'Stash Jacoco-ut exec ...'\r\n                stash includes: '**/target/jacoco.exec', name: 'JACOCO_UT' \r\n            \r\n                echo 'jUnit report (surefire) ...'\r\n                junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'\r\n                currentBuild.result='SUCCESS'\r\n            }catch (any){\r\n                currentBuild.result='FAILURE'\r\n                step([$class: 'Mailer', notifyEveryUnstableBuild: true, recipients: 'sample@org.com', sendToIndividuals: false])\r\n                throw any\r\n            } finally {                \r\n                // ...\r\n            }\r\n        }\r\n    }\r\n},\r\nIntegrationTests:{\r\n    node (\"TestMachine-it\") {\r\n\r\n        // we can also use: withEnv(['M2_HOME=/usr/share/maven', 'JAVA_HOME=/usr']) {}\r\n        env.MAVEN_HOME = '/usr/share/maven'\r\n        env.M2_HOME = '/usr/share/maven'\r\n        env.JAVA_HOME = '/usr'\r\n        \r\n        echo 'Preparing Artifactory to resolve dependencies ...'          \r\n        def server = Artifactory.server('artifactory')       \r\n        def rtMaven = Artifactory.newMavenBuild()\r\n        rtMaven.opts = '-Xms1024m -Xmx4096m'\r\n        rtMaven.resolver server: server, releaseRepo: 'virtual-repo', snapshotRepo: 'virtual-repo'\r\n\t\r\n        stage('Run-it') {\r\n        \r\n            echo 'Unstash the project source code ...'\r\n            unstash 'SOURCE_CODE'\r\n\t\t\r\n            echo 'Start postgresql ...'\r\n            sh 'echo jenkins | sudo -S /etc/init.d/postgresql start'\r\n                        \r\n            echo 'Run the integration tests (and Jacoco) ...'\r\n            // sh \"'${M2_HOME}/bin/mvn' clean package jacoco:prepare-agent verify -DskipUTs=true -Djacoco.destFile=target/jacoco-it.exec\"\r\n            rtMaven.run pom: 'pom.xml', goals: 'clean package jacoco:prepare-agent verify -DskipUTs=true -Djacoco.destFile=target/jacoco-it.exec'\r\n\r\n            echo 'Run the Jacoco code coverage report for integration tests ...'\r\n            step([$class: 'JacocoPublisher', canComputeNew: false, defaultEncoding: '', healthy: '', \r\n                    pattern: '**/target/jacoco-it.exec', unHealthy: ''])\r\n\t\t\t\r\n            echo 'Stash Jacoco-it exec ...'\r\n            stash includes: '**/target/jacoco-it.exec', name: 'JACOCO_IT'\r\n            \r\n            echo 'jUnit report (failsafe) ...'\r\n            junit allowEmptyResults: true, testResults: '**/target/failsafe-reports/*.xml'\r\n        }\r\n    }\r\n},\r\nfailFast: true\r\n\r\nnode (\"TestMachine-ut\") {\r\n    \r\n    // we can also use: withEnv(['M2_HOME=/usr/share/maven', 'JAVA_HOME=/usr']) {}\r\n    env.MAVEN_HOME = '/usr/share/maven'\r\n    env.M2_HOME = '/usr/share/maven'\r\n    env.JAVA_HOME = '/usr'\r\n    \r\n    echo 'Preparing Artifactory to resolve dependencies ...'          \r\n    def server = Artifactory.server('artifactory')       \r\n    def rtMaven = Artifactory.newMavenBuild()\r\n    rtMaven.opts = '-Xms1024m -Xmx4096m'\r\n    rtMaven.resolver server: server, releaseRepo: 'virtual-repo', snapshotRepo: 'virtual-repo'\r\n    \r\n    stage('SCA') {\r\n        echo 'Unstash the project source code ...'\r\n        unstash 'SOURCE_CODE'\r\n                \r\n        echo 'Executing Maven test-compile ...'\r\n        // sh \"'${M2_HOME}/bin/mvn' clean test-compile\"\r\n        rtMaven.run pom: 'pom.xml', goals: 'clean test-compile'\r\n    }    \r\n    \r\n    parallel Findbugs:{\r\n        stage('Findbugs') {    \r\n            echo 'Running Findbugs ...'\r\n            // sh \"'${M2_HOME}/bin/mvn' findbugs:findbugs\"\r\n            rtMaven.run pom: 'pom.xml', goals: 'findbugs:findbugs'\r\n            step([$class: 'FindBugsPublisher', canComputeNew: false, defaultEncoding: '', \r\n                    excludePattern: '', healthy: '', includePattern: '', pattern: '**/target/findbugsXml.xml', unHealthy: ''])\r\n            \r\n        }\r\n    },\r\n    Checkstyle:{\r\n        stage('Checkstyle') {            \r\n            echo 'Running Checkstyle ...'\r\n            // sh \"'${M2_HOME}/bin/mvn' checkstyle:check\"\r\n            rtMaven.run pom: 'pom.xml', goals: 'checkstyle:check'\r\n            step([$class: 'CheckStylePublisher', canComputeNew: false, defaultEncoding: '', \r\n                    healthy: '', pattern: '**/target/checkstyle-result.xml', unHealthy: ''])            \r\n        }\r\n    },\r\n    Pmd:{\r\n        stage('Pmd') {         \r\n            echo 'Running PMD ...'\t\t\r\n            // sh \"'${M2_HOME}/bin/mvn' pmd:pmd\"\r\n            rtMaven.run pom: 'pom.xml', goals: 'pmd:pmd'\r\n            step([$class: 'PmdPublisher', canComputeNew: false, defaultEncoding: '', \r\n                    healthy: '', pattern: '**/target/pmd.xml', unHealthy: ''])            \r\n        }\r\n    },\r\n    TaskScanner:{\r\n        stage('TaskScanner'){\r\n            echo 'Running TaskRunner ...'\r\n            step([$class: 'TasksPublisher', canComputeNew: false, defaultEncoding: '', \r\n                    excludePattern: '', healthy: '', high: 'TODO,TO DO,FIXME', low: '', normal: '', pattern: '**/*.java', unHealthy: ''])\r\n        }\r\n    },\r\n    failFast: false\r\n\t\r\n    stage('CombinedAnalysis'){\r\n        echo 'Running Analysis publisher ...'\r\n        step([$class: 'AnalysisPublisher', canComputeNew: false, defaultEncoding: '', healthy: '', unHealthy: ''])\r\n    }\r\n}\r\n\r\nnode(\"TestMachine-so\") {\r\n    \r\n    // we can also use: withEnv(['M2_HOME=/usr/share/maven', 'JAVA_HOME=/usr']) {}\r\n    env.MAVEN_HOME = '/usr/share/maven'\r\n    env.M2_HOME = '/usr/share/maven'\r\n    env.JAVA_HOME = '/usr'\r\n    \r\n    echo 'Preparing Artifactory to resolve dependencies ...'          \r\n    def server = Artifactory.server('artifactory')       \r\n    def rtMaven = Artifactory.newMavenBuild()\r\n    rtMaven.opts = '-Xms1024m -Xmx4096m'\r\n    rtMaven.resolver server: server, releaseRepo: 'virtual-repo', snapshotRepo: 'virtual-repo'\r\n    rtMaven.deployer server: server, releaseRepo: 'snapshot-repo', snapshotRepo: 'snapshot-repo'\r\n    \r\n    stage (\"Prepare-Sonar\") {        \r\n        echo 'Ping SonarQube ...'\r\n        try{\r\n            retry(5) {\r\n                sh script: 'echo jenkins | sudo -S nc -zv localhost 9000 && echo jenkins | sudo -S nc -zv localhost 9092'\r\n            }\r\n        } catch (error) {\r\n            sh 'echo Start SonarQube ...'\r\n            sh 'echo jenkins | sudo -S /opt/sonarqube/bin/linux-x86-64/sonar.sh start'\r\n        } \r\n        \r\n        timeout(time: 240, unit: 'SECONDS') {\r\n            waitUntil {\r\n                echo 'Waiting for SonarQube to start ...'\r\n                def result = sh script: 'echo jenkins | sudo -S netstat -tulnp | egrep \\'9000|9092\\'', returnStatus: true\r\n                return (result == 0);\r\n            }\r\n        }\r\n    } \r\n    \r\n    stage('Run-Sonar') {     \r\n        echo 'Run sonar:sonar ...'\r\n\t\r\n        unstash 'SOURCE_CODE'           \r\n        unstash 'JACOCO_UT'\r\n        unstash 'JACOCO_IT'\r\n                \r\n        // sh \"'${M2_HOME}/bin/mvn' test-compile sonar:sonar -Dsonar.host.url=http://localhost:9000 -Dmaven.clean.skip=true\" \r\n        rtMaven.run pom: 'pom.xml', goals: 'test-compile sonar:sonar -Dsonar.host.url=http://localhost:9000 -Dmaven.clean.skip=true'\r\n    }\r\n\t\r\n    stage(\"Publish-Snapshot\") {\r\n        echo 'Publish SNAPSHOT war ...'\t              \r\n        def buildInfo = rtMaven.run pom: 'pom.xml', goals: 'clean install -DskipTests'\r\n        server.publishBuildInfo buildInfo\r\n    }\r\n}  \r\n\r\nnode (\"master\") {\r\n    echo 'Stash the performance tests ...'\r\n    stash includes: '**/TestPlan.jmx', name: 'JMETER_TESTS' \r\n}\r\n\r\nnode(\"PfMachine-jm\") {\r\n    \r\n    stage(\"Start-Payara\") {     \r\n        echo 'Starting Payara server ...'\r\n        sh 'echo jenkins | sudo -S /opt/payara41/bin/asadmin start-domain'\r\n    }\r\n    \r\n    stage (\"Download-WAR\") {\r\n        echo 'Download the application WAR ...'\r\n        \r\n        def downloadWAR = \"\"\"{\r\n            \"files\": [{\r\n                \"pattern\": \"snapshot-repo/javaee/SpringMVCDemo/${BN}/*.war\",\r\n                \"target\": \"war/\"\r\n            }]\r\n        }\"\"\"\r\n        \r\n        def server = Artifactory.server('artifactory')\r\n        server.download(downloadWAR)\r\n    }\r\n    \r\n    stage (\"Deploy-WAR\") {\r\n        echo 'Deploy the application WAR in Payara server ...'\r\n        sh \"echo jenkins | sudo -S /opt/payara41/bin/asadmin deploy --contextroot '/SpringMVCDemo' ${WORKSPACE}/war/javaee/SpringMVCDemo/${BN}/SpringMVCDemo-${BN}.war\"        \r\n    }\r\n    \r\n    stage (\"Deploy-JMeter-Tests\") {\r\n        echo 'Unstash JMeter tests ...'\r\n        unstash 'JMETER_TESTS'\r\n    }        \r\n    \r\n    stage (\"Run-JMeter-Tests\") {\r\n        echo 'Run the JMeter tests ...'\r\n        \r\n        sh \"/opt/jmeter/bin/jmeter.sh -Jduration=600 -n -t ${WORKSPACE}/TestPlan.jmx -l ${WORKSPACE}/results.jtl\"\r\n        performanceReport compareBuildPrevious: true, configType: 'ART', errorFailedThreshold: 0, errorUnstableResponseTimeThreshold: '', \r\n        errorUnstableThreshold: 0, failBuildIfNoResultFile: false, ignoreFailedBuilds: true, ignoreUnstableBuilds: true, \r\n        modeOfThreshold: false, modePerformancePerTestCase: true, modeThroughput: true, nthBuildNumber: 0, \r\n        parsers: [[$class: 'JMeterParser', glob: \"${WORKSPACE}/results.jtl\"]], \r\n        relativeFailedThresholdNegative: 0, relativeFailedThresholdPositive: 0, relativeUnstableThresholdNegative: 0, \r\n        relativeUnstableThresholdPositive: 0\r\n    }\r\n    \r\n    stage(\"Promote to staging\"){\r\n        echo 'Promoting application from SNAPSHOT to STAGING ...'\r\n        \r\n        def server = Artifactory.server('artifactory')\r\n        def promotionConfig = [\r\n            // Mandatory parameters\r\n        'buildName'          : 'project',\r\n        'buildNumber'        : BUILD_NUMBER,\r\n        'targetRepo'         : 'staging-repo',\r\n\r\n            // Optional parameters\r\n        'comment'            : 'Promoting to staging ....',\r\n        'sourceRepo'         : 'snapshot-repo',\r\n        'status'             : 'Staging',\r\n        'includeDependencies': false,\r\n        'copy'               : true,\r\n        'failFast'           : true\r\n        ]\r\n\r\n        // Promote build\r\n        server.promote promotionConfig\r\n    }\r\n}\r\n\r\n// QA, UAT, ... nodes (e.g. EC2 instances, local machines, etc)\r\necho 'Running in QA node ...'\r\necho 'Running in UAT node ...'\r\n\r\necho 'Promoting application from STAGING to RELEASE ...'\r\nstage(\"Promote to release\"){\r\n    def server = Artifactory.server('artifactory')\r\n    def promotionConfig = [\r\n        // Mandatory parameters\r\n        'buildName'          : 'project',\r\n        'buildNumber'        : BUILD_NUMBER,\r\n        'targetRepo'         : 'release-repo',\r\n\r\n        // Optional parameters\r\n        'comment'            : 'Promoting to release ....',\r\n        'sourceRepo'         : 'staging-repo',\r\n        'status'             : 'Release',\r\n        'includeDependencies': false,\r\n        'copy'               : true,\r\n        'failFast'           : true\r\n    ]\r\n\r\n    // Promote build\r\n    server.promote promotionConfig\r\n}\r\n\r\nparallel DeployInProd:{\t\r\n    node(\"ProdMachine-pd\") {\r\n\r\n        stage(\"Start-Payara\") {    \r\n\r\n            echo 'Ping Payara Server ...'\r\n            try{\r\n                retry(5) {\r\n                    sh script: 'echo jenkins | sudo -S nc -zv localhost 8080 && echo jenkins | sudo -S nc -zv localhost 4848'\r\n                }\r\n            } catch (error) {\r\n                sh 'echo Start Payara Server ...'\r\n                sh 'echo jenkins | sudo -S /opt/payara41/bin/asadmin start-domain'\r\n            } \r\n\t\t                   \r\n        }\r\n    \r\n        stage (\"Download-WAR\") {\r\n            echo 'Download the application WAR ...'\r\n        \r\n            def downloadWAR = \"\"\"{\r\n            \"files\": [{\r\n                \"pattern\": \"release-repo/javaee/SpringMVCDemo/${BN}/*.war\",\r\n                \"target\": \"war/\"\r\n            }]\r\n        }\"\"\"\r\n        \r\n            def server = Artifactory.server('artifactory')\r\n            server.download(downloadWAR)\r\n        }\r\n\t\r\n\tstage (\"Deploy-WAR\") {\r\n            echo 'Rename the WAR as SpringMVCDemo ...'\r\n            sh \"echo jenkins | sudo -S mv ${WORKSPACE}/war/javaee/SpringMVCDemo/${BN}/SpringMVCDemo-${BN}.war ${WORKSPACE}/war/javaee/SpringMVCDemo/${BN}/SpringMVCDemo.war\"\r\n\t\t\t\r\n            echo 'Deploy the application WAR in Payara server ...'\r\n            sh \"echo jenkins | sudo -S cp -f ${WORKSPACE}/war/javaee/SpringMVCDemo/${BN}/SpringMVCDemo.war /opt/payara41/glassfish/domains/domain1/autodeploy\"\r\n        }\r\n    }\r\n},\r\nDeployReleaseInGit:{\r\n    node (\"master\") {\r\n        stage('Push-To-Git'){\r\n            echo 'Push new branch to release ...'\r\n            \r\n            sh 'git config --global user.email \"provideasparam@foo.com\"'\r\n            sh 'git config --global user.name \"SomeUser\"'\r\n            sh 'git rm -r --cached Jenkinsfile'\r\n            sh 'git add .'\r\n            sh 'git commit -a -m \"Release candidate\"'\r\n            retry(5) {\r\n                withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'GitHubUP', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD']]){                \r\n                    sh \"git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/AnghelLeonard/SpringMVCDemo.git release_${BN}\"\r\n                }\r\n            }\r\n        }  \r\n    }\r\n},\r\nfailFast: false' did not contain the 'pipeline' step"
        }
      ]
    },
    {
      "full_repo_name": "enkicoma/WolePipeJ",
      "repo_url": "https://github.com/enkicoma/WolePipeJ",
      "html_url_jenkinsfile": "https://github.com/enkicoma/WolePipeJ/blob/9df9bb74a5b1a0e73c867b53d77fc5c8ea8e014b/jenkinsfile/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/119887941/git/blobs/45ddaf692336f34e987252f0670d658794d0edf9",
      "jenkins_pipeline": [
        {
          "error": "Jenkinsfile content '// change the project version (don't rely on version from pom.xml)\r\nenv.BN = VersionNumber([\r\n        versionNumberString : '${BUILD_MONTH}.${BUILDS_TODAY}.${BUILD_NUMBER}', \r\n        projectStartDate : '2017-02-09', \r\n        versionPrefix : 'v1.'\r\n    ])\r\n\t\t\r\nnode (\"master\") {                  \r\n    stage('Provision') {                \r\n        echo 'PIPELINE STARTED'\r\n        \r\n        echo 'Checkout source code from GitHub ...'\r\n        retry(5){\r\n            git branch: 'developer', credentialsId: 'GitHub', url: 'git@github.com:AnghelLeonard/SpringMVCDemo.git'\r\n        }\r\n        \r\n        echo 'Change the project version ...'\r\n        def W_M2_HOME = tool 'Maven'\r\n        bat \"${W_M2_HOME}\\\\bin\\\\mvn versions:set -DnewVersion=$BN -DgenerateBackupPoms=false\"                \r\n        \r\n        echo \"Create a new branch with name release_${BN} ...\"\r\n        def W_GIT_HOME = tool 'Git'\r\n        bat \"${W_GIT_HOME} checkout -b release_${BN}\"\r\n        \r\n        echo 'Stash the project source code ...'\r\n        stash includes: '**', excludes: '**/TestPlan.jmx', name: 'SOURCE_CODE'\r\n    }\r\n}\r\n\r\nparallel UnitTests:{\r\n    node (\"TestMachine-ut\") {\r\n        // we can also use: withEnv(['M2_HOME=/usr/share/maven', 'JAVA_HOME=/usr']) {}\r\n        env.MAVEN_HOME = '/usr/share/maven'\r\n        env.M2_HOME = '/usr/share/maven'\r\n        env.JAVA_HOME = '/usr'\t \r\n      \r\n        echo 'Preparing Artifactory to resolve dependencies ...'          \r\n        def server = Artifactory.server('artifactory')       \r\n        def rtMaven = Artifactory.newMavenBuild()\r\n        rtMaven.opts = '-Xms1024m -Xmx4096m'\r\n        rtMaven.resolver server: server, releaseRepo: 'virtual-repo', snapshotRepo: 'virtual-repo'\r\n        \r\n        stage('Run-ut') {   \r\n            try{\t\t\r\n                echo 'Unstash the project source code ...'\r\n                unstash 'SOURCE_CODE'\t                                                       \r\n                                \r\n                echo 'Run the unit tests (and Jacoco) ...'\r\n                // sh \"'${M2_HOME}/bin/mvn' clean test-compile jacoco:prepare-agent test -Djacoco.destFile=target/jacoco.exec\"   \r\n                rtMaven.run pom: 'pom.xml', goals: 'clean test-compile jacoco:prepare-agent test -Djacoco.destFile=target/jacoco.exec'\r\n\r\n                echo 'Run the Jacoco code coverage report for unit tests ...'\r\n                step([$class: 'JacocoPublisher', canComputeNew: false, defaultEncoding: '', healthy: '', \r\n                        pattern: '**/target/jacoco.exec', unHealthy: ''])\r\n\t\t\t\r\n                echo 'Stash Jacoco-ut exec ...'\r\n                stash includes: '**/target/jacoco.exec', name: 'JACOCO_UT' \r\n            \r\n                echo 'jUnit report (surefire) ...'\r\n                junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'\r\n                currentBuild.result='SUCCESS'\r\n            }catch (any){\r\n                currentBuild.result='FAILURE'\r\n                step([$class: 'Mailer', notifyEveryUnstableBuild: true, recipients: 'sample@org.com', sendToIndividuals: false])\r\n                throw any\r\n            } finally {                \r\n                // ...\r\n            }\r\n        }\r\n    }\r\n},\r\nIntegrationTests:{\r\n    node (\"TestMachine-it\") {\r\n\r\n        // we can also use: withEnv(['M2_HOME=/usr/share/maven', 'JAVA_HOME=/usr']) {}\r\n        env.MAVEN_HOME = '/usr/share/maven'\r\n        env.M2_HOME = '/usr/share/maven'\r\n        env.JAVA_HOME = '/usr'\r\n        \r\n        echo 'Preparing Artifactory to resolve dependencies ...'          \r\n        def server = Artifactory.server('artifactory')       \r\n        def rtMaven = Artifactory.newMavenBuild()\r\n        rtMaven.opts = '-Xms1024m -Xmx4096m'\r\n        rtMaven.resolver server: server, releaseRepo: 'virtual-repo', snapshotRepo: 'virtual-repo'\r\n\t\r\n        stage('Run-it') {\r\n        \r\n            echo 'Unstash the project source code ...'\r\n            unstash 'SOURCE_CODE'\r\n\t\t\r\n            echo 'Start postgresql ...'\r\n            sh 'echo jenkins | sudo -S /etc/init.d/postgresql start'\r\n                        \r\n            echo 'Run the integration tests (and Jacoco) ...'\r\n            // sh \"'${M2_HOME}/bin/mvn' clean package jacoco:prepare-agent verify -DskipUTs=true -Djacoco.destFile=target/jacoco-it.exec\"\r\n            rtMaven.run pom: 'pom.xml', goals: 'clean package jacoco:prepare-agent verify -DskipUTs=true -Djacoco.destFile=target/jacoco-it.exec'\r\n\r\n            echo 'Run the Jacoco code coverage report for integration tests ...'\r\n            step([$class: 'JacocoPublisher', canComputeNew: false, defaultEncoding: '', healthy: '', \r\n                    pattern: '**/target/jacoco-it.exec', unHealthy: ''])\r\n\t\t\t\r\n            echo 'Stash Jacoco-it exec ...'\r\n            stash includes: '**/target/jacoco-it.exec', name: 'JACOCO_IT'\r\n            \r\n            echo 'jUnit report (failsafe) ...'\r\n            junit allowEmptyResults: true, testResults: '**/target/failsafe-reports/*.xml'\r\n        }\r\n    }\r\n},\r\nfailFast: true\r\n\r\nnode (\"TestMachine-ut\") {\r\n    \r\n    // we can also use: withEnv(['M2_HOME=/usr/share/maven', 'JAVA_HOME=/usr']) {}\r\n    env.MAVEN_HOME = '/usr/share/maven'\r\n    env.M2_HOME = '/usr/share/maven'\r\n    env.JAVA_HOME = '/usr'\r\n    \r\n    echo 'Preparing Artifactory to resolve dependencies ...'          \r\n    def server = Artifactory.server('artifactory')       \r\n    def rtMaven = Artifactory.newMavenBuild()\r\n    rtMaven.opts = '-Xms1024m -Xmx4096m'\r\n    rtMaven.resolver server: server, releaseRepo: 'virtual-repo', snapshotRepo: 'virtual-repo'\r\n    \r\n    stage('SCA') {\r\n        echo 'Unstash the project source code ...'\r\n        unstash 'SOURCE_CODE'\r\n                \r\n        echo 'Executing Maven test-compile ...'\r\n        // sh \"'${M2_HOME}/bin/mvn' clean test-compile\"\r\n        rtMaven.run pom: 'pom.xml', goals: 'clean test-compile'\r\n    }    \r\n    \r\n    parallel Findbugs:{\r\n        stage('Findbugs') {    \r\n            echo 'Running Findbugs ...'\r\n            // sh \"'${M2_HOME}/bin/mvn' findbugs:findbugs\"\r\n            rtMaven.run pom: 'pom.xml', goals: 'findbugs:findbugs'\r\n            step([$class: 'FindBugsPublisher', canComputeNew: false, defaultEncoding: '', \r\n                    excludePattern: '', healthy: '', includePattern: '', pattern: '**/target/findbugsXml.xml', unHealthy: ''])\r\n            \r\n        }\r\n    },\r\n    Checkstyle:{\r\n        stage('Checkstyle') {            \r\n            echo 'Running Checkstyle ...'\r\n            // sh \"'${M2_HOME}/bin/mvn' checkstyle:check\"\r\n            rtMaven.run pom: 'pom.xml', goals: 'checkstyle:check'\r\n            step([$class: 'CheckStylePublisher', canComputeNew: false, defaultEncoding: '', \r\n                    healthy: '', pattern: '**/target/checkstyle-result.xml', unHealthy: ''])            \r\n        }\r\n    },\r\n    Pmd:{\r\n        stage('Pmd') {         \r\n            echo 'Running PMD ...'\t\t\r\n            // sh \"'${M2_HOME}/bin/mvn' pmd:pmd\"\r\n            rtMaven.run pom: 'pom.xml', goals: 'pmd:pmd'\r\n            step([$class: 'PmdPublisher', canComputeNew: false, defaultEncoding: '', \r\n                    healthy: '', pattern: '**/target/pmd.xml', unHealthy: ''])            \r\n        }\r\n    },\r\n    TaskScanner:{\r\n        stage('TaskScanner'){\r\n            echo 'Running TaskRunner ...'\r\n            step([$class: 'TasksPublisher', canComputeNew: false, defaultEncoding: '', \r\n                    excludePattern: '', healthy: '', high: 'TODO,TO DO,FIXME', low: '', normal: '', pattern: '**/*.java', unHealthy: ''])\r\n        }\r\n    },\r\n    failFast: false\r\n\t\r\n    stage('CombinedAnalysis'){\r\n        echo 'Running Analysis publisher ...'\r\n        step([$class: 'AnalysisPublisher', canComputeNew: false, defaultEncoding: '', healthy: '', unHealthy: ''])\r\n    }\r\n}\r\n\r\nnode(\"TestMachine-so\") {\r\n    \r\n    // we can also use: withEnv(['M2_HOME=/usr/share/maven', 'JAVA_HOME=/usr']) {}\r\n    env.MAVEN_HOME = '/usr/share/maven'\r\n    env.M2_HOME = '/usr/share/maven'\r\n    env.JAVA_HOME = '/usr'\r\n    \r\n    echo 'Preparing Artifactory to resolve dependencies ...'          \r\n    def server = Artifactory.server('artifactory')       \r\n    def rtMaven = Artifactory.newMavenBuild()\r\n    rtMaven.opts = '-Xms1024m -Xmx4096m'\r\n    rtMaven.resolver server: server, releaseRepo: 'virtual-repo', snapshotRepo: 'virtual-repo'\r\n    rtMaven.deployer server: server, releaseRepo: 'snapshot-repo', snapshotRepo: 'snapshot-repo'\r\n    \r\n    stage (\"Prepare-Sonar\") {        \r\n        echo 'Ping SonarQube ...'\r\n        try{\r\n            retry(5) {\r\n                sh script: 'echo jenkins | sudo -S nc -zv localhost 9000 && echo jenkins | sudo -S nc -zv localhost 9092'\r\n            }\r\n        } catch (error) {\r\n            sh 'echo Start SonarQube ...'\r\n            sh 'echo jenkins | sudo -S /opt/sonarqube/bin/linux-x86-64/sonar.sh start'\r\n        } \r\n        \r\n        timeout(time: 240, unit: 'SECONDS') {\r\n            waitUntil {\r\n                echo 'Waiting for SonarQube to start ...'\r\n                def result = sh script: 'echo jenkins | sudo -S netstat -tulnp | egrep \\'9000|9092\\'', returnStatus: true\r\n                return (result == 0);\r\n            }\r\n        }\r\n    } \r\n    \r\n    stage('Run-Sonar') {     \r\n        echo 'Run sonar:sonar ...'\r\n\t\r\n        unstash 'SOURCE_CODE'           \r\n        unstash 'JACOCO_UT'\r\n        unstash 'JACOCO_IT'\r\n                \r\n        // sh \"'${M2_HOME}/bin/mvn' test-compile sonar:sonar -Dsonar.host.url=http://localhost:9000 -Dmaven.clean.skip=true\" \r\n        rtMaven.run pom: 'pom.xml', goals: 'test-compile sonar:sonar -Dsonar.host.url=http://localhost:9000 -Dmaven.clean.skip=true'\r\n    }\r\n\t\r\n    stage(\"Publish-Snapshot\") {\r\n        echo 'Publish SNAPSHOT war ...'\t              \r\n        def buildInfo = rtMaven.run pom: 'pom.xml', goals: 'clean install -DskipTests'\r\n        server.publishBuildInfo buildInfo\r\n    }\r\n}  \r\n\r\nnode (\"master\") {\r\n    echo 'Stash the performance tests ...'\r\n    stash includes: '**/TestPlan.jmx', name: 'JMETER_TESTS' \r\n}\r\n\r\nnode(\"PfMachine-jm\") {\r\n    \r\n    stage(\"Start-Payara\") {     \r\n        echo 'Starting Payara server ...'\r\n        sh 'echo jenkins | sudo -S /opt/payara41/bin/asadmin start-domain'\r\n    }\r\n    \r\n    stage (\"Download-WAR\") {\r\n        echo 'Download the application WAR ...'\r\n        \r\n        def downloadWAR = \"\"\"{\r\n            \"files\": [{\r\n                \"pattern\": \"snapshot-repo/javaee/SpringMVCDemo/${BN}/*.war\",\r\n                \"target\": \"war/\"\r\n            }]\r\n        }\"\"\"\r\n        \r\n        def server = Artifactory.server('artifactory')\r\n        server.download(downloadWAR)\r\n    }\r\n    \r\n    stage (\"Deploy-WAR\") {\r\n        echo 'Deploy the application WAR in Payara server ...'\r\n        sh \"echo jenkins | sudo -S /opt/payara41/bin/asadmin deploy --contextroot '/SpringMVCDemo' ${WORKSPACE}/war/javaee/SpringMVCDemo/${BN}/SpringMVCDemo-${BN}.war\"        \r\n    }\r\n    \r\n    stage (\"Deploy-JMeter-Tests\") {\r\n        echo 'Unstash JMeter tests ...'\r\n        unstash 'JMETER_TESTS'\r\n    }        \r\n    \r\n    stage (\"Run-JMeter-Tests\") {\r\n        echo 'Run the JMeter tests ...'\r\n        \r\n        sh \"/opt/jmeter/bin/jmeter.sh -Jduration=600 -n -t ${WORKSPACE}/TestPlan.jmx -l ${WORKSPACE}/results.jtl\"\r\n        performanceReport compareBuildPrevious: true, configType: 'ART', errorFailedThreshold: 0, errorUnstableResponseTimeThreshold: '', \r\n        errorUnstableThreshold: 0, failBuildIfNoResultFile: false, ignoreFailedBuilds: true, ignoreUnstableBuilds: true, \r\n        modeOfThreshold: false, modePerformancePerTestCase: true, modeThroughput: true, nthBuildNumber: 0, \r\n        parsers: [[$class: 'JMeterParser', glob: \"${WORKSPACE}/results.jtl\"]], \r\n        relativeFailedThresholdNegative: 0, relativeFailedThresholdPositive: 0, relativeUnstableThresholdNegative: 0, \r\n        relativeUnstableThresholdPositive: 0\r\n    }\r\n    \r\n    stage(\"Promote to staging\"){\r\n        echo 'Promoting application from SNAPSHOT to STAGING ...'\r\n        \r\n        def server = Artifactory.server('artifactory')\r\n        def promotionConfig = [\r\n            // Mandatory parameters\r\n        'buildName'          : 'project',\r\n        'buildNumber'        : BUILD_NUMBER,\r\n        'targetRepo'         : 'staging-repo',\r\n\r\n            // Optional parameters\r\n        'comment'            : 'Promoting to staging ....',\r\n        'sourceRepo'         : 'snapshot-repo',\r\n        'status'             : 'Staging',\r\n        'includeDependencies': false,\r\n        'copy'               : true,\r\n        'failFast'           : true\r\n        ]\r\n\r\n        // Promote build\r\n        server.promote promotionConfig\r\n    }\r\n}\r\n\r\n// QA, UAT, ... nodes (e.g. EC2 instances, local machines, etc)\r\necho 'Running in QA node ...'\r\necho 'Running in UAT node ...'\r\n\r\necho 'Promoting application from STAGING to RELEASE ...'\r\nstage(\"Promote to release\"){\r\n    def server = Artifactory.server('artifactory')\r\n    def promotionConfig = [\r\n        // Mandatory parameters\r\n        'buildName'          : 'project',\r\n        'buildNumber'        : BUILD_NUMBER,\r\n        'targetRepo'         : 'release-repo',\r\n\r\n        // Optional parameters\r\n        'comment'            : 'Promoting to release ....',\r\n        'sourceRepo'         : 'staging-repo',\r\n        'status'             : 'Release',\r\n        'includeDependencies': false,\r\n        'copy'               : true,\r\n        'failFast'           : true\r\n    ]\r\n\r\n    // Promote build\r\n    server.promote promotionConfig\r\n}\r\n\r\nparallel DeployInProd:{\t\r\n    node(\"ProdMachine-pd\") {\r\n\r\n        stage(\"Start-Payara\") {    \r\n\r\n            echo 'Ping Payara Server ...'\r\n            try{\r\n                retry(5) {\r\n                    sh script: 'echo jenkins | sudo -S nc -zv localhost 8080 && echo jenkins | sudo -S nc -zv localhost 4848'\r\n                }\r\n            } catch (error) {\r\n                sh 'echo Start Payara Server ...'\r\n                sh 'echo jenkins | sudo -S /opt/payara41/bin/asadmin start-domain'\r\n            } \r\n\t\t                   \r\n        }\r\n    \r\n        stage (\"Download-WAR\") {\r\n            echo 'Download the application WAR ...'\r\n        \r\n            def downloadWAR = \"\"\"{\r\n            \"files\": [{\r\n                \"pattern\": \"release-repo/javaee/SpringMVCDemo/${BN}/*.war\",\r\n                \"target\": \"war/\"\r\n            }]\r\n        }\"\"\"\r\n        \r\n            def server = Artifactory.server('artifactory')\r\n            server.download(downloadWAR)\r\n        }\r\n\t\r\n\tstage (\"Deploy-WAR\") {\r\n            echo 'Rename the WAR as SpringMVCDemo ...'\r\n            sh \"echo jenkins | sudo -S mv ${WORKSPACE}/war/javaee/SpringMVCDemo/${BN}/SpringMVCDemo-${BN}.war ${WORKSPACE}/war/javaee/SpringMVCDemo/${BN}/SpringMVCDemo.war\"\r\n\t\t\t\r\n            echo 'Deploy the application WAR in Payara server ...'\r\n            sh \"echo jenkins | sudo -S cp -f ${WORKSPACE}/war/javaee/SpringMVCDemo/${BN}/SpringMVCDemo.war /opt/payara41/glassfish/domains/domain1/autodeploy\"\r\n        }\r\n    }\r\n},\r\nDeployReleaseInGit:{\r\n    node (\"master\") {\r\n        stage('Push-To-Git'){\r\n            echo 'Push new branch to release ...'\r\n            \r\n            sh 'git config --global user.email \"provideasparam@foo.com\"'\r\n            sh 'git config --global user.name \"SomeUser\"'\r\n            sh 'git rm -r --cached Jenkinsfile'\r\n            sh 'git add .'\r\n            sh 'git commit -a -m \"Release candidate\"'\r\n            retry(5) {\r\n                withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'GitHubUP', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD']]){                \r\n                    sh \"git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/AnghelLeonard/SpringMVCDemo.git release_${BN}\"\r\n                }\r\n            }\r\n        }  \r\n    }\r\n},\r\nfailFast: false' did not contain the 'pipeline' step"
        }
      ]
    },
    {
      "full_repo_name": "cgeenen/docker-sop",
      "repo_url": "https://github.com/cgeenen/docker-sop",
      "html_url_jenkinsfile": "https://github.com/cgeenen/docker-sop/blob/ded7ae45db27973c0d71b88fafd8c8113a2cf9c1/jenkinsfile/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/124581837/git/blobs/45ddaf692336f34e987252f0670d658794d0edf9",
      "jenkins_pipeline": [
        {
          "error": "Jenkinsfile content '// change the project version (don't rely on version from pom.xml)\r\nenv.BN = VersionNumber([\r\n        versionNumberString : '${BUILD_MONTH}.${BUILDS_TODAY}.${BUILD_NUMBER}', \r\n        projectStartDate : '2017-02-09', \r\n        versionPrefix : 'v1.'\r\n    ])\r\n\t\t\r\nnode (\"master\") {                  \r\n    stage('Provision') {                \r\n        echo 'PIPELINE STARTED'\r\n        \r\n        echo 'Checkout source code from GitHub ...'\r\n        retry(5){\r\n            git branch: 'developer', credentialsId: 'GitHub', url: 'git@github.com:AnghelLeonard/SpringMVCDemo.git'\r\n        }\r\n        \r\n        echo 'Change the project version ...'\r\n        def W_M2_HOME = tool 'Maven'\r\n        bat \"${W_M2_HOME}\\\\bin\\\\mvn versions:set -DnewVersion=$BN -DgenerateBackupPoms=false\"                \r\n        \r\n        echo \"Create a new branch with name release_${BN} ...\"\r\n        def W_GIT_HOME = tool 'Git'\r\n        bat \"${W_GIT_HOME} checkout -b release_${BN}\"\r\n        \r\n        echo 'Stash the project source code ...'\r\n        stash includes: '**', excludes: '**/TestPlan.jmx', name: 'SOURCE_CODE'\r\n    }\r\n}\r\n\r\nparallel UnitTests:{\r\n    node (\"TestMachine-ut\") {\r\n        // we can also use: withEnv(['M2_HOME=/usr/share/maven', 'JAVA_HOME=/usr']) {}\r\n        env.MAVEN_HOME = '/usr/share/maven'\r\n        env.M2_HOME = '/usr/share/maven'\r\n        env.JAVA_HOME = '/usr'\t \r\n      \r\n        echo 'Preparing Artifactory to resolve dependencies ...'          \r\n        def server = Artifactory.server('artifactory')       \r\n        def rtMaven = Artifactory.newMavenBuild()\r\n        rtMaven.opts = '-Xms1024m -Xmx4096m'\r\n        rtMaven.resolver server: server, releaseRepo: 'virtual-repo', snapshotRepo: 'virtual-repo'\r\n        \r\n        stage('Run-ut') {   \r\n            try{\t\t\r\n                echo 'Unstash the project source code ...'\r\n                unstash 'SOURCE_CODE'\t                                                       \r\n                                \r\n                echo 'Run the unit tests (and Jacoco) ...'\r\n                // sh \"'${M2_HOME}/bin/mvn' clean test-compile jacoco:prepare-agent test -Djacoco.destFile=target/jacoco.exec\"   \r\n                rtMaven.run pom: 'pom.xml', goals: 'clean test-compile jacoco:prepare-agent test -Djacoco.destFile=target/jacoco.exec'\r\n\r\n                echo 'Run the Jacoco code coverage report for unit tests ...'\r\n                step([$class: 'JacocoPublisher', canComputeNew: false, defaultEncoding: '', healthy: '', \r\n                        pattern: '**/target/jacoco.exec', unHealthy: ''])\r\n\t\t\t\r\n                echo 'Stash Jacoco-ut exec ...'\r\n                stash includes: '**/target/jacoco.exec', name: 'JACOCO_UT' \r\n            \r\n                echo 'jUnit report (surefire) ...'\r\n                junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'\r\n                currentBuild.result='SUCCESS'\r\n            }catch (any){\r\n                currentBuild.result='FAILURE'\r\n                step([$class: 'Mailer', notifyEveryUnstableBuild: true, recipients: 'sample@org.com', sendToIndividuals: false])\r\n                throw any\r\n            } finally {                \r\n                // ...\r\n            }\r\n        }\r\n    }\r\n},\r\nIntegrationTests:{\r\n    node (\"TestMachine-it\") {\r\n\r\n        // we can also use: withEnv(['M2_HOME=/usr/share/maven', 'JAVA_HOME=/usr']) {}\r\n        env.MAVEN_HOME = '/usr/share/maven'\r\n        env.M2_HOME = '/usr/share/maven'\r\n        env.JAVA_HOME = '/usr'\r\n        \r\n        echo 'Preparing Artifactory to resolve dependencies ...'          \r\n        def server = Artifactory.server('artifactory')       \r\n        def rtMaven = Artifactory.newMavenBuild()\r\n        rtMaven.opts = '-Xms1024m -Xmx4096m'\r\n        rtMaven.resolver server: server, releaseRepo: 'virtual-repo', snapshotRepo: 'virtual-repo'\r\n\t\r\n        stage('Run-it') {\r\n        \r\n            echo 'Unstash the project source code ...'\r\n            unstash 'SOURCE_CODE'\r\n\t\t\r\n            echo 'Start postgresql ...'\r\n            sh 'echo jenkins | sudo -S /etc/init.d/postgresql start'\r\n                        \r\n            echo 'Run the integration tests (and Jacoco) ...'\r\n            // sh \"'${M2_HOME}/bin/mvn' clean package jacoco:prepare-agent verify -DskipUTs=true -Djacoco.destFile=target/jacoco-it.exec\"\r\n            rtMaven.run pom: 'pom.xml', goals: 'clean package jacoco:prepare-agent verify -DskipUTs=true -Djacoco.destFile=target/jacoco-it.exec'\r\n\r\n            echo 'Run the Jacoco code coverage report for integration tests ...'\r\n            step([$class: 'JacocoPublisher', canComputeNew: false, defaultEncoding: '', healthy: '', \r\n                    pattern: '**/target/jacoco-it.exec', unHealthy: ''])\r\n\t\t\t\r\n            echo 'Stash Jacoco-it exec ...'\r\n            stash includes: '**/target/jacoco-it.exec', name: 'JACOCO_IT'\r\n            \r\n            echo 'jUnit report (failsafe) ...'\r\n            junit allowEmptyResults: true, testResults: '**/target/failsafe-reports/*.xml'\r\n        }\r\n    }\r\n},\r\nfailFast: true\r\n\r\nnode (\"TestMachine-ut\") {\r\n    \r\n    // we can also use: withEnv(['M2_HOME=/usr/share/maven', 'JAVA_HOME=/usr']) {}\r\n    env.MAVEN_HOME = '/usr/share/maven'\r\n    env.M2_HOME = '/usr/share/maven'\r\n    env.JAVA_HOME = '/usr'\r\n    \r\n    echo 'Preparing Artifactory to resolve dependencies ...'          \r\n    def server = Artifactory.server('artifactory')       \r\n    def rtMaven = Artifactory.newMavenBuild()\r\n    rtMaven.opts = '-Xms1024m -Xmx4096m'\r\n    rtMaven.resolver server: server, releaseRepo: 'virtual-repo', snapshotRepo: 'virtual-repo'\r\n    \r\n    stage('SCA') {\r\n        echo 'Unstash the project source code ...'\r\n        unstash 'SOURCE_CODE'\r\n                \r\n        echo 'Executing Maven test-compile ...'\r\n        // sh \"'${M2_HOME}/bin/mvn' clean test-compile\"\r\n        rtMaven.run pom: 'pom.xml', goals: 'clean test-compile'\r\n    }    \r\n    \r\n    parallel Findbugs:{\r\n        stage('Findbugs') {    \r\n            echo 'Running Findbugs ...'\r\n            // sh \"'${M2_HOME}/bin/mvn' findbugs:findbugs\"\r\n            rtMaven.run pom: 'pom.xml', goals: 'findbugs:findbugs'\r\n            step([$class: 'FindBugsPublisher', canComputeNew: false, defaultEncoding: '', \r\n                    excludePattern: '', healthy: '', includePattern: '', pattern: '**/target/findbugsXml.xml', unHealthy: ''])\r\n            \r\n        }\r\n    },\r\n    Checkstyle:{\r\n        stage('Checkstyle') {            \r\n            echo 'Running Checkstyle ...'\r\n            // sh \"'${M2_HOME}/bin/mvn' checkstyle:check\"\r\n            rtMaven.run pom: 'pom.xml', goals: 'checkstyle:check'\r\n            step([$class: 'CheckStylePublisher', canComputeNew: false, defaultEncoding: '', \r\n                    healthy: '', pattern: '**/target/checkstyle-result.xml', unHealthy: ''])            \r\n        }\r\n    },\r\n    Pmd:{\r\n        stage('Pmd') {         \r\n            echo 'Running PMD ...'\t\t\r\n            // sh \"'${M2_HOME}/bin/mvn' pmd:pmd\"\r\n            rtMaven.run pom: 'pom.xml', goals: 'pmd:pmd'\r\n            step([$class: 'PmdPublisher', canComputeNew: false, defaultEncoding: '', \r\n                    healthy: '', pattern: '**/target/pmd.xml', unHealthy: ''])            \r\n        }\r\n    },\r\n    TaskScanner:{\r\n        stage('TaskScanner'){\r\n            echo 'Running TaskRunner ...'\r\n            step([$class: 'TasksPublisher', canComputeNew: false, defaultEncoding: '', \r\n                    excludePattern: '', healthy: '', high: 'TODO,TO DO,FIXME', low: '', normal: '', pattern: '**/*.java', unHealthy: ''])\r\n        }\r\n    },\r\n    failFast: false\r\n\t\r\n    stage('CombinedAnalysis'){\r\n        echo 'Running Analysis publisher ...'\r\n        step([$class: 'AnalysisPublisher', canComputeNew: false, defaultEncoding: '', healthy: '', unHealthy: ''])\r\n    }\r\n}\r\n\r\nnode(\"TestMachine-so\") {\r\n    \r\n    // we can also use: withEnv(['M2_HOME=/usr/share/maven', 'JAVA_HOME=/usr']) {}\r\n    env.MAVEN_HOME = '/usr/share/maven'\r\n    env.M2_HOME = '/usr/share/maven'\r\n    env.JAVA_HOME = '/usr'\r\n    \r\n    echo 'Preparing Artifactory to resolve dependencies ...'          \r\n    def server = Artifactory.server('artifactory')       \r\n    def rtMaven = Artifactory.newMavenBuild()\r\n    rtMaven.opts = '-Xms1024m -Xmx4096m'\r\n    rtMaven.resolver server: server, releaseRepo: 'virtual-repo', snapshotRepo: 'virtual-repo'\r\n    rtMaven.deployer server: server, releaseRepo: 'snapshot-repo', snapshotRepo: 'snapshot-repo'\r\n    \r\n    stage (\"Prepare-Sonar\") {        \r\n        echo 'Ping SonarQube ...'\r\n        try{\r\n            retry(5) {\r\n                sh script: 'echo jenkins | sudo -S nc -zv localhost 9000 && echo jenkins | sudo -S nc -zv localhost 9092'\r\n            }\r\n        } catch (error) {\r\n            sh 'echo Start SonarQube ...'\r\n            sh 'echo jenkins | sudo -S /opt/sonarqube/bin/linux-x86-64/sonar.sh start'\r\n        } \r\n        \r\n        timeout(time: 240, unit: 'SECONDS') {\r\n            waitUntil {\r\n                echo 'Waiting for SonarQube to start ...'\r\n                def result = sh script: 'echo jenkins | sudo -S netstat -tulnp | egrep \\'9000|9092\\'', returnStatus: true\r\n                return (result == 0);\r\n            }\r\n        }\r\n    } \r\n    \r\n    stage('Run-Sonar') {     \r\n        echo 'Run sonar:sonar ...'\r\n\t\r\n        unstash 'SOURCE_CODE'           \r\n        unstash 'JACOCO_UT'\r\n        unstash 'JACOCO_IT'\r\n                \r\n        // sh \"'${M2_HOME}/bin/mvn' test-compile sonar:sonar -Dsonar.host.url=http://localhost:9000 -Dmaven.clean.skip=true\" \r\n        rtMaven.run pom: 'pom.xml', goals: 'test-compile sonar:sonar -Dsonar.host.url=http://localhost:9000 -Dmaven.clean.skip=true'\r\n    }\r\n\t\r\n    stage(\"Publish-Snapshot\") {\r\n        echo 'Publish SNAPSHOT war ...'\t              \r\n        def buildInfo = rtMaven.run pom: 'pom.xml', goals: 'clean install -DskipTests'\r\n        server.publishBuildInfo buildInfo\r\n    }\r\n}  \r\n\r\nnode (\"master\") {\r\n    echo 'Stash the performance tests ...'\r\n    stash includes: '**/TestPlan.jmx', name: 'JMETER_TESTS' \r\n}\r\n\r\nnode(\"PfMachine-jm\") {\r\n    \r\n    stage(\"Start-Payara\") {     \r\n        echo 'Starting Payara server ...'\r\n        sh 'echo jenkins | sudo -S /opt/payara41/bin/asadmin start-domain'\r\n    }\r\n    \r\n    stage (\"Download-WAR\") {\r\n        echo 'Download the application WAR ...'\r\n        \r\n        def downloadWAR = \"\"\"{\r\n            \"files\": [{\r\n                \"pattern\": \"snapshot-repo/javaee/SpringMVCDemo/${BN}/*.war\",\r\n                \"target\": \"war/\"\r\n            }]\r\n        }\"\"\"\r\n        \r\n        def server = Artifactory.server('artifactory')\r\n        server.download(downloadWAR)\r\n    }\r\n    \r\n    stage (\"Deploy-WAR\") {\r\n        echo 'Deploy the application WAR in Payara server ...'\r\n        sh \"echo jenkins | sudo -S /opt/payara41/bin/asadmin deploy --contextroot '/SpringMVCDemo' ${WORKSPACE}/war/javaee/SpringMVCDemo/${BN}/SpringMVCDemo-${BN}.war\"        \r\n    }\r\n    \r\n    stage (\"Deploy-JMeter-Tests\") {\r\n        echo 'Unstash JMeter tests ...'\r\n        unstash 'JMETER_TESTS'\r\n    }        \r\n    \r\n    stage (\"Run-JMeter-Tests\") {\r\n        echo 'Run the JMeter tests ...'\r\n        \r\n        sh \"/opt/jmeter/bin/jmeter.sh -Jduration=600 -n -t ${WORKSPACE}/TestPlan.jmx -l ${WORKSPACE}/results.jtl\"\r\n        performanceReport compareBuildPrevious: true, configType: 'ART', errorFailedThreshold: 0, errorUnstableResponseTimeThreshold: '', \r\n        errorUnstableThreshold: 0, failBuildIfNoResultFile: false, ignoreFailedBuilds: true, ignoreUnstableBuilds: true, \r\n        modeOfThreshold: false, modePerformancePerTestCase: true, modeThroughput: true, nthBuildNumber: 0, \r\n        parsers: [[$class: 'JMeterParser', glob: \"${WORKSPACE}/results.jtl\"]], \r\n        relativeFailedThresholdNegative: 0, relativeFailedThresholdPositive: 0, relativeUnstableThresholdNegative: 0, \r\n        relativeUnstableThresholdPositive: 0\r\n    }\r\n    \r\n    stage(\"Promote to staging\"){\r\n        echo 'Promoting application from SNAPSHOT to STAGING ...'\r\n        \r\n        def server = Artifactory.server('artifactory')\r\n        def promotionConfig = [\r\n            // Mandatory parameters\r\n        'buildName'          : 'project',\r\n        'buildNumber'        : BUILD_NUMBER,\r\n        'targetRepo'         : 'staging-repo',\r\n\r\n            // Optional parameters\r\n        'comment'            : 'Promoting to staging ....',\r\n        'sourceRepo'         : 'snapshot-repo',\r\n        'status'             : 'Staging',\r\n        'includeDependencies': false,\r\n        'copy'               : true,\r\n        'failFast'           : true\r\n        ]\r\n\r\n        // Promote build\r\n        server.promote promotionConfig\r\n    }\r\n}\r\n\r\n// QA, UAT, ... nodes (e.g. EC2 instances, local machines, etc)\r\necho 'Running in QA node ...'\r\necho 'Running in UAT node ...'\r\n\r\necho 'Promoting application from STAGING to RELEASE ...'\r\nstage(\"Promote to release\"){\r\n    def server = Artifactory.server('artifactory')\r\n    def promotionConfig = [\r\n        // Mandatory parameters\r\n        'buildName'          : 'project',\r\n        'buildNumber'        : BUILD_NUMBER,\r\n        'targetRepo'         : 'release-repo',\r\n\r\n        // Optional parameters\r\n        'comment'            : 'Promoting to release ....',\r\n        'sourceRepo'         : 'staging-repo',\r\n        'status'             : 'Release',\r\n        'includeDependencies': false,\r\n        'copy'               : true,\r\n        'failFast'           : true\r\n    ]\r\n\r\n    // Promote build\r\n    server.promote promotionConfig\r\n}\r\n\r\nparallel DeployInProd:{\t\r\n    node(\"ProdMachine-pd\") {\r\n\r\n        stage(\"Start-Payara\") {    \r\n\r\n            echo 'Ping Payara Server ...'\r\n            try{\r\n                retry(5) {\r\n                    sh script: 'echo jenkins | sudo -S nc -zv localhost 8080 && echo jenkins | sudo -S nc -zv localhost 4848'\r\n                }\r\n            } catch (error) {\r\n                sh 'echo Start Payara Server ...'\r\n                sh 'echo jenkins | sudo -S /opt/payara41/bin/asadmin start-domain'\r\n            } \r\n\t\t                   \r\n        }\r\n    \r\n        stage (\"Download-WAR\") {\r\n            echo 'Download the application WAR ...'\r\n        \r\n            def downloadWAR = \"\"\"{\r\n            \"files\": [{\r\n                \"pattern\": \"release-repo/javaee/SpringMVCDemo/${BN}/*.war\",\r\n                \"target\": \"war/\"\r\n            }]\r\n        }\"\"\"\r\n        \r\n            def server = Artifactory.server('artifactory')\r\n            server.download(downloadWAR)\r\n        }\r\n\t\r\n\tstage (\"Deploy-WAR\") {\r\n            echo 'Rename the WAR as SpringMVCDemo ...'\r\n            sh \"echo jenkins | sudo -S mv ${WORKSPACE}/war/javaee/SpringMVCDemo/${BN}/SpringMVCDemo-${BN}.war ${WORKSPACE}/war/javaee/SpringMVCDemo/${BN}/SpringMVCDemo.war\"\r\n\t\t\t\r\n            echo 'Deploy the application WAR in Payara server ...'\r\n            sh \"echo jenkins | sudo -S cp -f ${WORKSPACE}/war/javaee/SpringMVCDemo/${BN}/SpringMVCDemo.war /opt/payara41/glassfish/domains/domain1/autodeploy\"\r\n        }\r\n    }\r\n},\r\nDeployReleaseInGit:{\r\n    node (\"master\") {\r\n        stage('Push-To-Git'){\r\n            echo 'Push new branch to release ...'\r\n            \r\n            sh 'git config --global user.email \"provideasparam@foo.com\"'\r\n            sh 'git config --global user.name \"SomeUser\"'\r\n            sh 'git rm -r --cached Jenkinsfile'\r\n            sh 'git add .'\r\n            sh 'git commit -a -m \"Release candidate\"'\r\n            retry(5) {\r\n                withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'GitHubUP', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD']]){                \r\n                    sh \"git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/AnghelLeonard/SpringMVCDemo.git release_${BN}\"\r\n                }\r\n            }\r\n        }  \r\n    }\r\n},\r\nfailFast: false' did not contain the 'pipeline' step"
        }
      ]
    },
    {
      "full_repo_name": "dwalldorf/jadecR",
      "repo_url": "https://github.com/dwalldorf/jadecR",
      "html_url_jenkinsfile": "https://github.com/dwalldorf/jadecR/blob/59da1d02ee3d9df66e1b353a663668a44c0b259a/Jenkinsfile",
      "api_url_jenkinsfile": "https://api.github.com/repositories/32922761/git/blobs/6230dde368d2bc84367b76f0ee23ce18a10f2e07",
      "jenkins_pipeline": [
        {
          "error": "Tool type \"jdk\" does not have an install of \"jdk8\" configured - did you mean \"null\"? @ line 64, column 9."
        }
      ]
    }
  ]
}