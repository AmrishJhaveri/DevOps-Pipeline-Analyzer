{
    "research_question_2": "How is the presence of triggers in a pipeline correlates with the number of stages in the pipeline? What are the common types of triggers used in pipelines?",
    "corelation_coefficient": -0.06,
    "counts_of_types_of_triggers": {
        "cron": 18,
        "pollscm": 4
    },
    "counts_of_triggers_and_stages": [
        {
            "triggers": 0,
            "stages": 3
        },
        {
            "triggers": 0,
            "stages": 4
        },
        {
            "triggers": 0,
            "stages": 3
        },
        {
            "triggers": 0,
            "stages": 8
        },
        {
            "triggers": 0,
            "stages": 3
        },
        {
            "triggers": 0,
            "stages": 7
        },
        {
            "triggers": 1,
            "stages": 2
        },
        {
            "triggers": 1,
            "stages": 2
        },
        {
            "triggers": 1,
            "stages": 2
        },
        {
            "triggers": 1,
            "stages": 1
        },
        {
            "triggers": 1,
            "stages": 1
        },
        {
            "triggers": 1,
            "stages": 6
        },
        {
            "triggers": 1,
            "stages": 2
        },
        {
            "triggers": 1,
            "stages": 2
        },
        {
            "triggers": 1,
            "stages": 1
        },
        {
            "triggers": 1,
            "stages": 3
        },
        {
            "triggers": 1,
            "stages": 3
        },
        {
            "triggers": 1,
            "stages": 3
        },
        {
            "triggers": 1,
            "stages": 3
        },
        {
            "triggers": 1,
            "stages": 3
        },
        {
            "triggers": 2,
            "stages": 6
        },
        {
            "triggers": 1,
            "stages": 7
        },
        {
            "triggers": 1,
            "stages": 5
        },
        {
            "triggers": 1,
            "stages": 7
        },
        {
            "triggers": 1,
            "stages": 7
        },
        {
            "triggers": 1,
            "stages": 2
        },
        {
            "triggers": 1,
            "stages": 12
        }
    ],
    "valid_jenkinsfiles_scanned": 27,
    "project_details": [
        {
            "full_repo_name": "weiqi7777/automatic_flow_for_IC_verification",
            "repo_url": "https://github.com/weiqi7777/automatic_flow_for_IC_verification",
            "html_url_jenkinsfile": "https://github.com/weiqi7777/automatic_flow_for_IC_verification/blob/2966f6675435d199e6092d42f799707959e13ef7/jenkins/pipeline/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/126573121/git/blobs/4e0d4d2fe16e468df4ddd8f6488574de00166298",
            "jenkins_pipeline": [
                {
                    "error": "expecting anything but ''\\n''; got it anyway @ line 23, column 44."
                }
            ]
        },
        {
            "full_repo_name": "prachikhadke/jenkins-pipeline",
            "repo_url": "https://github.com/prachikhadke/jenkins-pipeline",
            "html_url_jenkinsfile": "https://github.com/prachikhadke/jenkins-pipeline/blob/dd366f6d38487bcc5eee39891820450305a375a7/jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/88538451/git/blobs/d2c133e534e313881ff025f45514f6294e3cf84f",
            "jenkins_pipeline": [
                {
                    "error": "unexpected token: * @ line 9, column 2."
                }
            ]
        },
        {
            "full_repo_name": "Chabare/YealinkFirmware",
            "repo_url": "https://github.com/Chabare/YealinkFirmware",
            "html_url_jenkinsfile": "https://github.com/Chabare/YealinkFirmware/blob/db3e996dda10e759c7c6d0ee23a29bc46bdc2af9/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/88534309/git/blobs/28f30210562c3e22a9c5eb22e11a2ed92013b01a",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Run stable",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "rustup default stable"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "cargo run"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Archive",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "archiveArtifacts",
                                            "arguments": [
                                                {
                                                    "key": "artifacts",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "*.rom"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "expression",
                                        "arguments": [
                                            {
                                                "key": "scriptBlock",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "def files = findFiles(glob: \"*.rom\")\n                    return files != null && files.size() > 0"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Deploy",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'aws-s3-credentials', usernameVariable: 'AWS_ACCESS_KEY_ID', passwordVariable: 'AWS_SECRET_ACCESS_KEY']]) {\n                        def files = findFiles(glob: \"*.rom\")\n                        def file = files[0]\n                        sh \"python3.6 deploy.py ${file}\"\n                    }"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "expression",
                                        "arguments": [
                                            {
                                                "key": "scriptBlock",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "def files = findFiles(glob: \"*.rom\")\n                    return files != null && files.size() > 0"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    ],
                    "post": {
                        "conditions": [
                            {
                                "condition": "always",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "deleteDir",
                                            "arguments": []
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "agent": {
                        "type": "any"
                    }
                }
            }
        },
        {
            "full_repo_name": "derekbekoe/azure-cli-scratch",
            "repo_url": "https://github.com/derekbekoe/azure-cli-scratch",
            "html_url_jenkinsfile": "https://github.com/derekbekoe/azure-cli-scratch/blob/178aed0b71be724e94217d22ed335fe40af6d82c/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/95806334/git/blobs/9a7a60e3e7cb9ba28680846052ae77839260a416",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Build",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "checkout",
                                            "arguments": [
                                                {
                                                    "key": "scm",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${scm}"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "./scripts/jenkins_build.sh"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "./scripts/jenkins_archive.sh"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "deleteDir",
                                            "arguments": []
                                        }
                                    ]
                                }
                            ],
                            "agent": {
                                "type": "label",
                                "argument": {
                                    "isLiteral": true,
                                    "value": "linux-build"
                                }
                            },
                            "post": {
                                "conditions": [
                                    {
                                        "condition": "always",
                                        "branch": {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "deleteDir",
                                                    "arguments": []
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Test",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "def test_tasks = [:]\n\n          // Add live test tasks\n          def modules = ['acs', 'keyvault', 'storage', 'sql', 'role', 'vm', 'network']\n          for (int i = 0; i < modules.size(); ++i) {\n            def name = modules.get(i)\n            test_tasks[\"Live Test: ${name}\"] = {\n              node('linux-build') {\n                checkout scm\n                withCredentials([[$class: 'UsernamePasswordMultiBinding', \n                                  credentialsId: 'AzureSDKADGraph2',\n                                  usernameVariable: 'AZURE_CLI_TEST_DEV_SP_NAME', \n                                  passwordVariable: 'AZURE_CLI_TEST_DEV_SP_PASSWORD']]) {\n                withCredentials([string(credentialsId: 'AzureSDKADGraph2_Tenant',\n                                        variable: 'AZURE_CLI_TEST_DEV_SP_TENANT')]) {\n                  sh \"./scripts/jenkins_live_test.sh ${name}\"\n                }}\n              }\n            }\n          }\n\n          // Add performance test tasks\n          def platforms = ['perf-ubuntu-a0', 'perf-ubuntu-ds1']\n          for (int i = 0; i < platforms.size(); i++) {\n            platform = platforms.get(i)\n            test_tasks[\"Performance Test: ${platform}\"] = perf_closure(platform)\n          }\n\n          test_tasks.failFast = false\n          parallel test_tasks"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "agent": {
                        "type": "none"
                    },
                    "triggers": {
                        "triggers": [
                            {
                                "name": "cron",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "0 3 * * *"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "AFactor/API-yamls-customers",
            "repo_url": "https://github.com/AFactor/API-yamls-customers",
            "html_url_jenkinsfile": "https://github.com/AFactor/API-yamls-customers/blob/a1b619592beef2b1af445300d671db358e5e463e/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/119030778/git/blobs/3c713a418040a933a559d9a98fc574b1784da93e",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Check Source",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "deleteDir",
                                            "arguments": []
                                        },
                                        {
                                            "name": "checkout",
                                            "arguments": [
                                                {
                                                    "key": "scm",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "[$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'PathRestriction', excludedRegions: '', includedRegions: 'products/.*']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'jenkins-generated-ssh-key', name: 'customergit', url: 'git@github.com:AFactor/API-yamls-customers.git']]]"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "dir",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "core"
                                            },
                                            "children": [
                                                {
                                                    "name": "git",
                                                    "arguments": [
                                                        {
                                                            "key": "url",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "git@github.com:AFactor/api-core.git"
                                                            }
                                                        },
                                                        {
                                                            "key": "credentialsId",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "jenkins-generated-ssh-key"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Validate and Tokenize",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "returnStdout",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": true
                                                    }
                                                },
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"\"\" core/Scripts/validatetokenize.sh ${getChangeString()} \"\"\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "expression",
                                        "arguments": [
                                            {
                                                "key": "scriptBlock",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "return  getChangeString() != \"\""
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Copy to temp",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "returnStdout",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": true
                                                    }
                                                },
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"\"\" core/Scripts/copy.sh ${getChangeString()} \"\"\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "expression",
                                        "arguments": [
                                            {
                                                "key": "scriptBlock",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "return  getChangeString() != \"\""
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Deploy to API Cloud",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "configFileProvider",
                                            "arguments": {
                                                "isLiteral": false,
                                                "value": "${[configFile(fileId: '14ce0658-5942-4980-a3cf-7bef5e1bd2c9', variable: 'ciConfig')]}"
                                            },
                                            "children": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "returnStdout",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": true
                                                            }
                                                        },
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "core/Scripts/deploy.sh"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "expression",
                                        "arguments": [
                                            {
                                                "key": "scriptBlock",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "return  getChangeString() != \"\""
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    ],
                    "environment": [
                        {
                            "key": "fileNames",
                            "value": {
                                "isLiteral": true,
                                "value": "none"
                            }
                        }
                    ],
                    "agent": {
                        "type": "any"
                    },
                    "options": {
                        "options": [
                            {
                                "name": "skipDefaultCheckout",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": true
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "Azure/azure-cli",
            "repo_url": "https://github.com/Azure/azure-cli",
            "html_url_jenkinsfile": "https://github.com/Azure/azure-cli/blob/30c98a75c36c02a657f1753ff5c48502dc7f7933/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/51040886/git/blobs/9a7a60e3e7cb9ba28680846052ae77839260a416",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Build",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "checkout",
                                            "arguments": [
                                                {
                                                    "key": "scm",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${scm}"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "./scripts/jenkins_build.sh"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "./scripts/jenkins_archive.sh"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "deleteDir",
                                            "arguments": []
                                        }
                                    ]
                                }
                            ],
                            "agent": {
                                "type": "label",
                                "argument": {
                                    "isLiteral": true,
                                    "value": "linux-build"
                                }
                            },
                            "post": {
                                "conditions": [
                                    {
                                        "condition": "always",
                                        "branch": {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "deleteDir",
                                                    "arguments": []
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Test",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "def test_tasks = [:]\n\n          // Add live test tasks\n          def modules = ['acs', 'keyvault', 'storage', 'sql', 'role', 'vm', 'network']\n          for (int i = 0; i < modules.size(); ++i) {\n            def name = modules.get(i)\n            test_tasks[\"Live Test: ${name}\"] = {\n              node('linux-build') {\n                checkout scm\n                withCredentials([[$class: 'UsernamePasswordMultiBinding', \n                                  credentialsId: 'AzureSDKADGraph2',\n                                  usernameVariable: 'AZURE_CLI_TEST_DEV_SP_NAME', \n                                  passwordVariable: 'AZURE_CLI_TEST_DEV_SP_PASSWORD']]) {\n                withCredentials([string(credentialsId: 'AzureSDKADGraph2_Tenant',\n                                        variable: 'AZURE_CLI_TEST_DEV_SP_TENANT')]) {\n                  sh \"./scripts/jenkins_live_test.sh ${name}\"\n                }}\n              }\n            }\n          }\n\n          // Add performance test tasks\n          def platforms = ['perf-ubuntu-a0', 'perf-ubuntu-ds1']\n          for (int i = 0; i < platforms.size(); i++) {\n            platform = platforms.get(i)\n            test_tasks[\"Performance Test: ${platform}\"] = perf_closure(platform)\n          }\n\n          test_tasks.failFast = false\n          parallel test_tasks"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "agent": {
                        "type": "none"
                    },
                    "triggers": {
                        "triggers": [
                            {
                                "name": "cron",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "0 3 * * *"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "aag09/azurecli",
            "repo_url": "https://github.com/aag09/azurecli",
            "html_url_jenkinsfile": "https://github.com/aag09/azurecli/blob/30c98a75c36c02a657f1753ff5c48502dc7f7933/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/107339850/git/blobs/9a7a60e3e7cb9ba28680846052ae77839260a416",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Build",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "checkout",
                                            "arguments": [
                                                {
                                                    "key": "scm",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${scm}"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "./scripts/jenkins_build.sh"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "./scripts/jenkins_archive.sh"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "deleteDir",
                                            "arguments": []
                                        }
                                    ]
                                }
                            ],
                            "agent": {
                                "type": "label",
                                "argument": {
                                    "isLiteral": true,
                                    "value": "linux-build"
                                }
                            },
                            "post": {
                                "conditions": [
                                    {
                                        "condition": "always",
                                        "branch": {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "deleteDir",
                                                    "arguments": []
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Test",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "def test_tasks = [:]\n\n          // Add live test tasks\n          def modules = ['acs', 'keyvault', 'storage', 'sql', 'role', 'vm', 'network']\n          for (int i = 0; i < modules.size(); ++i) {\n            def name = modules.get(i)\n            test_tasks[\"Live Test: ${name}\"] = {\n              node('linux-build') {\n                checkout scm\n                withCredentials([[$class: 'UsernamePasswordMultiBinding', \n                                  credentialsId: 'AzureSDKADGraph2',\n                                  usernameVariable: 'AZURE_CLI_TEST_DEV_SP_NAME', \n                                  passwordVariable: 'AZURE_CLI_TEST_DEV_SP_PASSWORD']]) {\n                withCredentials([string(credentialsId: 'AzureSDKADGraph2_Tenant',\n                                        variable: 'AZURE_CLI_TEST_DEV_SP_TENANT')]) {\n                  sh \"./scripts/jenkins_live_test.sh ${name}\"\n                }}\n              }\n            }\n          }\n\n          // Add performance test tasks\n          def platforms = ['perf-ubuntu-a0', 'perf-ubuntu-ds1']\n          for (int i = 0; i < platforms.size(); i++) {\n            platform = platforms.get(i)\n            test_tasks[\"Performance Test: ${platform}\"] = perf_closure(platform)\n          }\n\n          test_tasks.failFast = false\n          parallel test_tasks"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "agent": {
                        "type": "none"
                    },
                    "triggers": {
                        "triggers": [
                            {
                                "name": "cron",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "0 3 * * *"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "sheeeng/elpmaxe-jubilant-giggle",
            "repo_url": "https://github.com/sheeeng/elpmaxe-jubilant-giggle",
            "html_url_jenkinsfile": "https://github.com/sheeeng/elpmaxe-jubilant-giggle/blob/13b73470a9e6bece70f6c325f4dee87962261463/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/85839408/git/blobs/b2b3ec2ee0af048bf158783e4ae98b17342cab81",
            "jenkins_pipeline": [
                {
                    "error": [
                        "Tool type \"maven\" does not have an install of \"M3\" configured - did you mean \"Jenkins_maven\"? @ line 26, column 15.",
                        "Tool type \"jdk\" does not have an install of \"JDK8\" configured - did you mean \"null\"? @ line 27, column 13."
                    ]
                }
            ]
        },
        {
            "full_repo_name": "jnTJ3cP7/jf",
            "repo_url": "https://github.com/jnTJ3cP7/jf",
            "html_url_jenkinsfile": "https://github.com/jnTJ3cP7/jf/blob/6630f655fdcef43612e3181ad1c1aee458c97265/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/104537170/git/blobs/f2cfbe03b2ad93e007c97a999def6031bc235c72",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Example",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"Hello from $NAME\""
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "def browsers = ['chrome', 'firefox']\n                         for (int i = 0; i < browsers.size(); ++i) {\n                              echo \"Testing the ${browsers[i]} browser.\"\n                         }"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "expression",
                                        "arguments": [
                                            {
                                                "key": "scriptBlock",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "return params.DEBUG_BUILD"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            },
                            "environment": [
                                {
                                    "key": "NAME",
                                    "value": {
                                        "isLiteral": true,
                                        "value": "Rafal"
                                    }
                                }
                            ]
                        }
                    ],
                    "post": {
                        "conditions": [
                            {
                                "condition": "always",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "I will always say Hello again!"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "agent": {
                        "type": "any"
                    },
                    "options": {
                        "options": [
                            {
                                "name": "timeout",
                                "arguments": [
                                    {
                                        "key": "time",
                                        "value": {
                                            "isLiteral": true,
                                            "value": 5
                                        }
                                    }
                                ]
                            }
                        ]
                    },
                    "parameters": {
                        "parameters": [
                            {
                                "name": "booleanParam",
                                "arguments": [
                                    {
                                        "key": "name",
                                        "value": {
                                            "isLiteral": true,
                                            "value": "DEBUG_BUILD"
                                        }
                                    },
                                    {
                                        "key": "defaultValue",
                                        "value": {
                                            "isLiteral": true,
                                            "value": true
                                        }
                                    },
                                    {
                                        "key": "description",
                                        "value": {
                                            "isLiteral": true,
                                            "value": "Is it the debug build?"
                                        }
                                    }
                                ]
                            }
                        ]
                    },
                    "triggers": {
                        "triggers": [
                            {
                                "name": "cron",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "0 * * * *"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "moschutt/complex-1",
            "repo_url": "https://github.com/moschutt/complex-1",
            "html_url_jenkinsfile": "https://github.com/moschutt/complex-1/blob/04fc4c9fd0511efc9e87139f4d46f247d8655172/test1/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/129616799/git/blobs/7ae5281742103b19250956d1cd40f00729c906f1",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Example",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"Hello from $NAME\""
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "def browsers = ['chrome', 'firefox']\n                    for (int i = 0; i < browsers.size(); ++i) {\n                        echo \"Testing the ${browsers[i]} browser.\"\n                    }"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "expression",
                                        "arguments": [
                                            {
                                                "key": "scriptBlock",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "return params.DEBUG_BUILD"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            },
                            "environment": [
                                {
                                    "key": "NAME",
                                    "value": {
                                        "isLiteral": true,
                                        "value": "Rafal"
                                    }
                                }
                            ]
                        }
                    ],
                    "post": {
                        "conditions": [
                            {
                                "condition": "always",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "I will always say Hello again!"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "agent": {
                        "type": "any"
                    },
                    "options": {
                        "options": [
                            {
                                "name": "timeout",
                                "arguments": [
                                    {
                                        "key": "time",
                                        "value": {
                                            "isLiteral": true,
                                            "value": 5
                                        }
                                    }
                                ]
                            }
                        ]
                    },
                    "parameters": {
                        "parameters": [
                            {
                                "name": "booleanParam",
                                "arguments": [
                                    {
                                        "key": "name",
                                        "value": {
                                            "isLiteral": true,
                                            "value": "DEBUG_BUILD"
                                        }
                                    },
                                    {
                                        "key": "defaultValue",
                                        "value": {
                                            "isLiteral": true,
                                            "value": true
                                        }
                                    },
                                    {
                                        "key": "description",
                                        "value": {
                                            "isLiteral": true,
                                            "value": "Is it the debug build?"
                                        }
                                    }
                                ]
                            }
                        ]
                    },
                    "triggers": {
                        "triggers": [
                            {
                                "name": "cron",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "* * * * *"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "rompic/jenkinspipeline",
            "repo_url": "https://github.com/rompic/jenkinspipeline",
            "html_url_jenkinsfile": "https://github.com/rompic/jenkinspipeline/blob/ec0e8f59260239a8cc2f982812bf997e03a09cb9/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/89165998/git/blobs/ea471c691e3a33fb87f7630c1d9708f7d82e7978",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Build & unit tests",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "running build and unit tests"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "deleteDir",
                                            "arguments": []
                                        },
                                        {
                                            "name": "checkout",
                                            "arguments": [
                                                {
                                                    "key": "scm",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${scm}"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "agent": {
                                "type": "any"
                            }
                        },
                        {
                            "name": "Automated Acceptance tests",
                            "parallel": [
                                {
                                    "name": "Automated Acceptance tests Firefox",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "echo",
                                                    "arguments": [
                                                        {
                                                            "key": "message",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "testing Firefox"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "agent": {
                                        "type": "any"
                                    }
                                },
                                {
                                    "name": "Automated Acceptance tests chrome",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "echo",
                                                    "arguments": [
                                                        {
                                                            "key": "message",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "testing chrome"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "agent": {
                                        "type": "any"
                                    }
                                }
                            ]
                        },
                        {
                            "name": "Deploy to Stage for User acceptance tests",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "milestone",
                                            "arguments": [
                                                {
                                                    "key": "ordinal",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": 1
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "timeout",
                                            "arguments": [
                                                {
                                                    "key": "time",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": 30
                                                    }
                                                },
                                                {
                                                    "key": "unit",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "DAYS"
                                                    }
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "name": "input",
                                                    "arguments": [
                                                        {
                                                            "key": "message",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "Deploy to Stage?"
                                                            }
                                                        },
                                                        {
                                                            "key": "submitter",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "admin,tom.tester,pete.pm"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "milestone",
                                            "arguments": [
                                                {
                                                    "key": "ordinal",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": 2
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "branch",
                                        "arguments": {
                                            "isLiteral": true,
                                            "value": "master"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Deploy to Stage",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "deploying to stage; running smoke tests"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "def hosts = ['host1', 'host2']\n          for (int i = 0; i < hosts.size(); ++i) {\n            echo \"Deploying to ${hosts[i]}\"\n          }"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "agent": {
                                "type": "any"
                            },
                            "when": {
                                "conditions": [
                                    {
                                        "name": "branch",
                                        "arguments": {
                                            "isLiteral": true,
                                            "value": "master"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Deploy LIVE?",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "milestone",
                                            "arguments": [
                                                {
                                                    "key": "ordinal",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": 3
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "timeout",
                                            "arguments": [
                                                {
                                                    "key": "time",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": 30
                                                    }
                                                },
                                                {
                                                    "key": "unit",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "DAYS"
                                                    }
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "name": "input",
                                                    "arguments": [
                                                        {
                                                            "key": "message",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "Deploy to Live?"
                                                            }
                                                        },
                                                        {
                                                            "key": "submitter",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "admin"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "milestone",
                                            "arguments": [
                                                {
                                                    "key": "ordinal",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": 4
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "branch",
                                        "arguments": {
                                            "isLiteral": true,
                                            "value": "master"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Release",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "deploying to live and running smoke tests"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "agent": {
                                "type": "any"
                            },
                            "when": {
                                "conditions": [
                                    {
                                        "name": "branch",
                                        "arguments": {
                                            "isLiteral": true,
                                            "value": "master"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "post": {
                        "conditions": [
                            {
                                "condition": "failure",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "emailext",
                                            "arguments": [
                                                {
                                                    "key": "subject",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'\""
                                                    }
                                                },
                                                {
                                                    "key": "body",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"\"\"<p>FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>\n     \t<p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>\n\t${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>\"\"\""
                                                    }
                                                },
                                                {
                                                    "key": "recipientProviders",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${[[$class: 'CulpritsRecipientProvider']]}"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "agent": {
                        "type": "none"
                    },
                    "options": {
                        "options": [
                            {
                                "name": "timeout",
                                "arguments": [
                                    {
                                        "key": "time",
                                        "value": {
                                            "isLiteral": true,
                                            "value": 60
                                        }
                                    },
                                    {
                                        "key": "unit",
                                        "value": {
                                            "isLiteral": true,
                                            "value": "DAYS"
                                        }
                                    }
                                ]
                            },
                            {
                                "name": "buildDiscarder",
                                "arguments": [
                                    {
                                        "name": "logRotator",
                                        "arguments": [
                                            {
                                                "key": "numToKeepStr",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "30"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    "triggers": {
                        "triggers": [
                            {
                                "name": "pollSCM",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "H/5 * * * *"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "ahmedelnably/newCreate",
            "repo_url": "https://github.com/ahmedelnably/newCreate",
            "html_url_jenkinsfile": "https://github.com/ahmedelnably/newCreate/blob/ae8e32d516034aa5da93047720402b32362d7126/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/119572463/git/blobs/9a7a60e3e7cb9ba28680846052ae77839260a416",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Build",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "checkout",
                                            "arguments": [
                                                {
                                                    "key": "scm",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${scm}"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "./scripts/jenkins_build.sh"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "./scripts/jenkins_archive.sh"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "deleteDir",
                                            "arguments": []
                                        }
                                    ]
                                }
                            ],
                            "agent": {
                                "type": "label",
                                "argument": {
                                    "isLiteral": true,
                                    "value": "linux-build"
                                }
                            },
                            "post": {
                                "conditions": [
                                    {
                                        "condition": "always",
                                        "branch": {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "deleteDir",
                                                    "arguments": []
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Test",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "def test_tasks = [:]\n\n          // Add live test tasks\n          def modules = ['acs', 'keyvault', 'storage', 'sql', 'role', 'vm', 'network']\n          for (int i = 0; i < modules.size(); ++i) {\n            def name = modules.get(i)\n            test_tasks[\"Live Test: ${name}\"] = {\n              node('linux-build') {\n                checkout scm\n                withCredentials([[$class: 'UsernamePasswordMultiBinding', \n                                  credentialsId: 'AzureSDKADGraph2',\n                                  usernameVariable: 'AZURE_CLI_TEST_DEV_SP_NAME', \n                                  passwordVariable: 'AZURE_CLI_TEST_DEV_SP_PASSWORD']]) {\n                withCredentials([string(credentialsId: 'AzureSDKADGraph2_Tenant',\n                                        variable: 'AZURE_CLI_TEST_DEV_SP_TENANT')]) {\n                  sh \"./scripts/jenkins_live_test.sh ${name}\"\n                }}\n              }\n            }\n          }\n\n          // Add performance test tasks\n          def platforms = ['perf-ubuntu-a0', 'perf-ubuntu-ds1']\n          for (int i = 0; i < platforms.size(); i++) {\n            platform = platforms.get(i)\n            test_tasks[\"Performance Test: ${platform}\"] = perf_closure(platform)\n          }\n\n          test_tasks.failFast = false\n          parallel test_tasks"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "agent": {
                        "type": "none"
                    },
                    "triggers": {
                        "triggers": [
                            {
                                "name": "cron",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "0 3 * * *"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "mrm1ck/azureCLI",
            "repo_url": "https://github.com/mrm1ck/azureCLI",
            "html_url_jenkinsfile": "https://github.com/mrm1ck/azureCLI/blob/30c98a75c36c02a657f1753ff5c48502dc7f7933/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/107491009/git/blobs/9a7a60e3e7cb9ba28680846052ae77839260a416",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Build",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "checkout",
                                            "arguments": [
                                                {
                                                    "key": "scm",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${scm}"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "./scripts/jenkins_build.sh"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "./scripts/jenkins_archive.sh"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "deleteDir",
                                            "arguments": []
                                        }
                                    ]
                                }
                            ],
                            "agent": {
                                "type": "label",
                                "argument": {
                                    "isLiteral": true,
                                    "value": "linux-build"
                                }
                            },
                            "post": {
                                "conditions": [
                                    {
                                        "condition": "always",
                                        "branch": {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "deleteDir",
                                                    "arguments": []
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Test",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "def test_tasks = [:]\n\n          // Add live test tasks\n          def modules = ['acs', 'keyvault', 'storage', 'sql', 'role', 'vm', 'network']\n          for (int i = 0; i < modules.size(); ++i) {\n            def name = modules.get(i)\n            test_tasks[\"Live Test: ${name}\"] = {\n              node('linux-build') {\n                checkout scm\n                withCredentials([[$class: 'UsernamePasswordMultiBinding', \n                                  credentialsId: 'AzureSDKADGraph2',\n                                  usernameVariable: 'AZURE_CLI_TEST_DEV_SP_NAME', \n                                  passwordVariable: 'AZURE_CLI_TEST_DEV_SP_PASSWORD']]) {\n                withCredentials([string(credentialsId: 'AzureSDKADGraph2_Tenant',\n                                        variable: 'AZURE_CLI_TEST_DEV_SP_TENANT')]) {\n                  sh \"./scripts/jenkins_live_test.sh ${name}\"\n                }}\n              }\n            }\n          }\n\n          // Add performance test tasks\n          def platforms = ['perf-ubuntu-a0', 'perf-ubuntu-ds1']\n          for (int i = 0; i < platforms.size(); i++) {\n            platform = platforms.get(i)\n            test_tasks[\"Performance Test: ${platform}\"] = perf_closure(platform)\n          }\n\n          test_tasks.failFast = false\n          parallel test_tasks"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "agent": {
                        "type": "none"
                    },
                    "triggers": {
                        "triggers": [
                            {
                                "name": "cron",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "0 3 * * *"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "de-jcup/eclipse-jenkins-editor",
            "repo_url": "https://github.com/de-jcup/eclipse-jenkins-editor",
            "html_url_jenkinsfile": "https://github.com/de-jcup/eclipse-jenkins-editor/blob/14b2170be62e4ed94f1673a7171b1e3bfdbd7814/jenkins-editor-other/testscripts/declarative-full/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/104872758/git/blobs/476d36de3384d917aa8c1cea23a1b337a58620d1",
            "jenkins_pipeline": [
                {
                    "error": [
                        "No steps specified for branch @ line 192, column 18.",
                        "No steps specified for branch @ line 196, column 18.",
                        "No steps specified for branch @ line 200, column 12.",
                        "No steps specified for branch @ line 204, column 19.",
                        "No steps specified for branch @ line 208, column 18.",
                        "Tool type \"maven\" does not have an install of \"apache-maven-3.0.1\" configured - did you mean \"Jenkins_maven\"? @ line 29, column 16."
                    ]
                }
            ]
        },
        {
            "full_repo_name": "qorrect/shmenkins",
            "repo_url": "https://github.com/qorrect/shmenkins",
            "html_url_jenkinsfile": "https://github.com/qorrect/shmenkins/blob/5c2e475e508277021118855ae4f08e6816637362/Shmenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/115368783/git/blobs/5c8dbd0b625ab65ba7302eb169eaf2cbc12ed0c6",
            "jenkins_pipeline": [
                {
                    "error": "Jenkinsfile content '#!/usr/bin/env groovy\n/**\n   From the Shmenkins project -> https://github.com/qorrect/shmenkins\n **/\n\nGroovyShell shell = new GroovyShell()\ndef Jenkinsfile = shell.parse(new File(\"Jenkinsfile\"))\n\n// SECTION TO CUSTOMIZE\n// Set required variables here\nJenkinsfile.MAVEN_SETTINGS = \"~/.m2/settings.xml\"\nJenkinsfile.env = [ BRANCH_NAME : \"test\"]\nJenkinsfile.params = [ DEPLOY_TARGET : \"Do not deploy\" ]\nJenkinsfile.currentBuild = [ number : 1  ]\n// End SECTION TO CUSTOMIZE\n\ndef expando(keys,v)\n{\n  if ( keys.size() == 0 ) { return v } \n  else if (keys.size() == 1 ) {\n    def k = keys.pop()\n    def x = new Expando()\n    x.setProperty(k,v)\n    return x \n  }\n  else {\n    def k = keys.pop()\n    def x = new Expando()\n    x.setProperty(k,expando(keys,v))\n    return x\n  }\n}\n\nargs.each { arg ->\n  def splits = arg.split(\"=\") as List \n  def k = splits[0], v=splits[1]\n  def keys = new ArrayDeque(k.split(\"\\\\.\") as List)\n  def firstKey = keys.pop()\n  Jenkinsfile.setProperty(firstKey,expando(keys,v))  \n}\n\n\n@Grab(group='org.apache.maven', module='maven-model', version='3.0.2')\n\nimport groovy.json.JsonSlurper;\nimport org.apache.maven.model.io.xpp3.MavenXpp3Reader\n\npublic class Shmenkins {\n\n  static def CURRENT_DIRECTORY = \"./\"\n  \n  static def configFile (Map o){}\n  static def configFileProvider (List l,Closure body){\n    body()\n  }  \n  static def fileLoader = new fileLoader()\n  static def scm = \"\"\n  static def containerTemplate(Map options ) {}\n  static def hostPathVolume(Map options ) {} \n  static def disableConcurrentBuilds() {}\n  static def choice (Map o){}\n  static def step (Map o){}\n  static def parameters (List l){}\n  static def booleanParam(Map m){}\n  static def writeFile(Map m){\n    new File(m[\"file\"]).write(m[\"text\"])\n  }\n  static def archiveArtifacts(Map m){}\n  static def string(Map m){}\n  static def git (Map o){}\n  static def checkout(String s) {}\n  static def junit(String s) {}\n  static def readFile(String s) {\n    return new File(s).text\n  }\n  static def readMavenPom(Map m) {\n    return new MavenXpp3Reader().read(new FileInputStream(new File(this.CURRENT_DIRECTORY,m[\"file\"])))\n  }\n  static def cron (String s){}\n  static def pipelineTriggers (List l){}\n  static def properties (List l){}\n  static def node (String n = \"\",Closure body)  {body()}\n  static def agent(String n = \"\",Closure body)  {body()}\n  static def stages(String n = \"\",Closure body)  {body()}\n  static def post(String n = \"\",Closure body)  {body()}\n  static def podTemplate(Map options, Closure body) {body() }\n  static def container(String s, Closure body){println(\"Container ${s}\");body() }\n  static def stage(String s, Closure body){println(\"Stage ${s}\");    body() }\n  static def stage(String s){println(\"Stage ${s}\")}\n  static def withCredentials(List l, Closure body) {println(\"WithCredentials ${l}\");    body() }\n  static def echo (String s) {println(s);}\n  static def sh(Map m) { return sh(m['script'] ) }\n  static def dir(String d,Closure f) {\n    this.CURRENT_DIRECTORY=d\n    f()\n    this.CURRENT_DIRECTORY=\"./\"\n  }\n  static def sh(String s) {\n      print(\"Executing cd ${this.CURRENT_DIRECTORY} && ${s}\\n(Waiting)\\n\")\n      def p = ['/bin/bash','-c',\"cd ${this.CURRENT_DIRECTORY} && ${s}\"].execute()\n      p.waitFor()\n      def ret = p.text\n      println ret\n      return ret\n  }\n}\n\nclass fileLoader {\n  static def fromGit(String libPath, String repository, String branch=\"\", String credentailsId=\"\", String labelExpression=\"\") {\n    GroovyShell shell = new GroovyShell()\n    def script = shell.evaluate(new File(libPath))\n\n    script.sh = { def s ->\n      if ((s instanceof Map)) {\n\ts = s[\"script\"]\n      }\n      print(\"Executing ${s}\\n\")\n      def p = ['/bin/bash','-c',s].execute()\n      p.waitFor()\n      def ret = p.text\n      println ret\n      return ret \n    }\n\n    // def script = shell.parse(new File(libPath))\n    return script\n    \n  }\n}\n\nJenkinsfile.metaClass.mixin Shmenkins\nJenkinsfile.run()\n' did not contain the 'pipeline' step"
                }
            ]
        },
        {
            "full_repo_name": "dcworldwide/cipoc",
            "repo_url": "https://github.com/dcworldwide/cipoc",
            "html_url_jenkinsfile": "https://github.com/dcworldwide/cipoc/blob/90a3a1d483f3ea68e9f9b21e98d37c16100025e3/jenkins/master/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/121334654/git/blobs/bba508ea7c8839cfc642d53d25d2fa995a2ea59b",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Deploy to production",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "printenv"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "def arr = ['xx', 'yy']\n                    for (int i = 0; i < arr.size(); ++i) {\n                        echo \"Value is ${arr[i]}\"\n                    }"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "timeout",
                                            "arguments": [
                                                {
                                                    "key": "time",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": 5
                                                    }
                                                },
                                                {
                                                    "key": "unit",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "MINUTES"
                                                    }
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "name": "echo",
                                                    "arguments": [
                                                        {
                                                            "key": "message",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "Timed out"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "branch",
                                        "arguments": {
                                            "isLiteral": true,
                                            "value": "master"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "post": {
                        "conditions": [
                            {
                                "condition": "always",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "PL run!"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "mail",
                                            "arguments": [
                                                {
                                                    "key": "to",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"${RECIPIENT}\""
                                                    }
                                                },
                                                {
                                                    "key": "subject",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"Job ${JOB_NAME} (${BUILD_NUMBER})\""
                                                    }
                                                },
                                                {
                                                    "key": "body",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"Please ${BUILD_URL}.\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "environment": [
                        {
                            "key": "SOME_VAR",
                            "value": {
                                "isLiteral": true,
                                "value": "true"
                            }
                        },
                        {
                            "key": "RECIPIENT",
                            "value": {
                                "isLiteral": true,
                                "value": "Daniel.Baternik@dnrm.qld.gov.au"
                            }
                        }
                    ],
                    "agent": {
                        "type": "any"
                    },
                    "triggers": {
                        "triggers": [
                            {
                                "name": "cron",
                                "arguments": [
                                    {
                                        "isLiteral": false,
                                        "value": "${MASTER_TRIGGER}"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "delchar/jfile",
            "repo_url": "https://github.com/delchar/jfile",
            "html_url_jenkinsfile": "https://github.com/delchar/jfile/blob/b1f6a195bd2ae431c35ee0bc8f2796013019430f/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/112597744/git/blobs/39ae20001fec4e62e54f2e0a7d5558a9834ff986",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "build",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "\n                    #!/bin/bash\n\n                    export PATH=${PATH}:/sbin\n\n                    # user vars\n                    # WDIR - work directory\n                    ##### WDIR=\"$(pwd)/src\"\n                    LuaJitVersion=${LuaJitVersion}\n\n                    mkdir -p ${WDIR}\n                    cd ${WDIR}\n\n                    NGKIT=\"${WDIR}/ngx_devel_kit\"\n                    export DESTDIR=\"${WDIR}/to_container\"\n                    export LUAJIT_INC=\"${DESTDIR}/usr/include/luajit-${LuaJitVersion}\"\n                    export LUAJIT_LIB=\"${DESTDIR}/usr/lib\"\n\n\n                    git clone http://luajit.org/git/luajit-${LuaJitVersion}.git\n                    git clone https://github.com/simpl/ngx_devel_kit.git\n                    git clone https://github.com/openresty/lua-nginx-module.git\n                    hg clone http://hg.nginx.org/nginx\n\n                    cd luajit-${LuaJitVersion}\n                    sed  -i \"s/\\/usr\\/local/\\/usr/g\" ${WDIR}/luajit-${LuaJitVersion}/Makefile\n                    make && make install\n\n                    cd ${WDIR}/nginx\n                    make -f misc/GNUmakefile release\n                    tar xf nginx-*.tar.gz\n                    cd nginx-*\n\n                    ./configure --with-cc-opt=\"-g -O2 -fPIE -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2\"                                 --with-ld-opt=\"-Wl,-Bsymbolic-functions -fPIE -pie -Wl,-z,relro -Wl,-z,now -Wl,-rpath,/usr/local/lib/lua\"                                 --prefix=/usr/share/nginx                                 --sbin-path=/usr/sbin/nginx                                 --conf-path=/etc/nginx/nginx.conf                                 --http-log-path=/var/log/nginx/access.log                                 --error-log-path=/var/log/nginx/error.log                                 --lock-path=/var/lock/nginx.lock                                 --pid-path=/run/nginx.pid                                 --http-client-body-temp-path=/var/lib/nginx/body                                 --http-fastcgi-temp-path=/var/lib/nginx/fastcgi                                 --http-proxy-temp-path=/var/lib/nginx/proxy                                 --http-scgi-temp-path=/var/lib/nginx/scgi                                 --http-uwsgi-temp-path=/var/lib/nginx/uwsgi                                 --with-debug                                 --with-pcre-jit                                 --with-http_ssl_module                                 --with-http_stub_status_module                                 --with-http_realip_module                                 --with-http_auth_request_module                                 --with-http_addition_module                                 --with-http_dav_module                                 --with-http_geoip_module                                 --with-http_gunzip_module                                 --with-http_gzip_static_module                                 --with-http_image_filter_module                                 --with-http_v2_module                                 --with-http_sub_module                                 --with-http_xslt_module                                 --with-stream                                 --with-stream_ssl_module                                 --with-mail                                 --with-mail_ssl_module                                 --with-threads                                 --add-module=\"${WDIR}/lua-nginx-module\"                                 --add-module=\"${WDIR}/ngx_devel_kit\"                                 --user=nginx                                 --group=nginx\n\n                    make -j$(($(nproc) +1))\n                    make install\n\n                    cd $DESTDIR\n                    tar -cpf ${WORKSPACE}/nginx_lua.tgz .\n                    "
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "dockerize",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "\n                    cd ${WORKSPACE}\n                    docker build --tag ${doc_hub_USR}/${doc_image_name} -f Dockerfile .\n                   "
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "post": {
                                "conditions": [
                                    {
                                        "condition": "success",
                                        "branch": {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "\n                        docker login --username ${doc_hub_USR} --password ${doc_hub_PSW}\n                        docker push ${doc_hub_USR}/${doc_image_name}\n                        "
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "condition": "always",
                                        "branch": {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": " docker logout "
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "deploy to ec2",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "\n                    #get docker-machine if not found in system\n                    if ! [ -x \"$(command -v docker-machine)\" ]; then\n                        dm_ver=$(curl -L https://github.com/docker/machine/releases/latest -s -w '%{url_effective}' -o /dev/null| cut -f8 -d'/')\n                        curl -L https://github.com/docker/machine/releases/download/${dm_ver}/docker-machine-`uname -s`-`uname -m` > ${WORKSPACE}/docker-machine\n                        chmod +x ${WORKSPACE}/docker-machine\n                    fi\n\n                    if  [ \"$(${WORKSPACE}/docker-machine ls --format {{.Name}} 2>&1)\" != \"${ec2_instance_name}\" ]; then\n                        # test on digital ocean\n                        # ${WORKSPACE}/docker-machine create --driver digitalocean --digitalocean-access-token ${aws_key} --digitalocean-size 512mb  ${ec2_instance_name}\n\n                        # gen amazonec2-open-port list\n                        for port in ${ports}; do\n                            aws_ports=\"${aws_ports} --amazonec2-open-port ${port##*:}\"\n                        done\n\n                        ${WORKSPACE}/docker-machine create  --driver amazonec2 --amazonec2-access-key ${aws_key} --amazonec2-secret-key ${aws_secr} --amazonec2-open-port ${aws_ports} --amazonec2-region us-west-1 --amazonec2-instance-type t2.micro ${ec2_instance_name}\n                    else\n                        flag=1\n                    fi\n\n                    ${WORKSPACE}/docker-machine env ${ec2_instance_name}\n                    eval $(${WORKSPACE}/docker-machine env ${ec2_instance_name})\n\n                    # remove old container/images if instance exists\n                    for container in $(docker ps -a  --format \"{{.Names}}\"); do\n                        if [ \"${container}\" = \"${container_name}\" ]; then\n                            docker rm -f ${container_name}\n                        fi\n                    done\n                    # gen docker port map list\n                    for port in ${ports}; do\n                        mports=${mports}\" -p ${port}\"\n                    done\n\n                    docker run --name ${container_name} ${mports} -d ${docker_opts} ${doc_hub_USR}/${doc_image_name}\n                    "
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "post": {
                        "conditions": [
                            {
                                "condition": "always",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "\n                echo Cleaning...\n                rm -rf ${WDIR}\n                rm ${WORKSPACE}/docker-machine\n                "
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "environment": [
                        {
                            "key": "LuaJitVersion",
                            "value": {
                                "isLiteral": true,
                                "value": "2.0"
                            }
                        },
                        {
                            "key": "WDIR",
                            "value": {
                                "isLiteral": false,
                                "value": "\"${WORKSPACE}/build_env_${BUILD_ID}\""
                            }
                        },
                        {
                            "key": "doc_hub",
                            "value": {
                                "name": "credentials",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "26ab0fac-b2a0-43bb-8644-79f06c325f44"
                                    }
                                ]
                            }
                        },
                        {
                            "key": "aws_key",
                            "value": {
                                "name": "credentials",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "262e2f51-7741-48f9-bc7b-9063697ed639"
                                    }
                                ]
                            }
                        },
                        {
                            "key": "aws_secr",
                            "value": {
                                "name": "credentials",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "35477fb8-0f9c-4438-b109-fce84073b7ce"
                                    }
                                ]
                            }
                        },
                        {
                            "key": "ec2_instance_name",
                            "value": {
                                "isLiteral": true,
                                "value": "NginxLua1"
                            }
                        },
                        {
                            "key": "doc_image_name",
                            "value": {
                                "isLiteral": true,
                                "value": "nginx_lua"
                            }
                        },
                        {
                            "key": "container_name",
                            "value": {
                                "isLiteral": true,
                                "value": "nginx_with_lua"
                            }
                        },
                        {
                            "key": "ports",
                            "value": {
                                "isLiteral": true,
                                "value": "80:80"
                            }
                        },
                        {
                            "key": "docker_opts",
                            "value": {
                                "isLiteral": true,
                                "value": ""
                            }
                        }
                    ],
                    "agent": {
                        "type": "node",
                        "arguments": [
                            {
                                "key": "label",
                                "value": {
                                    "isLiteral": true,
                                    "value": "master"
                                }
                            }
                        ]
                    },
                    "triggers": {
                        "triggers": [
                            {
                                "name": "pollSCM",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "* * * * *"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "nblair/continuous-performance-testing",
            "repo_url": "https://github.com/nblair/continuous-performance-testing",
            "html_url_jenkinsfile": "https://github.com/nblair/continuous-performance-testing/blob/3ea1eb8c151b815ae24774162ccda841a7ce85f6/performance-testsuite/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/107594634/git/blobs/02a336c244fe3fdd82799656d39b093ddf1ba425",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Build",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "checkout",
                                            "arguments": [
                                                {
                                                    "key": "scm",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${scm}"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "withMaven",
                                            "arguments": [
                                                {
                                                    "key": "options",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${[ artifactsPublisher(disabled: true) ]}"
                                                    }
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "mvn clean install -DskipTests=true"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "withMaven",
                                            "arguments": [],
                                            "children": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "mvn dependency:copy-dependencies -pl :performance-testsuite"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Environment",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "dir",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "performance-testsuite"
                                            },
                                            "children": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "terraform init"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "terraform apply"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "terraform output -json > target/terraformOutput.json"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": false,
                                                                "value": "\"\"\"\n          ./configure-gatling.sh \\\n            -c ${params.sampleNameSize} \\\n            -d \\\"${params.duration}\\\" \\\n            -m \\\"${params.ramp}\\\" \\\n            -t ${params.threads} \n          \"\"\""
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "post": {
                                "conditions": [
                                    {
                                        "condition": "always",
                                        "branch": {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "archive",
                                                    "arguments": [
                                                        {
                                                            "key": "includes",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "performance-testsuite/terraform.tfstate"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "archive",
                                                    "arguments": [
                                                        {
                                                            "key": "includes",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "performance-testsuite/target/terraformOutput.json"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "archive",
                                                    "arguments": [
                                                        {
                                                            "key": "includes",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "performance-testsuite/src/test/resources/application.conf"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "condition": "failure",
                                        "branch": {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "dir",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": "performance-testsuite"
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "terraform destroy --force"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Simulation",
                            "branches": [
                                {
                                    "name": "gatling",
                                    "steps": [
                                        {
                                            "name": "withMaven",
                                            "arguments": [
                                                {
                                                    "key": "options",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${[ artifactsPublisher(disabled: true) ]}"
                                                    }
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "name": "dir",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": "performance-testsuite"
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "./wait-for.sh"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "mvn package verify -P gatling"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "\"OUTPUT=\\$(ls -t target/gatling/results/ | head -1) && mv target/gatling/results/\\$OUTPUT target/gatling/results/${env.BUILD_TAG}\""
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "publishHTML",
                                                    "arguments": [
                                                        {
                                                            "key": "target",
                                                            "value": {
                                                                "isLiteral": false,
                                                                "value": "[\n                        allowMissing: false,\n                        alwaysLinkToLastBuild: false,\n                        keepAll: true,\n                        reportDir: \"performance-testsuite/target/gatling/results/${env.BUILD_TAG}\",\n                        reportFiles: 'index.html',\n                        reportName: \"Gatling Report\"\n                    ]"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "manipulator",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "ready to manipulate while simulation is running"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "post": {
                                "conditions": [
                                    {
                                        "condition": "always",
                                        "branch": {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "dir",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": "performance-testsuite"
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "./fetch-state.sh"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "archive",
                                                    "arguments": [
                                                        {
                                                            "key": "includes",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "performance-testsuite/target/log/**/*"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "dir",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": "performance-testsuite"
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "terraform destroy --force"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "junit",
                                                    "arguments": [
                                                        {
                                                            "key": "testResults",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "performance-testsuite/target/gatling/**/assertions.xml"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "condition": "success",
                                        "branch": {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "dir",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": "performance-testsuite"
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "./check-state.sh"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "environment": [
                        {
                            "key": "TF_VAR_build_key",
                            "value": {
                                "isLiteral": false,
                                "value": "\"${env.BUILD_TAG}\""
                            }
                        },
                        {
                            "key": "TF_VAR_java_min_heap",
                            "value": {
                                "isLiteral": false,
                                "value": "\"${params.java_min_mem}\""
                            }
                        },
                        {
                            "key": "TF_VAR_java_max_heap",
                            "value": {
                                "isLiteral": false,
                                "value": "\"${params.java_max_mem}\""
                            }
                        },
                        {
                            "key": "TF_VAR_java_max_direct_memory",
                            "value": {
                                "isLiteral": false,
                                "value": "\"${params.java_direct_mem}\""
                            }
                        },
                        {
                            "key": "TF_VAR_data_volume_size",
                            "value": {
                                "isLiteral": false,
                                "value": "\"${params.workdir_volumesize}\""
                            }
                        },
                        {
                            "key": "TF_VAR_data_volume_type",
                            "value": {
                                "isLiteral": false,
                                "value": "\"${params.workdir_volumetype}\""
                            }
                        },
                        {
                            "key": "TF_VAR_data_volume_iops",
                            "value": {
                                "isLiteral": false,
                                "value": "\"${params.workdir_volumeiops}\""
                            }
                        },
                        {
                            "key": "TF_VAR_runner",
                            "value": {
                                "isLiteral": false,
                                "value": "\"${OWNER}\""
                            }
                        }
                    ],
                    "agent": {
                        "type": "any"
                    }
                }
            }
        },
        {
            "full_repo_name": "zhangcl2002/cicdfactory20170813",
            "repo_url": "https://github.com/zhangcl2002/cicdfactory20170813",
            "html_url_jenkinsfile": "https://github.com/zhangcl2002/cicdfactory20170813/blob/917768feb3b734af5e38e220c1bbaade9dde9cf9/aegonthtf-cicd-factory/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/100170244/git/blobs/c99c33e045827a0171d7447ee862b1b40cf8e675",
            "jenkins_pipeline": [
                {
                    "error": "${params.BRANCH} cannot be used as a value directly. Did you mean \"${params.BRANCH}\"? @ line 21, column 18."
                }
            ]
        },
        {
            "full_repo_name": "zhangcl2002/cicdfactory20170813",
            "repo_url": "https://github.com/zhangcl2002/cicdfactory20170813",
            "html_url_jenkinsfile": "https://github.com/zhangcl2002/cicdfactory20170813/blob/917768feb3b734af5e38e220c1bbaade9dde9cf9/aegonthtf-cicd-factory2/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/100170244/git/blobs/b4aa4fe2454e1fa8cb5caf79219e7ed929a9035c",
            "jenkins_pipeline": [
                {
                    "error": "${params.BRANCH} cannot be used as a value directly. Did you mean \"${params.BRANCH}\"? @ line 20, column 18."
                }
            ]
        },
        {
            "full_repo_name": "vadimosipov/project2",
            "repo_url": "https://github.com/vadimosipov/project2",
            "html_url_jenkinsfile": "https://github.com/vadimosipov/project2/blob/3026a5e151aacf349c0269f2da22c0a068dca15c/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/132885427/git/blobs/6dee1af29f067dbd51e25d121b657e4ee4cdc839",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Create storage dir",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "dir",
                                            "arguments": {
                                                "isLiteral": false,
                                                "value": "\"${LOCAL_STORAGE_DIR}\""
                                            },
                                            "children": [
                                                {
                                                    "name": "deleteDir",
                                                    "arguments": []
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"mkdir ${LOCAL_STORAGE_DIR}\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Download",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "def year = LocalDate.now().getYear() - 1\n                    def weeks = [15]\n                    for (week in weeks) {\n                        def startDownloading = { url, body, file -> \n                            sh \"curl -X POST ${url} -d \\'${body}\\' -o ${file}\"\n                            checkFileSize(file)\n                        }\n                        generateRequsts(year, week, startDownloading)\n                    }"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "environment": [
                                {
                                    "key": "VIGO_CREDENTIALS",
                                    "value": {
                                        "name": "credentials",
                                        "arguments": [
                                            {
                                                "isLiteral": true,
                                                "value": "vigo_credentials"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "key": "VIGO_USER",
                                    "value": {
                                        "isLiteral": false,
                                        "value": "\"${env.VIGO_CREDENTIALS_USR}\""
                                    }
                                },
                                {
                                    "key": "VIGO_PASS",
                                    "value": {
                                        "isLiteral": false,
                                        "value": "\"${env.VIGO_CREDENTIALS_PSW}\""
                                    }
                                }
                            ]
                        },
                        {
                            "name": "Save to hdfs",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "1"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "post": {
                        "conditions": [
                            {
                                "condition": "always",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "sendNotification",
                                            "arguments": {
                                                "isLiteral": false,
                                                "value": "\"Your build completed, pipeline: ${currentBuild.fullDisplayName}, please check: ${env.BUILD_URL}\""
                                            }
                                        },
                                        {
                                            "name": "dir",
                                            "arguments": {
                                                "isLiteral": false,
                                                "value": "\"${LOCAL_STORAGE_DIR}\""
                                            },
                                            "children": [
                                                {
                                                    "name": "deleteDir",
                                                    "arguments": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "environment": [
                        {
                            "key": "LOCAL_STORAGE_DIR",
                            "value": {
                                "isLiteral": true,
                                "value": "cells"
                            }
                        }
                    ],
                    "agent": {
                        "type": "any"
                    },
                    "triggers": {
                        "triggers": [
                            {
                                "name": "cron",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "0 15 1 * *"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "zhangcl2002/cicd3.1",
            "repo_url": "https://github.com/zhangcl2002/cicd3.1",
            "html_url_jenkinsfile": "https://github.com/zhangcl2002/cicd3.1/blob/773dea3849f6cea02d6b359a0c675ace146cfc89/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/113588210/git/blobs/d230a021bfe319944d27b0aefabab59edfc61518",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "clean work space",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "cleanWs",
                                            "arguments": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Check Out Code",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "checkout",
                                            "arguments": [
                                                {
                                                    "key": "scm",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "[$class: 'GitSCM', branches: [[name: \"*/${env.branch}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-user', url: env.scm_url]]]"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Sonarqube Scan",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "withSonarQubeEnv",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "sonarqube"
                                            },
                                            "children": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.2:sonar"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Compile&Package",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mvn package"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Unit Test",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "unit test"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Generate Docker Image",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "dir",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "docker"
                                            },
                                            "children": [
                                                {
                                                    "name": "checkout",
                                                    "arguments": [
                                                        {
                                                            "key": "scm",
                                                            "value": {
                                                                "isLiteral": false,
                                                                "value": "[$class: 'GitSCM', branches: [[name: \"*/${env.dockerfile_branch}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-user', url: env.dockerfile_loc_url]]]"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${'sed -i \\'s@$application@\\'\\\"'+env.application_name+'\\\"\\'@g\\' docker/'+env.deploy_type+'-dockerfile'}"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${'sed -i \\'s@$image_template@\\'\\\"'+env.image_template+'\\\"\\'@g\\' docker/'+env.deploy_type+'-dockerfile'}"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${'sed -i \\'s@$log4j_stdout@\\'\\\"'+env.log4j_stdout+'\\\"\\'@g\\' docker/'+env.deploy_type+'-dockerfile'}"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${'sed -i \\'s@$elk_server@\\'\\\"'+env.elk_server+'\\\"\\'@g\\' docker/'+env.deploy_type+'-dockerfile'}"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${'sed -i \\'s@$imagelibrary@\\'\\\"'+env.image_library+'\\\"\\'@g\\' docker/'+env.deploy_type+'-dockerfile'}"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${'sed -i \\'s@$baseimage@\\'\\\"'+env.baseimage+'\\\"\\'@g\\' docker/'+env.deploy_type+'-dockerfile'}"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${'sed -i \\'s@$java_opts@\\'\\\"'+env.java_opts+'\\\"\\'@g\\' docker/'+env.deploy_type+'-dockerfile'}"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "docker.withRegistry(env.docker_registry,'registry-user'){\n                          docker.withServer(env.docker_server) {\n                             sh 'docker login -u admin -p Harbor123456'\n                             docker.build(env.image_library+'/'+env.application_name,'-f docker/'+env.deploy_type+'-dockerfile .').push(env.docker_tag)\n                          }                                \n                      }"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "K8s Deploy",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "def targetClusters\n                      def branches = [:]\n                      \n                      if (env.targetK8sCluster == 'allPrivateCloudCluster'){\n                         targetClusters= [\"k8s-dev-primary\",\"k8s-dev-backup\"]\n                      }\n                      else if (env.targetK8sCluster == 'onlyPrimaryCluster'){\n                         targetClusters= [\"k8s-dev-primary\"]\n                      }\n                      else if (env.targetK8sCluster == 'onlyBackupCluster'){\n                         targetClusters= [\"k8s-dev-backup\"]\n                      }  \n                     else if (env.targetK8sCluster == 'aliCluster'){\n                        targetClusters= [\"ali-k8s-dev\"]\n                     }\n                     else if (env.targetK8sCluster == 'fijiZone'){\n                        targetClusters= [\"fiji-k8s-master\"]\n                     }\n                     else if (env.targetK8sCluster == 'balticZone'){\n                        targetClusters= [\"baltic-k8s-master\"]\n                     }                     \n                      \n                      dir('docker'){\n                         sh 'git clone '+env.ingress_scm_url\n                      }\n                      \n                      for (int i = 0; i <  targetClusters.size(); i++) {\n                          def index = i // fresh variable per iteration; i will be mutated\n                          branches[targetClusters.get(index)] = {\n                            dir('docker'){\n                               sh 'chmod +x k8s-deploy.sh'                      \n                               sh './k8s-deploy.sh ${image_library} ${application_name} ${replicas} ${configmap} ${storage} ${expose_service} ${domain_name} ${context_path} ${docker_tag} ${probe_path} '+targetClusters.get(index)+' ${ingress_scm_url} '\n                            }     \n                          }\n                      }                  \n                      branches.failFast = true\n                      parallel  branches  \n                      \n                      \n                      dir('docker/k8s-dev-ingress'){\n                         sh 'pwd && git add . && if git status | grep nothing > /dev/null; then echo \\'no change\\'; else git commit -m \\'update ingress yaml\\' && git push origin master; fi '\n                      }"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Notify & Over",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "notify"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "post": {
                        "conditions": [
                            {
                                "condition": "success",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "emailext",
                                            "arguments": [
                                                {
                                                    "key": "subject",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"Jenkins Job Success: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'\""
                                                    }
                                                },
                                                {
                                                    "key": "body",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"\"\"<p>Success: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>  <p>You Can check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>\"\"\""
                                                    }
                                                },
                                                {
                                                    "key": "recipientProviders",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${[[$class: 'DevelopersRecipientProvider'],[$class: 'RequesterRecipientProvider'], [$class: 'UpstreamComitterRecipientProvider'], [$class: 'FailingTestSuspectsRecipientProvider'], [$class: 'FirstFailingBuildSuspectsRecipientProvider']]}"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            {
                                "condition": "failure",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "emailext",
                                            "arguments": [
                                                {
                                                    "key": "subject",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'\""
                                                    }
                                                },
                                                {
                                                    "key": "body",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"\"\"<p>FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>  <p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>\"\"\""
                                                    }
                                                },
                                                {
                                                    "key": "recipientProviders",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${[[$class: 'DevelopersRecipientProvider'],[$class: 'RequesterRecipientProvider'], [$class: 'UpstreamComitterRecipientProvider'], [$class: 'FailingTestSuspectsRecipientProvider'], [$class: 'FirstFailingBuildSuspectsRecipientProvider']]}"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            {
                                "condition": "unstable",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "This will run only if the run was marked as unstable"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "environment": [
                        {
                            "key": "application_name",
                            "value": {
                                "isLiteral": true,
                                "value": "appName"
                            }
                        },
                        {
                            "key": "scm_url",
                            "value": {
                                "isLiteral": false,
                                "value": "\"http://gitlab.aegonthtf.com/research/${env.application_name}.git\""
                            }
                        },
                        {
                            "key": "branch",
                            "value": {
                                "isLiteral": false,
                                "value": "\"${params.BRANCH}\""
                            }
                        },
                        {
                            "key": "replicas",
                            "value": {
                                "isLiteral": true,
                                "value": 2
                            }
                        },
                        {
                            "key": "deploy_type",
                            "value": {
                                "isLiteral": true,
                                "value": "traditional"
                            }
                        },
                        {
                            "key": "java_opts",
                            "value": {
                                "isLiteral": true,
                                "value": "-server -Dfile.encoding=UTF-8 -Duser.timezone=Asia/Shanghai"
                            }
                        },
                        {
                            "key": "baseimage",
                            "value": {
                                "isLiteral": true,
                                "value": "tomcat:7.0-oracle-jre7"
                            }
                        },
                        {
                            "key": "expose_service",
                            "value": {
                                "isLiteral": true,
                                "value": "false"
                            }
                        },
                        {
                            "key": "domain_name",
                            "value": {
                                "isLiteral": true,
                                "value": "domainName.aegonthtf.com"
                            }
                        },
                        {
                            "key": "context_path",
                            "value": {
                                "isLiteral": true,
                                "value": "/"
                            }
                        },
                        {
                            "key": "probe_path",
                            "value": {
                                "isLiteral": false,
                                "value": "${env.context_path}health"
                            }
                        },
                        {
                            "key": "configmap",
                            "value": {
                                "isLiteral": true,
                                "value": "default-tomcat-config"
                            }
                        },
                        {
                            "key": "storage",
                            "value": {
                                "isLiteral": true,
                                "value": "false"
                            }
                        },
                        {
                            "key": "image_template",
                            "value": {
                                "isLiteral": true,
                                "value": "template-dev"
                            }
                        },
                        {
                            "key": "image_library",
                            "value": {
                                "isLiteral": true,
                                "value": "aegonthtf-dev"
                            }
                        },
                        {
                            "key": "elk_server",
                            "value": {
                                "isLiteral": true,
                                "value": "logcenter-dev.aegonthtf.com"
                            }
                        },
                        {
                            "key": "log4j_stdout",
                            "value": {
                                "isLiteral": true,
                                "value": "ELK"
                            }
                        },
                        {
                            "key": "targetK8sCluster",
                            "value": {
                                "isLiteral": true,
                                "value": "designated zone"
                            }
                        },
                        {
                            "key": "docker_registry",
                            "value": {
                                "isLiteral": true,
                                "value": "https://registry.aegonthtf.com/"
                            }
                        },
                        {
                            "key": "docker_server",
                            "value": {
                                "isLiteral": true,
                                "value": "tcp://10.72.241.179:2376"
                            }
                        },
                        {
                            "key": "dockerfile_loc_url",
                            "value": {
                                "isLiteral": true,
                                "value": "http://itoadmin@gitlab.aegonthtf.com/dev/aegonthtf-tomcat-cicd-factory.git"
                            }
                        },
                        {
                            "key": "dockerfile_branch",
                            "value": {
                                "isLiteral": false,
                                "value": "\"${env.application_name}\""
                            }
                        },
                        {
                            "key": "ingress_scm_url",
                            "value": {
                                "isLiteral": true,
                                "value": "http://itoadmin@gitlab.aegonthtf.com/dev/k8s-dev-ingress.git"
                            }
                        },
                        {
                            "key": "docker_tag",
                            "value": {
                                "isLiteral": false,
                                "value": "\"${BUILD_NUMBER}\""
                            }
                        }
                    ],
                    "agent": {
                        "type": "any"
                    },
                    "parameters": {
                        "parameters": [
                            {
                                "name": "string",
                                "arguments": [
                                    {
                                        "key": "name",
                                        "value": {
                                            "isLiteral": true,
                                            "value": "BRANCH"
                                        }
                                    },
                                    {
                                        "key": "defaultValue",
                                        "value": {
                                            "isLiteral": true,
                                            "value": "master"
                                        }
                                    },
                                    {
                                        "key": "description",
                                        "value": {
                                            "isLiteral": true,
                                            "value": "\u00e8\u00af\u00b7\u00e8\u00be\u0093\u00e5\u0085\u00a5\u00e5\u00be\u0085\u00e9\u0083\u00a8\u00e7\u00bd\u00b2\u00e7\u009a\u0084\u00e5\u0088\u0086\u00e6\u0094\u00af\u00e6\u0088\u0096\u00e6\u00a0\u0087\u00e7\u00ad\u00be"
                                        }
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "bateau84/openttd",
            "repo_url": "https://github.com/bateau84/openttd",
            "html_url_jenkinsfile": "https://github.com/bateau84/openttd/blob/4a86f13ddbbc8bc87c98952a5caa456b8a4c3e51/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/24632870/git/blobs/e347df6ea6b55cba0e0ac89fe5f8c982e9cedcb5",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Prepare",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "Preparing the build environment"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "checkout",
                                            "arguments": [
                                                {
                                                    "key": "scm",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${scm}"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Branch Build",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "def baseimage = docker.build(\"${env.DOCKER_REGISTRY}${env.DOCKER_REPOSITORY}/${env.DOCKER_IMAGE_NAME}:${env.GIT_BRANCH}-${env.GIT_COMMIT_ID}\", \"${env.DOCKER_ARGS}.\")\n                    baseimage.push()\n                    env.imageName = baseimage.imageName()"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "not",
                                        "children": [
                                            {
                                                "name": "branch",
                                                "arguments": {
                                                    "isLiteral": true,
                                                    "value": "master"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Master Build",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "def LINES = new File(env.WORKSPACE, env.RELEASE_FILE).readLines()\n\n                    for(int i = 0; i < LINES.size(); i++) {    \n                        echo \"[ \"+LINES[i]+\" ]\"\n                        \n                        def baseimage = docker.build(\"${env.DOCKER_REGISTRY}${env.DOCKER_REPOSITORY}/${env.DOCKER_IMAGE_NAME}:${LINES[i]}\", \"--build-arg OPENTTD_VERSION=${LINES[i]} ${env.DOCKER_ARGS}.\")\n                        baseimage.push()\n\n                        if (i == 0){\n                            baseimage.push(\"latest\")\n                        }\n                    }"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "branch",
                                        "arguments": {
                                            "isLiteral": true,
                                            "value": "master"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "post": {
                        "conditions": [
                            {
                                "condition": "always",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "deleteDir",
                                            "arguments": []
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "environment": [
                        {
                            "key": "DOCKER_REGISTRY",
                            "value": {
                                "isLiteral": true,
                                "value": "index.docker.io/"
                            }
                        },
                        {
                            "key": "DOCKER_REPOSITORY",
                            "value": {
                                "isLiteral": true,
                                "value": "bateau"
                            }
                        },
                        {
                            "key": "DOCKER_IMAGE_NAME",
                            "value": {
                                "isLiteral": true,
                                "value": "openttd"
                            }
                        },
                        {
                            "key": "DOCKER_ARGS",
                            "value": {
                                "isLiteral": true,
                                "value": "--no-cache --squash "
                            }
                        },
                        {
                            "key": "RELEASE_FILE",
                            "value": {
                                "isLiteral": true,
                                "value": "releases"
                            }
                        },
                        {
                            "key": "GIT_COMMIT_ID",
                            "value": {
                                "isLiteral": false,
                                "value": "${sh(returnStdout: true, script: \"git rev-parse --short HEAD\").trim()}"
                            }
                        },
                        {
                            "key": "GIT_BRANCH",
                            "value": {
                                "isLiteral": false,
                                "value": "${sh(returnStdout: true, script: \"git rev-parse --abbrev-ref HEAD\").replace(\" \", \"-\").replace(\"/\", \"-\").replace(\".\", \"-\")}"
                            }
                        }
                    ],
                    "agent": {
                        "type": "any"
                    },
                    "triggers": {
                        "triggers": [
                            {
                                "name": "cron",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "H H 1,15,30 1-11 *"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "bateau84/alpine_baseimage",
            "repo_url": "https://github.com/bateau84/alpine_baseimage",
            "html_url_jenkinsfile": "https://github.com/bateau84/alpine_baseimage/blob/dbf465aa26a14a22277e7596221aec55d24af40f/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/54541008/git/blobs/adf49fb5938cb30cb5421022c224ecb12508ffac",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Prepare",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "Preparing the build environment"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "checkout",
                                            "arguments": [
                                                {
                                                    "key": "scm",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${scm}"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Branch Build",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "def baseimage = docker.build(\"${env.DOCKER_REGISTRY}${env.DOCKER_REPOSITORY}/${env.DOCKER_IMAGE_NAME}:${env.GIT_BRANCH}-${env.GIT_COMMIT_ID}\", \"${env.DOCKER_ARGS}.\")\n                    baseimage.push()\n                    env.imageName = baseimage.imageName()"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "not",
                                        "children": [
                                            {
                                                "name": "branch",
                                                "arguments": {
                                                    "isLiteral": true,
                                                    "value": "master"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Master Build",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "def LINES = new File(env.WORKSPACE, env.RELEASE_FILE).readLines()\n\n                    for(int i = 0; i < LINES.size(); i++) {    \n                        echo \"[ \"+LINES[i]+\" ]\"\n                        \n                        sh(\"\"\"\n                        sed -ir \"s/^FROM alpine:.*/FROM alpine:${LINES[i]}/g\" Dockerfile\n                        \"\"\")\n\n                        def baseimage = docker.build(\"${env.DOCKER_REGISTRY}${env.DOCKER_REPOSITORY}/${env.DOCKER_IMAGE_NAME}:${LINES[i]}\", \"${env.DOCKER_ARGS}.\")\n                        baseimage.push()\n\n                        if (i == 0){\n                            baseimage.push(\"latest\")\n                        }\n                    }"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "branch",
                                        "arguments": {
                                            "isLiteral": true,
                                            "value": "master"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "post": {
                        "conditions": [
                            {
                                "condition": "always",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "deleteDir",
                                            "arguments": []
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "environment": [
                        {
                            "key": "DOCKER_REGISTRY",
                            "value": {
                                "isLiteral": true,
                                "value": "index.docker.io/"
                            }
                        },
                        {
                            "key": "DOCKER_REPOSITORY",
                            "value": {
                                "isLiteral": true,
                                "value": "bateau"
                            }
                        },
                        {
                            "key": "DOCKER_IMAGE_NAME",
                            "value": {
                                "isLiteral": true,
                                "value": "alpine_baseimage"
                            }
                        },
                        {
                            "key": "DOCKER_ARGS",
                            "value": {
                                "isLiteral": true,
                                "value": "--no-cache --squash "
                            }
                        },
                        {
                            "key": "RELEASE_FILE",
                            "value": {
                                "isLiteral": true,
                                "value": "releases"
                            }
                        },
                        {
                            "key": "GIT_COMMIT_ID",
                            "value": {
                                "isLiteral": false,
                                "value": "${sh(returnStdout: true, script: \"git rev-parse --short HEAD\").trim()}"
                            }
                        },
                        {
                            "key": "GIT_BRANCH",
                            "value": {
                                "isLiteral": false,
                                "value": "${sh(returnStdout: true, script: \"git rev-parse --abbrev-ref HEAD\").replace(\" \", \"-\").replace(\"/\", \"-\").replace(\".\", \"-\")}"
                            }
                        }
                    ],
                    "agent": {
                        "type": "any"
                    },
                    "triggers": {
                        "triggers": [
                            {
                                "name": "cron",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "H H 1,15,30 1-11 *"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "bateau84/alpine_openjdk",
            "repo_url": "https://github.com/bateau84/alpine_openjdk",
            "html_url_jenkinsfile": "https://github.com/bateau84/alpine_openjdk/blob/4e56f520bbec351ccdfd11b30f4b0b59f7f17c87/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/55673908/git/blobs/7786c63b7882cae9f16f3d2728ce0ec90523fbb6",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Prepare",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "Preparing the build environment"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "checkout",
                                            "arguments": [
                                                {
                                                    "key": "scm",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${scm}"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Branch Build",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "def baseimage = docker.build(\"${env.DOCKER_REGISTRY}${env.DOCKER_REPOSITORY}/${env.DOCKER_IMAGE_NAME}:${env.GIT_BRANCH}-${env.GIT_COMMIT_ID}\", \"${env.DOCKER_ARGS}.\")\n                    baseimage.push()\n                    env.imageName = baseimage.imageName()"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "not",
                                        "children": [
                                            {
                                                "name": "branch",
                                                "arguments": {
                                                    "isLiteral": true,
                                                    "value": "master"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Master Build",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "def LINES = new File(env.WORKSPACE, env.RELEASE_FILE).readLines()\n                    for(int i = 0; i < LINES.size(); i++) {    \n                        echo \"[ \"+LINES[i]+\" ]\"\n\n                        def baseimage = docker.build(\"${env.DOCKER_REGISTRY}${env.DOCKER_REPOSITORY}/${env.DOCKER_IMAGE_NAME}:${LINES[i]}\", \"--build-arg OPENJDK_VERSION=${LINES[i]} ${env.DOCKER_ARGS}.\")\n                        baseimage.push()\n\n                        if (i == 0){\n                            baseimage.push(\"latest\")\n                        }\n                    }"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "branch",
                                        "arguments": {
                                            "isLiteral": true,
                                            "value": "master"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "post": {
                        "conditions": [
                            {
                                "condition": "always",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "deleteDir",
                                            "arguments": []
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "environment": [
                        {
                            "key": "DOCKER_REGISTRY",
                            "value": {
                                "isLiteral": true,
                                "value": "index.docker.io/"
                            }
                        },
                        {
                            "key": "DOCKER_REPOSITORY",
                            "value": {
                                "isLiteral": true,
                                "value": "bateau"
                            }
                        },
                        {
                            "key": "DOCKER_IMAGE_NAME",
                            "value": {
                                "isLiteral": true,
                                "value": "alpine_openjdk"
                            }
                        },
                        {
                            "key": "DOCKER_ARGS",
                            "value": {
                                "isLiteral": true,
                                "value": "--no-cache --squash "
                            }
                        },
                        {
                            "key": "RELEASE_FILE",
                            "value": {
                                "isLiteral": true,
                                "value": "releases"
                            }
                        },
                        {
                            "key": "GIT_COMMIT_ID",
                            "value": {
                                "isLiteral": false,
                                "value": "${sh(returnStdout: true, script: \"git rev-parse --short HEAD\").trim()}"
                            }
                        },
                        {
                            "key": "GIT_BRANCH",
                            "value": {
                                "isLiteral": false,
                                "value": "${sh(returnStdout: true, script: \"git rev-parse --abbrev-ref HEAD\").replace(\" \", \"-\").replace(\"/\", \"-\").replace(\".\", \"-\")}"
                            }
                        }
                    ],
                    "agent": {
                        "type": "any"
                    },
                    "triggers": {
                        "triggers": [
                            {
                                "name": "cron",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "H H 1,15,30 1-11 *"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "scaleway/image-tools",
            "repo_url": "https://github.com/scaleway/image-tools",
            "html_url_jenkinsfile": "https://github.com/scaleway/image-tools/blob/5898b654742e719b08b0ce0a09edfcd45918d8a0/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/25816353/git/blobs/14df344c0af39361a46a8f58291d08c7e42b529d",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Pull image source",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "dir",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "image"
                                            },
                                            "children": [
                                                {
                                                    "name": "deleteDir",
                                                    "arguments": []
                                                },
                                                {
                                                    "name": "checkout",
                                                    "arguments": [
                                                        {
                                                            "key": "scm",
                                                            "value": {
                                                                "isLiteral": false,
                                                                "value": "[\n            $class: 'GitSCM',\n            poll: false,\n            branches: [[name: env.IMAGE_GIT_BRANCH ?: 'master' ]],\n            userRemoteConfigs: [[url: env.IMAGE_GIT_SOURCE]]\n          ]"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Set environment",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "manifest = readFile(\"${env.IMAGE_DIR_BASE}/manifest.json\")\n          manifest_data = new groovy.json.JsonSlurperClassic().parseText(manifest)\n          image_version = manifest_data['images'][env.IMAGE_VERSION]\n          env.IMAGE_DIR = env.IMAGE_DIR_BASE + '/' + image_version['directory']\n          env.MARKETPLACE_IMAGE_NAME = image_version['marketplace-name']\n          env.IMAGE_DISK_SIZE = \"50G\"\n          if (image_version.containsKey('options')) {\n            if (image_version['options'].containsKey('disk-size')) {\n              env.IMAGE_DISK_SIZE = image_version['options']['disk-size']\n            }\n          }\n          env.BUILD_OPTS = \"--pull\"\n          env.LOG_LEVEL = params.logLevel"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Log into Scaleway",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "withCredentials",
                                            "arguments": {
                                                "isLiteral": false,
                                                "value": "${[usernamePassword(credentialsId: 'scw-test-orga-token', usernameVariable: 'SCW_ORGANIZATION', passwordVariable: 'SCW_TOKEN')]}"
                                            },
                                            "children": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "scw login -o \"$SCW_ORGANIZATION\" -t \"$SCW_TOKEN\" -s >/dev/null 2>&1"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Create image on Scaleway",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "for (String arch in image_version['architectures']) {\n            echo \"Creating image for $arch\"\n            sh \"make ARCH=$arch IMAGE_DIR=${env.IMAGE_DIR} EXPORT_DIR=${env.EXPORT_DIR_BASE}/$arch BUILD_OPTS='${env.BUILD_OPTS}' scaleway_image\"\n            script {\n              imageId = readFile(\"${env.EXPORT_DIR_BASE}/$arch/image_id\").trim()\n              docker_tags = readFile(\"${env.EXPORT_DIR_BASE}/$arch/docker_tags\").trim().split('\\n')\n              images.add([\n                arch: arch,\n                id: imageId,\n                docker_tags: docker_tags\n              ])\n            }\n          }"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Test the images",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "for (Map image : images) {\n            sh \"make tests IMAGE_DIR=${env.IMAGE_DIR} EXPORT_DIR=${env.EXPORT_DIR_BASE}/${image['arch']} ARCH=${image['arch']} IMAGE_ID=${image['id']} TESTS_DIR=${env.IMAGE_DIR}/tests NO_CLEANUP=${params.needAdminApproval}\"\n          }\n          if (env.needsAdminApproval) {\n            input \"Confirm that the images are stable ?\"\n          }"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "expression",
                                        "arguments": [
                                            {
                                                "key": "scriptBlock",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "params.test == true"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            },
                            "post": {
                                "conditions": [
                                    {
                                        "condition": "always",
                                        "branch": {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "script",
                                                    "arguments": [
                                                        {
                                                            "key": "scriptBlock",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "if (env.needsAdminApproval) {\n              for (Map image : images) {\n                sh \"scripts/test_images.sh stop ${env.EXPORT_DIR_BASE}/${image['arch']}/${image['id']}.servers\"\n              }\n            }"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Release the image",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_PASSWD')]) {\n            sh 'echo -n \"$DOCKERHUB_PASSWD\" | docker login -u \"$DOCKERHUB_USER\" --password-stdin'\n          }\n          for (image in images) {\n            for (tag in image['docker_tags']) {\n              sh \"docker push ${tag}\"\n            }\n            removable_tags.add(image['docker_tags'][-1])\n            image.remove('docker_tags')\n          }\n          message = groovy.json.JsonOutput.toJson([\n            type: \"image\",\n            data: [\n              marketplace_id: image_version['marketplace-id'],\n              versions: images\n            ]\n          ])\n          versionId = input(\n            message: \"${message}\",\n            parameters: [string(name: 'image_id', description: 'ID of the new image version')]\n          )"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"Created new marketplace version of image: ${versionId}\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "expression",
                                        "arguments": [
                                            {
                                                "key": "scriptBlock",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "params.release == true"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    ],
                    "post": {
                        "conditions": [
                            {
                                "condition": "always",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "deleteDir",
                                            "arguments": []
                                        },
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "sh \"docker image rm ${removable_tags.join(' ')} && docker system prune -f\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "environment": [
                        {
                            "key": "SSH_KEY_FILE",
                            "value": {
                                "isLiteral": false,
                                "value": "\"${env.HOME}/.ssh/id_worker\""
                            }
                        },
                        {
                            "key": "IMAGE_DIR_BASE",
                            "value": {
                                "isLiteral": false,
                                "value": "\"${env.WORKSPACE}/image\""
                            }
                        },
                        {
                            "key": "EXPORT_DIR_BASE",
                            "value": {
                                "isLiteral": false,
                                "value": "\"${env.WORKSPACE}/export\""
                            }
                        }
                    ],
                    "agent": {
                        "type": "label",
                        "argument": {
                            "isLiteral": true,
                            "value": "worker&&docker"
                        }
                    },
                    "options": {
                        "options": [
                            {
                                "name": "buildDiscarder",
                                "arguments": [
                                    {
                                        "name": "logRotator",
                                        "arguments": [
                                            {
                                                "key": "numToKeepStr",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "1"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    "parameters": {
                        "parameters": [
                            {
                                "name": "booleanParam",
                                "arguments": [
                                    {
                                        "key": "name",
                                        "value": {
                                            "isLiteral": true,
                                            "value": "test"
                                        }
                                    },
                                    {
                                        "key": "defaultValue",
                                        "value": {
                                            "isLiteral": true,
                                            "value": true
                                        }
                                    },
                                    {
                                        "key": "description",
                                        "value": {
                                            "isLiteral": true,
                                            "value": "Test the image"
                                        }
                                    }
                                ]
                            },
                            {
                                "name": "booleanParam",
                                "arguments": [
                                    {
                                        "key": "name",
                                        "value": {
                                            "isLiteral": true,
                                            "value": "needAdminApproval"
                                        }
                                    },
                                    {
                                        "key": "defaultValue",
                                        "value": {
                                            "isLiteral": true,
                                            "value": false
                                        }
                                    },
                                    {
                                        "key": "description",
                                        "value": {
                                            "isLiteral": true,
                                            "value": "Wait for admin approval after testing"
                                        }
                                    }
                                ]
                            },
                            {
                                "name": "booleanParam",
                                "arguments": [
                                    {
                                        "key": "name",
                                        "value": {
                                            "isLiteral": true,
                                            "value": "release"
                                        }
                                    },
                                    {
                                        "key": "defaultValue",
                                        "value": {
                                            "isLiteral": true,
                                            "value": true
                                        }
                                    },
                                    {
                                        "key": "description",
                                        "value": {
                                            "isLiteral": true,
                                            "value": "Release the image"
                                        }
                                    }
                                ]
                            },
                            {
                                "name": "string",
                                "arguments": [
                                    {
                                        "key": "name",
                                        "value": {
                                            "isLiteral": true,
                                            "value": "logLevel"
                                        }
                                    },
                                    {
                                        "key": "defaultValue",
                                        "value": {
                                            "isLiteral": true,
                                            "value": "3"
                                        }
                                    },
                                    {
                                        "key": "description",
                                        "value": {
                                            "isLiteral": true,
                                            "value": "Log level"
                                        }
                                    }
                                ]
                            }
                        ]
                    },
                    "triggers": {
                        "triggers": [
                            {
                                "name": "pollSCM",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "H */2 * * *"
                                    }
                                ]
                            },
                            {
                                "name": "cron",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "H H H * *"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "apache/hbase",
            "repo_url": "https://github.com/apache/hbase",
            "html_url_jenkinsfile": "https://github.com/apache/hbase/blob/f4a39043e2fb3da69e378b4e1cbcb4bd7e2a6662/dev-support/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/20089857/git/blobs/821d20e6a89e101659cee1526ef83de6b89fb996",
            "jenkins_pipeline": [
                {
                    "error": [
                        "Tool type \"maven\" does not have an install of \"Maven (latest)\" configured - did you mean \"Jenkins_maven\"? @ line 446, column 19.",
                        "Tool type \"jdk\" does not have an install of \"JDK 1.8 (latest)\" configured - did you mean \"null\"? @ line 448, column 17."
                    ]
                }
            ]
        },
        {
            "full_repo_name": "codice/alliance",
            "repo_url": "https://github.com/codice/alliance",
            "html_url_jenkinsfile": "https://github.com/codice/alliance/blob/6a7f76957d22844e6c2bdd65f85a8be35fd637fd/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/52804523/git/blobs/aef063284e7009d226e80a3625d4a0f21e3906bc",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Setup",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "slackSend",
                                            "arguments": [
                                                {
                                                    "key": "color",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "good"
                                                    }
                                                },
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"STARTED: ${JOB_NAME} ${BUILD_NUMBER} ${BUILD_URL}\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Validate Poms",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "retry",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": 3
                                            },
                                            "children": [
                                                {
                                                    "name": "checkout",
                                                    "arguments": [
                                                        {
                                                            "key": "scm",
                                                            "value": {
                                                                "isLiteral": false,
                                                                "value": "${scm}"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "withMaven",
                                            "arguments": [
                                                {
                                                    "key": "maven",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "M3"
                                                    }
                                                },
                                                {
                                                    "key": "jdk",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "jdk8-latest"
                                                    }
                                                },
                                                {
                                                    "key": "globalMavenSettingsConfig",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "default-global-settings"
                                                    }
                                                },
                                                {
                                                    "key": "mavenSettingsConfig",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "codice-maven-settings"
                                                    }
                                                },
                                                {
                                                    "key": "mavenOpts",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "${LINUX_MVN_RANDOM}"
                                                    }
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "mvn clean install -DskipStatic=true -DskipTests=true -B -pl $POMFIX $DISABLE_DOWNLOAD_PROGRESS_OPTS"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Incremental Build",
                            "parallel": [
                                {
                                    "name": "Linux",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "timeout",
                                                    "arguments": [
                                                        {
                                                            "key": "time",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": 1
                                                            }
                                                        },
                                                        {
                                                            "key": "unit",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "HOURS"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "withMaven",
                                                            "arguments": [
                                                                {
                                                                    "key": "maven",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "Maven 3.3.9"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "globalMavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "default-global-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "codice-maven-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenOpts",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "options",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${[artifactsPublisher(disabled: true), dependenciesFingerprintPublisher(disabled: true, includeScopeCompile: false, includeScopeProvided: false, includeScopeRuntime: false, includeSnapshotVersions: false)]}"
                                                                    }
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn install -B -pl !$DOCS -DskipStatic=true -DskipTests=true $DISABLE_DOWNLOAD_PROGRESS_OPTS -T 1C"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn clean install -B -T 1C -pl !$ITESTS -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/$CHANGE_TARGET $DISABLE_DOWNLOAD_PROGRESS_OPTS"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn install -B -pl $ITESTS -nsu $DISABLE_DOWNLOAD_PROGRESS_OPTS"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "Windows",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "retry",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": 3
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "checkout",
                                                            "arguments": [
                                                                {
                                                                    "key": "scm",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${scm}"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "timeout",
                                                    "arguments": [
                                                        {
                                                            "key": "time",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": 1
                                                            }
                                                        },
                                                        {
                                                            "key": "unit",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "HOURS"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "withMaven",
                                                            "arguments": [
                                                                {
                                                                    "key": "maven",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "M35"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "jdk",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "jdk8-latest"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "globalMavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "default-global-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "codice-maven-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenOpts",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "${LARGE_MVN_OPTS}"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "options",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${[artifactsPublisher(disabled: true), dependenciesFingerprintPublisher(disabled: true, includeScopeCompile: false, includeScopeProvided: false, includeScopeRuntime: false, includeSnapshotVersions: false)]}"
                                                                    }
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "name": "bat",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn install -B -pl !%DOCS% -DskipStatic=true -DskipTests=true $DISABLE_DOWNLOAD_PROGRESS_OPTS -T 1C"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "bat",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn clean install -B -T 1C -pl !%ITESTS% -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/%CHANGE_TARGET% %DISABLE_DOWNLOAD_PROGRESS_OPTS%"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "bat",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn install -B -pl %ITESTS% -nsu %DISABLE_DOWNLOAD_PROGRESS_OPTS%"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "agent": {
                                        "type": "label",
                                        "argument": {
                                            "isLiteral": true,
                                            "value": "server-2016-large"
                                        }
                                    }
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "allOf",
                                        "children": [
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "env.CHANGE_ID != null"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "env.CHANGE_TARGET != null"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Full Build",
                            "parallel": [
                                {
                                    "name": "Linux",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "timeout",
                                                    "arguments": [
                                                        {
                                                            "key": "time",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": 1
                                                            }
                                                        },
                                                        {
                                                            "key": "unit",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "HOURS"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "withMaven",
                                                            "arguments": [
                                                                {
                                                                    "key": "maven",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "Maven 3.3.9"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "globalMavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "default-global-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "codice-maven-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenOpts",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}"
                                                                    }
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn clean install -B -T 1C -pl !$ITESTS $DISABLE_DOWNLOAD_PROGRESS_OPTS"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn install -B -pl $ITESTS -nsu $DISABLE_DOWNLOAD_PROGRESS_OPTS"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "Windows",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "retry",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": 3
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "checkout",
                                                            "arguments": [
                                                                {
                                                                    "key": "scm",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${scm}"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "timeout",
                                                    "arguments": [
                                                        {
                                                            "key": "time",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": 1
                                                            }
                                                        },
                                                        {
                                                            "key": "unit",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "HOURS"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "withMaven",
                                                            "arguments": [
                                                                {
                                                                    "key": "maven",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "M35"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "jdk",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "jdk8-latest"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "globalMavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "default-global-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "codice-maven-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenOpts",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "${LARGE_MVN_OPTS}"
                                                                    }
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "name": "bat",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn clean install -B -T 1C -pl !%ITESTS% %DISABLE_DOWNLOAD_PROGRESS_OPTS%"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "bat",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn install -B -pl %ITESTS% -nsu %DISABLE_DOWNLOAD_PROGRESS_OPTS%"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "agent": {
                                        "type": "label",
                                        "argument": {
                                            "isLiteral": true,
                                            "value": "server-2016-large"
                                        }
                                    }
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "expression",
                                        "arguments": [
                                            {
                                                "key": "scriptBlock",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "env.CHANGE_ID == null"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Security Analysis",
                            "parallel": [
                                {
                                    "name": "Owasp",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "withMaven",
                                                    "arguments": [
                                                        {
                                                            "key": "maven",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "M35"
                                                            }
                                                        },
                                                        {
                                                            "key": "jdk",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "jdk8-latest"
                                                            }
                                                        },
                                                        {
                                                            "key": "globalMavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "default-global-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "codice-maven-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenOpts",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "script",
                                                            "arguments": [
                                                                {
                                                                    "key": "scriptBlock",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "if (env.CHANGE_ID == null) {\n                                    sh 'mvn install -q -B -Powasp -DskipTests=true -DskipStatic=true -pl !$DOCS $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                                } else {\n                                    sh 'mvn install -q -B -Powasp -DskipTests=true -DskipStatic=true -pl !$DOCS -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/$CHANGE_TARGET $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                                }"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "NodeJsSecurity",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "retry",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": 3
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "checkout",
                                                            "arguments": [
                                                                {
                                                                    "key": "scm",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${scm}"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "script",
                                                    "arguments": [
                                                        {
                                                            "key": "scriptBlock",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "def packageFiles = findFiles(glob: '**/package.json')\n                            for (int i = 0; i < packageFiles.size(); i++) {\n                                dir(packageFiles[i].path.split('package.json')[0]) {\n                                    def packageFile = readJSON file: 'package.json'\n                                    if (packageFile.scripts =~ /.*webpack.*/ || packageFile.containsKey(\"browserify\")) {\n                                        nodejs(configId: 'npmrc-default', nodeJSInstallationName: 'nodejs') {\n                                            echo \"Scanning ${packageFiles[i].path}\"\n                                            sh 'nsp check'\n                                        }\n                                    }\n                                }\n                            }"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "agent": {
                                        "type": "label",
                                        "argument": {
                                            "isLiteral": true,
                                            "value": "linux-small"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "name": "Deploy",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "withMaven",
                                            "arguments": [
                                                {
                                                    "key": "maven",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "M3"
                                                    }
                                                },
                                                {
                                                    "key": "jdk",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "jdk8-latest"
                                                    }
                                                },
                                                {
                                                    "key": "globalMavenSettingsConfig",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "default-global-settings"
                                                    }
                                                },
                                                {
                                                    "key": "mavenSettingsConfig",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "codice-maven-settings"
                                                    }
                                                },
                                                {
                                                    "key": "mavenOpts",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "${LINUX_MVN_RANDOM}"
                                                    }
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "mvn javadoc:aggregate -B -DskipStatic=true -DskipTests=true $DISABLE_DOWNLOAD_PROGRESS_OPTS"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "mvn deploy -B -T 1C -DskipStatic=true -DskipTests=true -DretryFailedDeploymentCount=10 $DISABLE_DOWNLOAD_PROGRESS_OPTS"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "allOf",
                                        "children": [
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "env.CHANGE_ID == null"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "env.BRANCH_NAME ==~ /((?:\\d*\\.)?\\d.x|master)/"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "environment",
                                                "arguments": [
                                                    {
                                                        "key": "name",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "JENKINS_ENV"
                                                        }
                                                    },
                                                    {
                                                        "key": "value",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "prod"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Quality Analysis",
                            "parallel": [
                                {
                                    "name": "SonarCloud",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "withMaven",
                                                    "arguments": [
                                                        {
                                                            "key": "maven",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "M35"
                                                            }
                                                        },
                                                        {
                                                            "key": "jdk",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "jdk8-latest"
                                                            }
                                                        },
                                                        {
                                                            "key": "globalMavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "default-global-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "codice-maven-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenOpts",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "withCredentials",
                                                            "arguments": {
                                                                "isLiteral": false,
                                                                "value": "${[string(credentialsId: 'SonarQubeGithubToken', variable: 'SONARQUBE_GITHUB_TOKEN'), string(credentialsId: 'sonarqube-token', variable: 'SONAR_TOKEN')]}"
                                                            },
                                                            "children": [
                                                                {
                                                                    "name": "script",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "scriptBlock",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "if (env.CHANGE_ID == null) {\n                                        sh 'mvn -q -B -Dcheckstyle.skip=true org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN  -Dsonar.organization=codice -Dsonar.projectKey=org.codice:alliance -Dsonar.exclusions=${COVERAGE_EXCLUSIONS} -pl !$DOCS,!$ITESTS $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                                    } else {\n                                        echo \"Currently Sonar is not run for pull requests\"\n                                        // sh 'mvn -q -B -Dcheckstyle.skip=true org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar -Dsonar.github.pullRequest=${CHANGE_ID} -Dsonar.github.oauth=${SONARQUBE_GITHUB_TOKEN} -Dsonar.analysis.mode=preview -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN  -Dsonar.organization=codice -Dsonar.projectKey=org.codice:alliance -Dsonar.exclusions=${COVERAGE_EXCLUSIONS} -pl !$DOCS,!$ITESTS -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/$CHANGE_TARGET $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                                    }"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "Coverity",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "retry",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": 3
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "checkout",
                                                            "arguments": [
                                                                {
                                                                    "key": "scm",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${scm}"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "script",
                                                    "arguments": [
                                                        {
                                                            "key": "scriptBlock",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "if (env.BRANCH_NAME != 'master') {\n                                echo \"Coverity is only run on master\"\n                            } else {\n                                withMaven(maven: 'M35', jdk: 'jdk8-latest', globalMavenSettingsConfig: 'default-global-settings', mavenSettingsConfig: 'codice-maven-settings', mavenOpts: '${LINUX_MVN_RANDOM}') {\n                                    withCredentials([string(credentialsId: 'alliance-coverity-token', variable: 'COVERITY_TOKEN')]) {\n                                        withEnv([\"PATH=${tool 'coverity-linux'}/bin:${env.PATH}\"]) {\n                                            configFileProvider([configFile(fileId: 'coverity-maven-settings', replaceTokens: true, variable: 'MAVEN_SETTINGS')]) {\n                                                sh 'cov-build --dir cov-int mvn -DskipTests=true -DskipStatic=true install -B -pl !$DOCS $DISABLE_DOWNLOAD_PROGRESS_OPTS --settings $MAVEN_SETTINGS'\n                                                sh 'tar czvf alliance.tgz cov-int'\n                                                sh 'curl --form token=$COVERITY_TOKEN --form email=cmp-security-team@connexta.com --form file=@alliance.tgz --form version=\"master\" --form description=\"Description: Alliance CI Build\" https://scan.coverity.com/builds?project=codice%2Falliance'\n                                            }\n                                        }\n                                    }\n                                }\n                            }"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "agent": {
                                        "type": "label",
                                        "argument": {
                                            "isLiteral": true,
                                            "value": "linux-medium"
                                        }
                                    }
                                },
                                {
                                    "name": "Codecov",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "retry",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": 3
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "checkout",
                                                            "arguments": [
                                                                {
                                                                    "key": "scm",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${scm}"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "withMaven",
                                                    "arguments": [
                                                        {
                                                            "key": "maven",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "M35"
                                                            }
                                                        },
                                                        {
                                                            "key": "jdk",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "jdk8-latest"
                                                            }
                                                        },
                                                        {
                                                            "key": "globalMavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "default-global-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "codice-maven-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenOpts",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "withCredentials",
                                                            "arguments": {
                                                                "isLiteral": false,
                                                                "value": "${[string(credentialsId: 'Alliance_CodeCov', variable: 'CODECOV_TOKEN')]}"
                                                            },
                                                            "children": [
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn clean install -B -T 1C -pl !$ITESTS $DISABLE_DOWNLOAD_PROGRESS_OPTS"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "curl -s https://codecov.io/bash | bash -s - -t ${CODECOV_TOKEN}"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "agent": {
                                        "type": "label",
                                        "argument": {
                                            "isLiteral": true,
                                            "value": "linux-small"
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    "post": {
                        "conditions": [
                            {
                                "condition": "success",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "slackSend",
                                            "arguments": [
                                                {
                                                    "key": "color",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "good"
                                                    }
                                                },
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"SUCCESS: ${JOB_NAME} ${BUILD_NUMBER}\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            {
                                "condition": "failure",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "slackSend",
                                            "arguments": [
                                                {
                                                    "key": "color",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "#ea0017"
                                                    }
                                                },
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"FAILURE: ${JOB_NAME} ${BUILD_NUMBER}. See the results here: ${BUILD_URL}\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            {
                                "condition": "unstable",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "slackSend",
                                            "arguments": [
                                                {
                                                    "key": "color",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "#ffb600"
                                                    }
                                                },
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"UNSTABLE: ${JOB_NAME} ${BUILD_NUMBER}. See the results here: ${BUILD_URL}\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "environment": [
                        {
                            "key": "DOCS",
                            "value": {
                                "isLiteral": true,
                                "value": "distribution/docs"
                            }
                        },
                        {
                            "key": "ITESTS",
                            "value": {
                                "isLiteral": true,
                                "value": "distribution/test/itests/test-itests-alliance"
                            }
                        },
                        {
                            "key": "POMFIX",
                            "value": {
                                "isLiteral": true,
                                "value": "libs/pom-fix-run"
                            }
                        },
                        {
                            "key": "LARGE_MVN_OPTS",
                            "value": {
                                "isLiteral": true,
                                "value": "-Xmx8192M -Xss128M -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC "
                            }
                        },
                        {
                            "key": "DISABLE_DOWNLOAD_PROGRESS_OPTS",
                            "value": {
                                "isLiteral": true,
                                "value": "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn "
                            }
                        },
                        {
                            "key": "LINUX_MVN_RANDOM",
                            "value": {
                                "isLiteral": true,
                                "value": "-Djava.security.egd=file:/dev/./urandom"
                            }
                        },
                        {
                            "key": "COVERAGE_EXCLUSIONS",
                            "value": {
                                "isLiteral": true,
                                "value": "**/test/**/*,**/itests/**/*,**/*Test*,**/sdk/**/*,**/*.js,**/node_modules/**/*,**/jaxb/**/*,**/wsdl/**/*,**/nces/sws/**/*,**/*.adoc,**/*.txt,**/*.xml"
                            }
                        }
                    ],
                    "agent": {
                        "type": "label",
                        "argument": {
                            "isLiteral": true,
                            "value": "linux-large"
                        }
                    },
                    "options": {
                        "options": [
                            {
                                "name": "buildDiscarder",
                                "arguments": [
                                    {
                                        "name": "logRotator",
                                        "arguments": [
                                            {
                                                "key": "numToKeepStr",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "25"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "name": "disableConcurrentBuilds",
                                "arguments": []
                            },
                            {
                                "name": "timestamps",
                                "arguments": []
                            },
                            {
                                "name": "skipDefaultCheckout",
                                "arguments": []
                            }
                        ]
                    },
                    "triggers": {
                        "triggers": [
                            {
                                "name": "cron",
                                "arguments": [
                                    {
                                        "isLiteral": false,
                                        "value": "${BRANCH_NAME == \"master\" ? \"H H(19-21) * * *\" : \"\"}"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "apurtell/hbase",
            "repo_url": "https://github.com/apurtell/hbase",
            "html_url_jenkinsfile": "https://github.com/apurtell/hbase/blob/1825af45b328cd54680c5c552f07bb12c4705fdb/dev-support/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/20067882/git/blobs/821d20e6a89e101659cee1526ef83de6b89fb996",
            "jenkins_pipeline": [
                {
                    "error": [
                        "Tool type \"maven\" does not have an install of \"Maven (latest)\" configured - did you mean \"Jenkins_maven\"? @ line 446, column 19.",
                        "Tool type \"jdk\" does not have an install of \"JDK 1.8 (latest)\" configured - did you mean \"null\"? @ line 448, column 17."
                    ]
                }
            ]
        },
        {
            "full_repo_name": "BigWii/hbase-src",
            "repo_url": "https://github.com/BigWii/hbase-src",
            "html_url_jenkinsfile": "https://github.com/BigWii/hbase-src/blob/5a071dbe2bbcbc22ec52fea0426637905f6c37bb/dev-support/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/131708626/git/blobs/821d20e6a89e101659cee1526ef83de6b89fb996",
            "jenkins_pipeline": [
                {
                    "error": [
                        "Tool type \"maven\" does not have an install of \"Maven (latest)\" configured - did you mean \"Jenkins_maven\"? @ line 446, column 19.",
                        "Tool type \"jdk\" does not have an install of \"JDK 1.8 (latest)\" configured - did you mean \"null\"? @ line 448, column 17."
                    ]
                }
            ]
        },
        {
            "full_repo_name": "connexta/admin-console",
            "repo_url": "https://github.com/connexta/admin-console",
            "html_url_jenkinsfile": "https://github.com/connexta/admin-console/blob/52be94064bb6c8378f5ec4f1b651fbf160c8b7e1/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/80874891/git/blobs/1d52a3292fa803dcd78ae0872ea812bc0fcece61",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Setup",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "slackSend",
                                            "arguments": [
                                                {
                                                    "key": "color",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "good"
                                                    }
                                                },
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"STARTED: ${JOB_NAME} ${BUILD_NUMBER} ${BUILD_URL}\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Build/Test",
                            "parallel": [
                                {
                                    "name": "Linux Full Build",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "withMaven",
                                                    "arguments": [
                                                        {
                                                            "key": "maven",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "Maven 3.5.2"
                                                            }
                                                        },
                                                        {
                                                            "key": "globalMavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "default-global-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "codice-maven-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenOpts",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "mvn install -B -nsu $DISABLE_DOWNLOAD_PROGRESS_OPTS -pl !$ITESTS"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "when": {
                                        "conditions": [
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "env.CHANGE_ID == null"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Windows Full Build",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "withMaven",
                                                    "arguments": [
                                                        {
                                                            "key": "maven",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "Maven 3.5.2"
                                                            }
                                                        },
                                                        {
                                                            "key": "jdk",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "jdk8-latest"
                                                            }
                                                        },
                                                        {
                                                            "key": "globalMavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "default-global-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "codice-maven-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenOpts",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "${LARGE_MVN_OPTS}"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "bat",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "mvn install -B -nsu %DISABLE_DOWNLOAD_PROGRESS_OPTS% -pl !%ITESTS%"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "agent": {
                                        "type": "label",
                                        "argument": {
                                            "isLiteral": true,
                                            "value": "server-2016-large"
                                        }
                                    },
                                    "when": {
                                        "conditions": [
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "env.CHANGE_ID == null"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Linux PR Build",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "withMaven",
                                                    "arguments": [
                                                        {
                                                            "key": "maven",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "Maven 3.5.2"
                                                            }
                                                        },
                                                        {
                                                            "key": "globalMavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "default-global-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "codice-maven-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenOpts",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}"
                                                            }
                                                        },
                                                        {
                                                            "key": "options",
                                                            "value": {
                                                                "isLiteral": false,
                                                                "value": "${[artifactsPublisher(disabled: true), dependenciesFingerprintPublisher(disabled: true, includeScopeCompile: false, includeScopeProvided: false, includeScopeRuntime: false, includeSnapshotVersions: false)]}"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "mvn install -B -Dfindbugs.skip=true -Dpmd.skip=true -Dcheckstyle.skip=true -DskipTests=true -nsu $DISABLE_DOWNLOAD_PROGRESS_OPTS"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "mvn install -B -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/$CHANGE_TARGET -nsu $DISABLE_DOWNLOAD_PROGRESS_OPTS -pl !$ITESTS"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "when": {
                                        "conditions": [
                                            {
                                                "name": "allOf",
                                                "children": [
                                                    {
                                                        "name": "expression",
                                                        "arguments": [
                                                            {
                                                                "key": "scriptBlock",
                                                                "value": {
                                                                    "isLiteral": true,
                                                                    "value": "env.CHANGE_ID != null"
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "name": "expression",
                                                        "arguments": [
                                                            {
                                                                "key": "scriptBlock",
                                                                "value": {
                                                                    "isLiteral": true,
                                                                    "value": "env.CHANGE_TARGET != null"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Windows PR Build",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "withMaven",
                                                    "arguments": [
                                                        {
                                                            "key": "maven",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "Maven 3.5.2"
                                                            }
                                                        },
                                                        {
                                                            "key": "jdk",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "jdk8-latest"
                                                            }
                                                        },
                                                        {
                                                            "key": "globalMavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "default-global-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "codice-maven-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenOpts",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "${LARGE_MVN_OPTS}"
                                                            }
                                                        },
                                                        {
                                                            "key": "options",
                                                            "value": {
                                                                "isLiteral": false,
                                                                "value": "${[artifactsPublisher(disabled: true), dependenciesFingerprintPublisher(disabled: true, includeScopeCompile: false, includeScopeProvided: false, includeScopeRuntime: false, includeSnapshotVersions: false)]}"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "bat",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "mvn install -B -Dfindbugs.skip=true -Dpmd.skip=true -Dcheckstyle.skip=true -DskipTests=true -nsu %DISABLE_DOWNLOAD_PROGRESS_OPTS%"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "bat",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "mvn install -B -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/%CHANGE_TARGET% -nsu %DISABLE_DOWNLOAD_PROGRESS_OPTS% -pl !%ITESTS%"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "agent": {
                                        "type": "label",
                                        "argument": {
                                            "isLiteral": true,
                                            "value": "server-2016-large"
                                        }
                                    },
                                    "when": {
                                        "conditions": [
                                            {
                                                "name": "allOf",
                                                "children": [
                                                    {
                                                        "name": "expression",
                                                        "arguments": [
                                                            {
                                                                "key": "scriptBlock",
                                                                "value": {
                                                                    "isLiteral": true,
                                                                    "value": "env.CHANGE_ID != null"
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "name": "expression",
                                                        "arguments": [
                                                            {
                                                                "key": "scriptBlock",
                                                                "value": {
                                                                    "isLiteral": true,
                                                                    "value": "env.CHANGE_TARGET != null"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        {
                            "name": "Security Analysis",
                            "parallel": [
                                {
                                    "name": "OWASP",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "script",
                                                    "arguments": [
                                                        {
                                                            "key": "scriptBlock",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "withMaven(maven: 'Maven 3.5.2', jdk: 'jdk8-latest', globalMavenSettingsConfig: 'default-global-settings', mavenSettingsConfig: 'codice-maven-settings', mavenOpts: '${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}') {\n                               // If this build is not a pull request, run full owasp scan. Otherwise run incremental scan\n                               if (env.CHANGE_ID == null) {\n                                   sh 'mvn install -q -B -Powasp -DskipTests=true -DskipStatic=true $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                               } else {\n                                   sh 'mvn install -q -B -Powasp -DskipTests=true -DskipStatic=true -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/$CHANGE_TARGET $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                               }\n                           }"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "nodeJsSecurity",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "script",
                                                    "arguments": [
                                                        {
                                                            "key": "scriptBlock",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "def packageFiles = findFiles(glob: '**/package.json')\n                            for (int i = 0; i < packageFiles.size(); i++) {\n                                dir(packageFiles[i].path.split('package.json')[0]) {\n                                    def packageFile = readJSON file: 'package.json'\n                                    if (packageFile.scripts =~ /.*webpack.*/ || packageFile.containsKey(\"browserify\")) {\n                                        nodejs(configId: 'npmrc-default', nodeJSInstallationName: 'nodejs') {\n                                            echo \"Scanning ${packageFiles[i].path}\"\n                                            sh 'nsp check'\n                                        }\n                                    }\n                                }\n                            }"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "agent": {
                                        "type": "label",
                                        "argument": {
                                            "isLiteral": true,
                                            "value": "linux-small"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "name": "Deploy",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "withMaven",
                                            "arguments": [
                                                {
                                                    "key": "maven",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "Maven 3.5.2"
                                                    }
                                                },
                                                {
                                                    "key": "jdk",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "jdk8-latest"
                                                    }
                                                },
                                                {
                                                    "key": "globalMavenSettingsConfig",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "default-global-settings"
                                                    }
                                                },
                                                {
                                                    "key": "mavenSettingsConfig",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "codice-maven-settings"
                                                    }
                                                },
                                                {
                                                    "key": "mavenOpts",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "${LINUX_MVN_RANDOM}"
                                                    }
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "mvn javadoc:aggregate -B -Dfindbugs.skip=true -Dpmd.skip=true -Dcheckstyle.skip=true -DskipTests=true -nsu $DISABLE_DOWNLOAD_PROGRESS_OPTS"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "mvn deploy -B -Dfindbugs.skip=true -Dpmd.skip=true -Dcheckstyle.skip=true -DskipTests=true -DretryFailedDeploymentCount=10 -nsu $DISABLE_DOWNLOAD_PROGRESS_OPTS"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "allOf",
                                        "children": [
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "env.CHANGE_ID == null"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "env.BRANCH_NAME ==~ /((?:\\d*\\.)?\\d*\\.x|master)/"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "environment",
                                                "arguments": [
                                                    {
                                                        "key": "name",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "JENKINS_ENV"
                                                        }
                                                    },
                                                    {
                                                        "key": "value",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "prod"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Quality Analysis",
                            "parallel": [
                                {
                                    "name": "SonarCloud",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "withMaven",
                                                    "arguments": [
                                                        {
                                                            "key": "maven",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "Maven 3.5.2"
                                                            }
                                                        },
                                                        {
                                                            "key": "jdk",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "jdk8-latest"
                                                            }
                                                        },
                                                        {
                                                            "key": "globalMavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "default-global-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "codice-maven-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenOpts",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "withCredentials",
                                                            "arguments": {
                                                                "isLiteral": false,
                                                                "value": "${[string(credentialsId: 'SonarQubeGithubToken', variable: 'SONARQUBE_GITHUB_TOKEN'), string(credentialsId: 'cxbot-sonarcloud', variable: 'SONAR_TOKEN')]}"
                                                            },
                                                            "children": [
                                                                {
                                                                    "name": "script",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "scriptBlock",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "if (env.CHANGE_ID == null) {\n                                        sh 'mvn -q -B -Dcheckstyle.skip=true org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN  -Dsonar.organization=cx -Dsonar.projectKey=ac -Dsonar.exclusions=${COVERAGE_EXCLUSIONS} -pl !$ITESTS $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                                    } else {\n                                        sh 'mvn -q -B -Dcheckstyle.skip=true org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar -Dsonar.github.pullRequest=${CHANGE_ID} -Dsonar.github.oauth=${SONARQUBE_GITHUB_TOKEN} -Dsonar.analysis.mode=preview -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN -Dsonar.organization=cx -Dsonar.projectKey=ac -Dsonar.exclusions=${COVERAGE_EXCLUSIONS} -pl !$ITESTS -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/$CHANGE_TARGET $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                                    }"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "Coverity",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "retry",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": 3
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "checkout",
                                                            "arguments": [
                                                                {
                                                                    "key": "scm",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${scm}"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "script",
                                                    "arguments": [
                                                        {
                                                            "key": "scriptBlock",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "if (env.BRANCH_NAME != 'master') {\n                                echo \"Coverity is only run on master\"\n                            } else {\n                                withMaven(maven: 'Maven 3.5.2', jdk: 'jdk8-latest', globalMavenSettingsConfig: 'default-global-settings', mavenSettingsConfig: 'codice-maven-settings', mavenOpts: '${LINUX_MVN_RANDOM}') {\n                                    withCredentials([string(credentialsId: 'admin-console-coverity-token', variable: 'COVERITY_TOKEN')]) {\n                                        withEnv([\"PATH=${tool 'coverity-linux'}/bin:${env.PATH}\"]) {\n                                            configFileProvider([configFile(fileId: 'coverity-maven-settings', replaceTokens: true, variable: 'MAVEN_SETTINGS')]) {\n                                                echo sh(returnStdout: true, script: 'env')\n                                                sh 'cov-build --dir cov-int mvn -DskipTests=true -DskipStatic=true install -B --settings $MAVEN_SETTINGS $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                                                sh 'tar czvf ac.tgz cov-int'\n                                                sh 'curl --form token=$COVERITY_TOKEN --form email=cmp-security-team@connexta.com --form file=@ac.tgz --form version=\"master\" --form description=\"Description: Admin Console CI Build\" https://scan.coverity.com/builds?project=connexta%2Fadmin-console'\n                                            }\n                                        }\n                                    }\n                                }\n                            }"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "agent": {
                                        "type": "label",
                                        "argument": {
                                            "isLiteral": true,
                                            "value": "linux-medium"
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    "post": {
                        "conditions": [
                            {
                                "condition": "success",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "slackSend",
                                            "arguments": [
                                                {
                                                    "key": "color",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "good"
                                                    }
                                                },
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"SUCCESS: ${JOB_NAME} ${BUILD_NUMBER}\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            {
                                "condition": "failure",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "slackSend",
                                            "arguments": [
                                                {
                                                    "key": "color",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "#ea0017"
                                                    }
                                                },
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"FAILURE: ${JOB_NAME} ${BUILD_NUMBER}. See the results here: ${BUILD_URL}\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            {
                                "condition": "unstable",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "slackSend",
                                            "arguments": [
                                                {
                                                    "key": "color",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "#ffb600"
                                                    }
                                                },
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"UNSTABLE: ${JOB_NAME} ${BUILD_NUMBER}. See the results here: ${BUILD_URL}\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "environment": [
                        {
                            "key": "ITESTS",
                            "value": {
                                "isLiteral": true,
                                "value": "tests/itests"
                            }
                        },
                        {
                            "key": "LARGE_MVN_OPTS",
                            "value": {
                                "isLiteral": true,
                                "value": "-Xmx8192M -Xss128M -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC "
                            }
                        },
                        {
                            "key": "LINUX_MVN_RANDOM",
                            "value": {
                                "isLiteral": true,
                                "value": "-Djava.security.egd=file:/dev/./urandom"
                            }
                        },
                        {
                            "key": "DISABLE_DOWNLOAD_PROGRESS_OPTS",
                            "value": {
                                "isLiteral": true,
                                "value": "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
                            }
                        },
                        {
                            "key": "COVERAGE_EXCLUSIONS",
                            "value": {
                                "isLiteral": true,
                                "value": "**/test/**/*,**/itests/**/*,**/*Test*,**/sdk/**/*,**/*.js,**/node_modules/**/*,**/jaxb/**/*,**/wsdl/**/*,**/*.adoc,**/*.txt,**/*.xml"
                            }
                        }
                    ],
                    "agent": {
                        "type": "label",
                        "argument": {
                            "isLiteral": true,
                            "value": "linux-large"
                        }
                    },
                    "options": {
                        "options": [
                            {
                                "name": "buildDiscarder",
                                "arguments": [
                                    {
                                        "name": "logRotator",
                                        "arguments": [
                                            {
                                                "key": "numToKeepStr",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "25"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "name": "disableConcurrentBuilds",
                                "arguments": []
                            },
                            {
                                "name": "timestamps",
                                "arguments": []
                            }
                        ]
                    },
                    "triggers": {
                        "triggers": [
                            {
                                "name": "cron",
                                "arguments": [
                                    {
                                        "isLiteral": false,
                                        "value": "${BRANCH_NAME == \"master\" ? \"H H(19-21) * * *\" : \"\"}"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "codice/ddf",
            "repo_url": "https://github.com/codice/ddf",
            "html_url_jenkinsfile": "https://github.com/codice/ddf/blob/c97c54724595db77ed3571c0166198c3ad970e69/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/15173563/git/blobs/bd425e9b4149b932bf8898a7b7d71e1634003954",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Setup",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "slackSend",
                                            "arguments": [
                                                {
                                                    "key": "color",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "good"
                                                    }
                                                },
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"STARTED: ${JOB_NAME} ${BUILD_NUMBER} ${BUILD_URL}\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Validate Poms",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "retry",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": 3
                                            },
                                            "children": [
                                                {
                                                    "name": "checkout",
                                                    "arguments": [
                                                        {
                                                            "key": "scm",
                                                            "value": {
                                                                "isLiteral": false,
                                                                "value": "${scm}"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "withMaven",
                                            "arguments": [
                                                {
                                                    "key": "maven",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "M3"
                                                    }
                                                },
                                                {
                                                    "key": "jdk",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "jdk8-latest"
                                                    }
                                                },
                                                {
                                                    "key": "globalMavenSettingsConfig",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "default-global-settings"
                                                    }
                                                },
                                                {
                                                    "key": "mavenSettingsConfig",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "codice-maven-settings"
                                                    }
                                                },
                                                {
                                                    "key": "mavenOpts",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "${LINUX_MVN_RANDOM}"
                                                    }
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "mvn clean install -DskipStatic=true -DskipTests=true -B -pl $POMFIX $DISABLE_DOWNLOAD_PROGRESS_OPTS"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Incremental Build",
                            "parallel": [
                                {
                                    "name": "Linux",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "timeout",
                                                    "arguments": [
                                                        {
                                                            "key": "time",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": 3
                                                            }
                                                        },
                                                        {
                                                            "key": "unit",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "HOURS"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "withMaven",
                                                            "arguments": [
                                                                {
                                                                    "key": "maven",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "Maven 3.3.9"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "globalMavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "default-global-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "codice-maven-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenOpts",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "options",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${[artifactsPublisher(disabled: true), dependenciesFingerprintPublisher(disabled: true, includeScopeCompile: false, includeScopeProvided: false, includeScopeRuntime: false, includeSnapshotVersions: false)]}"
                                                                    }
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn install -B -pl !$DOCS -DskipStatic=true -DskipTests=true -T 1C $DISABLE_DOWNLOAD_PROGRESS_OPTS"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn clean install -B -T 1C -pl !$ITESTS -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/$CHANGE_TARGET $DISABLE_DOWNLOAD_PROGRESS_OPTS"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn install -B -pl $ITESTS -nsu $DISABLE_DOWNLOAD_PROGRESS_OPTS"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "Windows",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "retry",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": 3
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "checkout",
                                                            "arguments": [
                                                                {
                                                                    "key": "scm",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${scm}"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "timeout",
                                                    "arguments": [
                                                        {
                                                            "key": "time",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": 3
                                                            }
                                                        },
                                                        {
                                                            "key": "unit",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "HOURS"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "withMaven",
                                                            "arguments": [
                                                                {
                                                                    "key": "maven",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "M35"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "jdk",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "jdk8-latest"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "globalMavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "default-global-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "codice-maven-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenOpts",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "${LARGE_MVN_OPTS}"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "options",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${[artifactsPublisher(disabled: true), dependenciesFingerprintPublisher(disabled: true, includeScopeCompile: false, includeScopeProvided: false, includeScopeRuntime: false, includeSnapshotVersions: false)]}"
                                                                    }
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "name": "bat",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn install -B -pl !%DOCS% -DskipStatic=true -DskipTests=true -T 1C %DISABLE_DOWNLOAD_PROGRESS_OPTS%"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "bat",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn clean install -B -T 1C -pl !%ITESTS% -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/%CHANGE_TARGET% %DISABLE_DOWNLOAD_PROGRESS_OPTS%"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "bat",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn install -B -pl %ITESTS% -nsu %DISABLE_DOWNLOAD_PROGRESS_OPTS%"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "agent": {
                                        "type": "label",
                                        "argument": {
                                            "isLiteral": true,
                                            "value": "server-2016-large"
                                        }
                                    }
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "allOf",
                                        "children": [
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "env.CHANGE_ID != null"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "env.CHANGE_TARGET != null"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Full Build",
                            "parallel": [
                                {
                                    "name": "Linux",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "timeout",
                                                    "arguments": [
                                                        {
                                                            "key": "time",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": 3
                                                            }
                                                        },
                                                        {
                                                            "key": "unit",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "HOURS"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "withMaven",
                                                            "arguments": [
                                                                {
                                                                    "key": "maven",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "Maven 3.3.9"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "globalMavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "default-global-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "codice-maven-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenOpts",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}"
                                                                    }
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn clean install -B -pl !$ITESTS $DISABLE_DOWNLOAD_PROGRESS_OPTS"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn install -B -pl $ITESTS -nsu $DISABLE_DOWNLOAD_PROGRESS_OPTS"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "Windows",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "retry",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": 3
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "checkout",
                                                            "arguments": [
                                                                {
                                                                    "key": "scm",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${scm}"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "timeout",
                                                    "arguments": [
                                                        {
                                                            "key": "time",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": 3
                                                            }
                                                        },
                                                        {
                                                            "key": "unit",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "HOURS"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "withMaven",
                                                            "arguments": [
                                                                {
                                                                    "key": "maven",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "M35"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "jdk",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "jdk8-latest"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "globalMavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "default-global-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "codice-maven-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenOpts",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "${LARGE_MVN_OPTS}"
                                                                    }
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "name": "bat",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn clean install -B -pl !%ITESTS% %DISABLE_DOWNLOAD_PROGRESS_OPTS%"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "bat",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn install -B -pl %ITESTS% -nsu %DISABLE_DOWNLOAD_PROGRESS_OPTS%"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "agent": {
                                        "type": "label",
                                        "argument": {
                                            "isLiteral": true,
                                            "value": "server-2016-large"
                                        }
                                    }
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "expression",
                                        "arguments": [
                                            {
                                                "key": "scriptBlock",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "env.CHANGE_ID == null"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Security Analysis",
                            "parallel": [
                                {
                                    "name": "Owasp",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "withMaven",
                                                    "arguments": [
                                                        {
                                                            "key": "maven",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "M35"
                                                            }
                                                        },
                                                        {
                                                            "key": "jdk",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "jdk8-latest"
                                                            }
                                                        },
                                                        {
                                                            "key": "globalMavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "default-global-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "codice-maven-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenOpts",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "script",
                                                            "arguments": [
                                                                {
                                                                    "key": "scriptBlock",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "if (env.CHANGE_ID == null) {\n                                    sh 'mvn install -q -B -Powasp -DskipTests=true -DskipStatic=true -pl !$DOCS $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                                } else {\n                                    sh 'mvn install -q -B -Powasp -DskipTests=true -DskipStatic=true -pl !$DOCS -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/$CHANGE_TARGET $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                                }"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "NodeJsSecurity",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "retry",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": 3
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "checkout",
                                                            "arguments": [
                                                                {
                                                                    "key": "scm",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${scm}"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "script",
                                                    "arguments": [
                                                        {
                                                            "key": "scriptBlock",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "def packageFiles = findFiles(glob: '**/package.json')\n                            for (int i = 0; i < packageFiles.size(); i++) {\n                                dir(packageFiles[i].path.split('package.json')[0]) {\n                                    def packageFile = readJSON file: 'package.json'\n                                    if (packageFile.scripts =~ /.*webpack.*/ || packageFile.containsKey(\"browserify\")) {\n                                        nodejs(configId: 'npmrc-default', nodeJSInstallationName: 'nodejs') {\n                                            echo \"Scanning ${packageFiles[i].path}\"\n                                            sh 'nsp check'\n                                        }\n                                    }\n                                }\n                            }"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "agent": {
                                        "type": "label",
                                        "argument": {
                                            "isLiteral": true,
                                            "value": "linux-small"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "name": "Deploy",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "withMaven",
                                            "arguments": [
                                                {
                                                    "key": "maven",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "M3"
                                                    }
                                                },
                                                {
                                                    "key": "jdk",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "jdk8-latest"
                                                    }
                                                },
                                                {
                                                    "key": "globalMavenSettingsConfig",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "default-global-settings"
                                                    }
                                                },
                                                {
                                                    "key": "mavenSettingsConfig",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "codice-maven-settings"
                                                    }
                                                },
                                                {
                                                    "key": "mavenOpts",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "${LINUX_MVN_RANDOM}"
                                                    }
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "mvn javadoc:aggregate -B -DskipStatic=true -DskipTests=true $DISABLE_DOWNLOAD_PROGRESS_OPTS"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "mvn deploy -B -T 1C -DskipStatic=true -DskipTests=true -DretryFailedDeploymentCount=10 $DISABLE_DOWNLOAD_PROGRESS_OPTS"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "allOf",
                                        "children": [
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "env.CHANGE_ID == null"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "env.BRANCH_NAME ==~ /((?:\\d*\\.)?\\d*\\.x|master)/"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "environment",
                                                "arguments": [
                                                    {
                                                        "key": "name",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "JENKINS_ENV"
                                                        }
                                                    },
                                                    {
                                                        "key": "value",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "prod"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Quality Analysis",
                            "parallel": [
                                {
                                    "name": "SonarCloud",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "withMaven",
                                                    "arguments": [
                                                        {
                                                            "key": "maven",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "M35"
                                                            }
                                                        },
                                                        {
                                                            "key": "jdk",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "jdk8-latest"
                                                            }
                                                        },
                                                        {
                                                            "key": "globalMavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "default-global-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "codice-maven-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenOpts",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "withCredentials",
                                                            "arguments": {
                                                                "isLiteral": false,
                                                                "value": "${[string(credentialsId: 'SonarQubeGithubToken', variable: 'SONARQUBE_GITHUB_TOKEN'), string(credentialsId: 'sonarqube-token', variable: 'SONAR_TOKEN')]}"
                                                            },
                                                            "children": [
                                                                {
                                                                    "name": "script",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "scriptBlock",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "if (env.CHANGE_ID == null) {\n                                        sh 'mvn -q -B -Dcheckstyle.skip=true org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN  -Dsonar.organization=codice -Dsonar.projectKey=ddf -Dsonar.exclusions=${COVERAGE_EXCLUSIONS} -pl !$DOCS,!$ITESTS $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                                    } else {\n                                        sh 'mvn -q -B -Dcheckstyle.skip=true org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar -Dsonar.github.pullRequest=${CHANGE_ID} -Dsonar.github.oauth=${SONARQUBE_GITHUB_TOKEN} -Dsonar.analysis.mode=preview -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN -Dsonar.organization=codice -Dsonar.projectKey=ddf -Dsonar.exclusions=${COVERAGE_EXCLUSIONS} -pl !$DOCS,!$ITESTS -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/$CHANGE_TARGET $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                                    }"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "Coverity",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "retry",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": 3
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "checkout",
                                                            "arguments": [
                                                                {
                                                                    "key": "scm",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${scm}"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "script",
                                                    "arguments": [
                                                        {
                                                            "key": "scriptBlock",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "if (env.BRANCH_NAME != 'master') {\n                                echo \"Coverity is only run on master\"\n                            } else {\n                                withMaven(maven: 'M35', jdk: 'jdk8-latest', globalMavenSettingsConfig: 'default-global-settings', mavenSettingsConfig: 'codice-maven-settings', mavenOpts: '${LINUX_MVN_RANDOM}') {\n                                    withCredentials([string(credentialsId: 'ddf-coverity-token', variable: 'COVERITY_TOKEN')]) {\n                                        withEnv([\"PATH=${tool 'coverity-linux'}/bin:${env.PATH}\"]) {\n                                            configFileProvider([configFile(fileId: 'coverity-maven-settings', replaceTokens: true, variable: 'MAVEN_SETTINGS')]) {\n                                                echo sh(returnStdout: true, script: 'env')\n                                                sh 'cov-build --dir cov-int mvn -DskipTests=true -DskipStatic=true install -B -pl !$DOCS $DISABLE_DOWNLOAD_PROGRESS_OPTS --settings $MAVEN_SETTINGS'\n                                                sh 'tar czvf ddf.tgz cov-int'\n                                                sh 'curl --form token=$COVERITY_TOKEN --form email=cmp-security-team@connexta.com --form file=@ddf.tgz --form version=\"master\" --form description=\"Description: DDF CI Build\" https://scan.coverity.com/builds?project=codice%2Fddf'\n                                            }\n                                        }\n                                    }\n                                }\n                            }"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "agent": {
                                        "type": "label",
                                        "argument": {
                                            "isLiteral": true,
                                            "value": "linux-medium"
                                        }
                                    }
                                },
                                {
                                    "name": "Codecov",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "retry",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": 3
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "checkout",
                                                            "arguments": [
                                                                {
                                                                    "key": "scm",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${scm}"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "withMaven",
                                                    "arguments": [
                                                        {
                                                            "key": "maven",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "M35"
                                                            }
                                                        },
                                                        {
                                                            "key": "jdk",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "jdk8-latest"
                                                            }
                                                        },
                                                        {
                                                            "key": "globalMavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "default-global-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "codice-maven-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenOpts",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "withCredentials",
                                                            "arguments": {
                                                                "isLiteral": false,
                                                                "value": "${[string(credentialsId: 'DDF_CodeCov', variable: 'DDF_CODECOV_TOKEN')]}"
                                                            },
                                                            "children": [
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn clean install -B -T 1C -pl !$ITESTS $DISABLE_DOWNLOAD_PROGRESS_OPTS"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "curl -s https://codecov.io/bash | bash -s - -t ${DDF_CODECOV_TOKEN}"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "agent": {
                                        "type": "label",
                                        "argument": {
                                            "isLiteral": true,
                                            "value": "linux-medium"
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    "post": {
                        "conditions": [
                            {
                                "condition": "success",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "slackSend",
                                            "arguments": [
                                                {
                                                    "key": "color",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "good"
                                                    }
                                                },
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"SUCCESS: ${JOB_NAME} ${BUILD_NUMBER}\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            {
                                "condition": "failure",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "slackSend",
                                            "arguments": [
                                                {
                                                    "key": "color",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "#ea0017"
                                                    }
                                                },
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"FAILURE: ${JOB_NAME} ${BUILD_NUMBER}. See the results here: ${BUILD_URL}\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            {
                                "condition": "unstable",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "slackSend",
                                            "arguments": [
                                                {
                                                    "key": "color",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "#ffb600"
                                                    }
                                                },
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"UNSTABLE: ${JOB_NAME} ${BUILD_NUMBER}. See the results here: ${BUILD_URL}\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "environment": [
                        {
                            "key": "DOCS",
                            "value": {
                                "isLiteral": true,
                                "value": "distribution/docs"
                            }
                        },
                        {
                            "key": "ITESTS",
                            "value": {
                                "isLiteral": true,
                                "value": "distribution/test/itests/test-itests-ddf"
                            }
                        },
                        {
                            "key": "POMFIX",
                            "value": {
                                "isLiteral": true,
                                "value": "libs/libs-pomfix,libs/libs-pomfix-run"
                            }
                        },
                        {
                            "key": "LARGE_MVN_OPTS",
                            "value": {
                                "isLiteral": true,
                                "value": "-Xmx8192M -Xss128M -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC "
                            }
                        },
                        {
                            "key": "DISABLE_DOWNLOAD_PROGRESS_OPTS",
                            "value": {
                                "isLiteral": true,
                                "value": "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn "
                            }
                        },
                        {
                            "key": "LINUX_MVN_RANDOM",
                            "value": {
                                "isLiteral": true,
                                "value": "-Djava.security.egd=file:/dev/./urandom"
                            }
                        },
                        {
                            "key": "COVERAGE_EXCLUSIONS",
                            "value": {
                                "isLiteral": true,
                                "value": "**/test/**/*,**/itests/**/*,**/*Test*,**/sdk/**/*,**/*.js,**/node_modules/**/*,**/jaxb/**/*,**/wsdl/**/*,**/nces/sws/**/*,**/*.adoc,**/*.txt,**/*.xml,**/platform-solr-server-standalone/**/*"
                            }
                        }
                    ],
                    "agent": {
                        "type": "label",
                        "argument": {
                            "isLiteral": true,
                            "value": "linux-large"
                        }
                    },
                    "options": {
                        "options": [
                            {
                                "name": "buildDiscarder",
                                "arguments": [
                                    {
                                        "name": "logRotator",
                                        "arguments": [
                                            {
                                                "key": "numToKeepStr",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "25"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "name": "disableConcurrentBuilds",
                                "arguments": []
                            },
                            {
                                "name": "timestamps",
                                "arguments": []
                            },
                            {
                                "name": "skipDefaultCheckout",
                                "arguments": []
                            }
                        ]
                    },
                    "triggers": {
                        "triggers": [
                            {
                                "name": "cron",
                                "arguments": [
                                    {
                                        "isLiteral": false,
                                        "value": "${BRANCH_NAME == \"master\" ? \"H H(17-19) * * *\" : \"\"}"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "oconnormi/jenkins-test",
            "repo_url": "https://github.com/oconnormi/jenkins-test",
            "html_url_jenkinsfile": "https://github.com/oconnormi/jenkins-test/blob/2697fb8a51bd4638b44ba92b61e71d81dbd688fb/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/71487461/git/blobs/cb7c576b1f367b0c992d23342ac166bfcd328c8f",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Setup",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "slackSend",
                                            "arguments": [
                                                {
                                                    "key": "color",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "good"
                                                    }
                                                },
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"STARTED: ${JOB_NAME} ${BUILD_NUMBER} ${BUILD_URL}\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Validate Poms",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "retry",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": 3
                                            },
                                            "children": [
                                                {
                                                    "name": "checkout",
                                                    "arguments": [
                                                        {
                                                            "key": "scm",
                                                            "value": {
                                                                "isLiteral": false,
                                                                "value": "${scm}"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "withMaven",
                                            "arguments": [
                                                {
                                                    "key": "maven",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "M3"
                                                    }
                                                },
                                                {
                                                    "key": "jdk",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "jdk8-latest"
                                                    }
                                                },
                                                {
                                                    "key": "globalMavenSettingsConfig",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "default-global-settings"
                                                    }
                                                },
                                                {
                                                    "key": "mavenSettingsConfig",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "codice-maven-settings"
                                                    }
                                                },
                                                {
                                                    "key": "mavenOpts",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "${LINUX_MVN_RANDOM}"
                                                    }
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "mvn clean install -DskipStatic=true -DskipTests=true -pl $POMFIX"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "agent": {
                                "type": "label",
                                "argument": {
                                    "isLiteral": true,
                                    "value": "linux-small"
                                }
                            }
                        },
                        {
                            "name": "Incremental Build",
                            "branches": [
                                {
                                    "name": "linux",
                                    "steps": [
                                        {
                                            "name": "node",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "linux-large"
                                            },
                                            "children": [
                                                {
                                                    "name": "retry",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": 3
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "checkout",
                                                            "arguments": [
                                                                {
                                                                    "key": "scm",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${scm}"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "timeout",
                                                    "arguments": [
                                                        {
                                                            "key": "time",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": 3
                                                            }
                                                        },
                                                        {
                                                            "key": "unit",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "HOURS"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "withMaven",
                                                            "arguments": [
                                                                {
                                                                    "key": "maven",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "Maven 3.3.9"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "globalMavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "default-global-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "codice-maven-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenOpts",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "options",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${[artifactsPublisher(disabled: true), dependenciesFingerprintPublisher(disabled: true, includeScopeCompile: false, includeScopeProvided: false, includeScopeRuntime: false, includeSnapshotVersions: false)]}"
                                                                    }
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn install -pl !$DOCS -DskipStatic=true -DskipTests=true -T 1C"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn clean install -B -T 1C -pl !$ITESTS -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/$CHANGE_TARGET"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn install -B -pl $ITESTS -nsu"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "windows",
                                    "steps": [
                                        {
                                            "name": "node",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "server-2016-large"
                                            },
                                            "children": [
                                                {
                                                    "name": "bat",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "git config --system core.longpaths true"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "retry",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": 3
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "checkout",
                                                            "arguments": [
                                                                {
                                                                    "key": "scm",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${scm}"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "timeout",
                                                    "arguments": [
                                                        {
                                                            "key": "time",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": 3
                                                            }
                                                        },
                                                        {
                                                            "key": "unit",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "HOURS"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "withMaven",
                                                            "arguments": [
                                                                {
                                                                    "key": "maven",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "M35"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "jdk",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "jdk8-latest"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "globalMavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "default-global-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "codice-maven-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenOpts",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "${LARGE_MVN_OPTS}"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "options",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${[artifactsPublisher(disabled: true), dependenciesFingerprintPublisher(disabled: true, includeScopeCompile: false, includeScopeProvided: false, includeScopeRuntime: false, includeSnapshotVersions: false)]}"
                                                                    }
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "name": "bat",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn install -pl !%DOCS% -DskipStatic=true -DskipTests=true -T 1C"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "bat",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn clean install -B -T 1C -pl !%ITESTS% -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/%CHANGE_TARGET%"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "bat",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn install -B -pl %ITESTS% -nsu"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "allOf",
                                        "children": [
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "env.CHANGE_ID != null"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "env.CHANGE_TARGET != null"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Full Build",
                            "branches": [
                                {
                                    "name": "linux",
                                    "steps": [
                                        {
                                            "name": "node",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "linux-large"
                                            },
                                            "children": [
                                                {
                                                    "name": "retry",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": 3
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "checkout",
                                                            "arguments": [
                                                                {
                                                                    "key": "scm",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${scm}"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "timeout",
                                                    "arguments": [
                                                        {
                                                            "key": "time",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": 3
                                                            }
                                                        },
                                                        {
                                                            "key": "unit",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "HOURS"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "withMaven",
                                                            "arguments": [
                                                                {
                                                                    "key": "maven",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "Maven 3.3.9"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "globalMavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "default-global-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "codice-maven-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenOpts",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}"
                                                                    }
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn clean install -B -T 1C -pl !$ITESTS"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn install -B -pl $ITESTS -nsu"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "windows",
                                    "steps": [
                                        {
                                            "name": "node",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "server-2016-large"
                                            },
                                            "children": [
                                                {
                                                    "name": "bat",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "git config --system core.longpaths true"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "retry",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": 3
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "checkout",
                                                            "arguments": [
                                                                {
                                                                    "key": "scm",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${scm}"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "timeout",
                                                    "arguments": [
                                                        {
                                                            "key": "time",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": 3
                                                            }
                                                        },
                                                        {
                                                            "key": "unit",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "HOURS"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "withMaven",
                                                            "arguments": [
                                                                {
                                                                    "key": "maven",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "M35"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "jdk",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "jdk8-latest"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "globalMavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "default-global-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenSettingsConfig",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "codice-maven-settings"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "mavenOpts",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "${LARGE_MVN_OPTS}"
                                                                    }
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "name": "bat",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn clean install -B -T 1C -pl !%ITESTS%"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "bat",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "mvn install -B -pl %ITESTS% -nsu"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "expression",
                                        "arguments": [
                                            {
                                                "key": "scriptBlock",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "env.CHANGE_ID == null"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Security Analysis",
                            "branches": [
                                {
                                    "name": "owasp",
                                    "steps": [
                                        {
                                            "name": "node",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "linux-large"
                                            },
                                            "children": [
                                                {
                                                    "name": "retry",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": 3
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "checkout",
                                                            "arguments": [
                                                                {
                                                                    "key": "scm",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${scm}"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "withMaven",
                                                    "arguments": [
                                                        {
                                                            "key": "maven",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "M35"
                                                            }
                                                        },
                                                        {
                                                            "key": "jdk",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "jdk8-latest"
                                                            }
                                                        },
                                                        {
                                                            "key": "globalMavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "default-global-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "codice-maven-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenOpts",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "script",
                                                            "arguments": [
                                                                {
                                                                    "key": "scriptBlock",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "if (env.CHANGE_ID == null) {\n                                        //sh 'mvn install -q -B -Powasp -DskipTests=true -DskipStatic=true -pl !$DOCS'\n                                        echo 'full owasp scan'\n                                    } else {\n                                        //sh 'mvn install -q -B -Powasp -DskipTests=true -DskipStatic=true -pl !$DOCS -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/$CHANGE_TARGET'\n                                        echo 'pr owasp scan'\n                                    }"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "nodeJsSecurity",
                                    "steps": [
                                        {
                                            "name": "node",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "linux-small"
                                            },
                                            "children": [
                                                {
                                                    "name": "retry",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": 3
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "checkout",
                                                            "arguments": [
                                                                {
                                                                    "key": "scm",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${scm}"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "script",
                                                    "arguments": [
                                                        {
                                                            "key": "scriptBlock",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "def packageFiles = findFiles(glob: '**/package.json')\n                                for (int i = 0; i < packageFiles.size(); i++) {\n                                    dir(packageFiles[i].path.split('package.json')[0]) {\n                                        def packageFile = readJSON file: 'package.json'\n                                        if (packageFile.scripts =~ /.*webpack.*/ || packageFile.containsKey(\"browserify\")) {\n                                            nodejs(configId: 'npmrc-default', nodeJSInstallationName: 'nodejs') {\n                                                echo \"Scanning ${packageFiles[i].path}\"\n                                                //sh 'nsp check'\n                                                echo 'nsp scan'\n                                            }\n                                        }\n                                    }\n                                }"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Deploy",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "withMaven",
                                            "arguments": [
                                                {
                                                    "key": "maven",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "M3"
                                                    }
                                                },
                                                {
                                                    "key": "jdk",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "jdk8-latest"
                                                    }
                                                },
                                                {
                                                    "key": "globalMavenSettingsConfig",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "default-global-settings"
                                                    }
                                                },
                                                {
                                                    "key": "mavenSettingsConfig",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "codice-maven-settings"
                                                    }
                                                },
                                                {
                                                    "key": "mavenOpts",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "${LINUX_MVN_RANDOM}"
                                                    }
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "name": "retry",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": 3
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "checkout",
                                                            "arguments": [
                                                                {
                                                                    "key": "scm",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${scm}"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "mvn javadoc:aggregate -DskipStatic=true -DskipTests=true"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "mvn deploy -T 1C -DskipStatic=true -DskipTests=true -DretryFailedDeploymentCount=10"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "agent": {
                                "type": "label",
                                "argument": {
                                    "isLiteral": true,
                                    "value": "linux-small"
                                }
                            },
                            "when": {
                                "conditions": [
                                    {
                                        "name": "allOf",
                                        "children": [
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "env.CHANGE_ID == null"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "env.BRANCH_NAME ==~ /((?:\\d*\\.)?\\d*\\.x|master)/"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "environment",
                                                "arguments": [
                                                    {
                                                        "key": "name",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "JENKINS_ENV"
                                                        }
                                                    },
                                                    {
                                                        "key": "value",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "prod"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Quality Analysis",
                            "branches": [
                                {
                                    "name": "sonarqube",
                                    "steps": [
                                        {
                                            "name": "node",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "linux-large"
                                            },
                                            "children": [
                                                {
                                                    "name": "retry",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": 3
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "checkout",
                                                            "arguments": [
                                                                {
                                                                    "key": "scm",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${scm}"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "withMaven",
                                                    "arguments": [
                                                        {
                                                            "key": "maven",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "M35"
                                                            }
                                                        },
                                                        {
                                                            "key": "jdk",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "jdk8-latest"
                                                            }
                                                        },
                                                        {
                                                            "key": "globalMavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "default-global-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenSettingsConfig",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "codice-maven-settings"
                                                            }
                                                        },
                                                        {
                                                            "key": "mavenOpts",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}"
                                                            }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                            "name": "withCredentials",
                                                            "arguments": {
                                                                "isLiteral": false,
                                                                "value": "${[string(credentialsId: 'SonarQubeGithubToken', variable: 'SONARQUBE_GITHUB_TOKEN'), string(credentialsId: 'sonarqube-token', variable: 'SONAR_TOKEN')]}"
                                                            },
                                                            "children": [
                                                                {
                                                                    "name": "script",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "scriptBlock",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "if (env.CHANGE_ID == null) {\n                                            //sh 'mvn -q -B -Dfindbugs.skip=true -Dcheckstyle.skip=true org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar -Dsonar.host.url=https://sonarqube.com -Dsonar.login=$SONAR_TOKEN  -Dsonar.organization=codice -Dsonar.projectKey=ddf -Dsonar.coverage.exclusions=$COVERAGE_EXCLUSIONS -pl !$DOCS,!$ITESTS'\n                                            echo 'full scan'\n                                        } else {\n                                            //sh 'mvn -q -B -Dfindbugs.skip=true -Dcheckstyle.skip=true org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar -Dsonar.github.pullRequest=${CHANGE_ID} -Dsonar.github.oauth=${SONARQUBE_GITHUB_TOKEN} -Dsonar.analysis.mode=preview -Dsonar.host.url=https://sonarqube.com -Dsonar.login=$SONAR_TOKEN -Dsonar.organization=codice -Dsonar.projectKey=ddf -Dsonar.coverage.exclusions=$COVERAGE_EXCLUSIONS -pl !$DOCS,!$ITESTS -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/$CHANGE_TARGET'\n                                            echo 'pr scan'\n                                        }"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "coverity",
                                    "steps": [
                                        {
                                            "name": "node",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "linux-medium"
                                            },
                                            "children": [
                                                {
                                                    "name": "script",
                                                    "arguments": [
                                                        {
                                                            "key": "scriptBlock",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "if (env.BRANCH_NAME != 'master') {\n                                    echo \"Coverity is only run on master\"\n                                } else {\n                                    retry(3) {\n                                        checkout scm\n                                    }\n                                    withMaven(maven: 'M35', jdk: 'jdk8-latest', globalMavenSettingsConfig: 'default-global-settings', mavenSettingsConfig: 'codice-maven-settings', mavenOpts: '${LINUX_MVN_RANDOM}') {\n                                        withCredentials([string(credentialsId: 'ddf-coverity-token', variable: 'COVERITY_TOKEN')]) {\n                                            withEnv([\"PATH=${tool 'coverity-linux'}/bin:${env.PATH}\"]) {\n                                                configFileProvider([configFile(fileId: 'coverity-maven-settings', replaceTokens: true, variable: 'MAVEN_SETTINGS')]) {\n                                                    echo sh(returnStdout: true, script: 'env')\n                                                    //sh 'cov-build --dir cov-int mvn -DskipTests=true -DskipStatic=true install -pl !$DOCS --settings $MAVEN_SETTINGS'\n                                                    //sh 'tar czvf ddf.tgz cov-int'\n                                                    //sh 'curl --form token=$COVERITY_TOKEN --form email=cmp-security-team@connexta.com --form file=@ddf.tgz --form version=\"master\" --form description=\"Description: DDF CI Build\" https://scan.coverity.com/builds?project=codice%2Fddf'\n                                                    echo 'coverity scan'\n                                                }\n                                            }\n                                        }\n                                    }\n                                }"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "codecov",
                                    "steps": [
                                        {
                                            "name": "node",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "linux-large"
                                            },
                                            "children": [
                                                {
                                                    "name": "script",
                                                    "arguments": [
                                                        {
                                                            "key": "scriptBlock",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "retry(3) {\n                                    checkout scm\n                                }\n                                withMaven(maven: 'M35', jdk: 'jdk8-latest', globalMavenSettingsConfig: 'default-global-settings', mavenSettingsConfig: 'codice-maven-settings', mavenOpts: '${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}') {\n                                    withCredentials([string(credentialsId: 'DDF_CodeCov', variable: 'DDF_CODECOV_TOKEN')]) {\n                                        //sh 'mvn clean install -B -T 1C -pl !$ITESTS'\n                                        //sh 'curl -s https://codecov.io/bash | bash -s - -t ${DDF_CODECOV_TOKEN}'\n                                        echo 'codecov scan'\n                                    }\n                                }"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "post": {
                        "conditions": [
                            {
                                "condition": "success",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "slackSend",
                                            "arguments": [
                                                {
                                                    "key": "color",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "good"
                                                    }
                                                },
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"SUCCESS: ${JOB_NAME} ${BUILD_NUMBER}\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            {
                                "condition": "failure",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "slackSend",
                                            "arguments": [
                                                {
                                                    "key": "color",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "#ea0017"
                                                    }
                                                },
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"FAILURE: ${JOB_NAME} ${BUILD_NUMBER}. See the results here: ${BUILD_URL}\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            {
                                "condition": "unstable",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "slackSend",
                                            "arguments": [
                                                {
                                                    "key": "color",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "#ffb600"
                                                    }
                                                },
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"UNSTABLE: ${JOB_NAME} ${BUILD_NUMBER}. See the results here: ${BUILD_URL}\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "environment": [
                        {
                            "key": "DOCS",
                            "value": {
                                "isLiteral": true,
                                "value": "distribution/docs"
                            }
                        },
                        {
                            "key": "ITESTS",
                            "value": {
                                "isLiteral": true,
                                "value": "distribution/test/itests/test-itests-ddf"
                            }
                        },
                        {
                            "key": "POMFIX",
                            "value": {
                                "isLiteral": true,
                                "value": "libs/libs-pomfix,libs/libs-pomfix-run"
                            }
                        },
                        {
                            "key": "LARGE_MVN_OPTS",
                            "value": {
                                "isLiteral": true,
                                "value": "-Xmx8192M -Xss128M -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC "
                            }
                        },
                        {
                            "key": "LINUX_MVN_RANDOM",
                            "value": {
                                "isLiteral": true,
                                "value": "-Djava.security.egd=file:/dev/./urandom"
                            }
                        },
                        {
                            "key": "COVERAGE_EXCLUSIONS",
                            "value": {
                                "isLiteral": true,
                                "value": "**/test/**,**/itests/**,**/*Test*,**/sdk/**,**/*.js,**/node_modules/**,**/jaxb/,**/wsdl/,**/nces/sws/**,**/*.adoc,**/*.txt,**/*.xml"
                            }
                        }
                    ],
                    "agent": {
                        "type": "none"
                    },
                    "options": {
                        "options": [
                            {
                                "name": "buildDiscarder",
                                "arguments": [
                                    {
                                        "name": "logRotator",
                                        "arguments": [
                                            {
                                                "key": "numToKeepStr",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "25"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "name": "disableConcurrentBuilds",
                                "arguments": []
                            },
                            {
                                "name": "timestamps",
                                "arguments": []
                            }
                        ]
                    },
                    "triggers": {
                        "triggers": [
                            {
                                "name": "cron",
                                "arguments": [
                                    {
                                        "isLiteral": false,
                                        "value": "${BRANCH_NAME == \"master\" ? \"H H(17-19) * * *\" : \"\"}"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "BigWii/https-git-wip-us.apache.org-repos-asf-hbase",
            "repo_url": "https://github.com/BigWii/https-git-wip-us.apache.org-repos-asf-hbase",
            "html_url_jenkinsfile": "https://github.com/BigWii/https-git-wip-us.apache.org-repos-asf-hbase/blob/5a071dbe2bbcbc22ec52fea0426637905f6c37bb/dev-support/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/131713713/git/blobs/821d20e6a89e101659cee1526ef83de6b89fb996",
            "jenkins_pipeline": [
                {
                    "error": [
                        "Tool type \"maven\" does not have an install of \"Maven (latest)\" configured - did you mean \"Jenkins_maven\"? @ line 446, column 19.",
                        "Tool type \"jdk\" does not have an install of \"JDK 1.8 (latest)\" configured - did you mean \"null\"? @ line 448, column 17."
                    ]
                }
            ]
        },
        {
            "full_repo_name": "dequanchen/hbase-7129",
            "repo_url": "https://github.com/dequanchen/hbase-7129",
            "html_url_jenkinsfile": "https://github.com/dequanchen/hbase-7129/blob/64061f896fe21512504e3886a400759e88b519da/dev-support/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/126492499/git/blobs/e8bf8c9f80a848abecfefdeb57674f5d9ad80f55",
            "jenkins_pipeline": [
                {
                    "error": [
                        "Tool type \"maven\" does not have an install of \"Maven (latest)\" configured - did you mean \"Jenkins_maven\"? @ line 409, column 19.",
                        "Tool type \"jdk\" does not have an install of \"JDK 1.8 (latest)\" configured - did you mean \"null\"? @ line 411, column 17."
                    ]
                }
            ]
        },
        {
            "full_repo_name": "d3ledger/notary",
            "repo_url": "https://github.com/d3ledger/notary",
            "html_url_jenkinsfile": "https://github.com/d3ledger/notary/blob/0ff8e0b61bb234bf4e0781b07e597afd9d4d0c21/vendor/iroha/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/129921969/git/blobs/6a6d71bf16041b310189147d56e174a5ba4db63d",
            "jenkins_pipeline": [
                {
                    "error": "Invalid trigger type \"parameterizedCron\". Valid trigger types: [upstream, cron, bitbucketPush, gitlab, snapshotDependencies, githubPush, pollSCM] @ line 46, column 9."
                }
            ]
        },
        {
            "full_repo_name": "tyvision/iroha-feature-tests",
            "repo_url": "https://github.com/tyvision/iroha-feature-tests",
            "html_url_jenkinsfile": "https://github.com/tyvision/iroha-feature-tests/blob/48277278d4164c031b46c1229a870800e16d5505/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/118324276/git/blobs/7d854347142ece7602bd2cdcc626f42f14b0ba89",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Build Debug",
                            "parallel": [
                                {
                                    "name": "Linux",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "script",
                                                    "arguments": [
                                                        {
                                                            "key": "scriptBlock",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "sh \"docker network create ${env.IROHA_NETWORK}\"\n\n                            def p_c = docker.image('postgres:9.5').run(\"\"\n                                + \" -e POSTGRES_USER=${env.IROHA_POSTGRES_USER}\"\n                                + \" -e POSTGRES_PASSWORD=${env.IROHA_POSTGRES_PASSWORD}\"\n                                + \" --name ${env.IROHA_POSTGRES_HOST}\"\n                                + \" --network=${env.IROHA_NETWORK}\")\n\n                            def r_c = docker.image('redis:3.2.8').run(\"\"\n                                + \" --name ${env.IROHA_REDIS_HOST}\"\n                                + \" --network=${env.IROHA_NETWORK}\")\n\n                            docker.image(\"${env.DOCKER_IMAGE}\").inside(\"\"\n                                + \" -e IROHA_POSTGRES_HOST=${env.IROHA_POSTGRES_HOST}\"\n                                + \" -e IROHA_POSTGRES_PORT=${env.IROHA_POSTGRES_PORT}\" \n                                + \" -e IROHA_POSTGRES_USER=${env.IROHA_POSTGRES_USER}\" \n                                + \" -e IROHA_POSTGRES_PASSWORD=${env.IROHA_POSTGRES_PASSWORD}\"\n                                + \" -e IROHA_REDIS_HOST=${env.IROHA_REDIS_HOST}\" \n                                + \" -e IROHA_REDIS_PORT=${env.IROHA_REDIS_PORT}\" \n                                + \" --network=${env.IROHA_NETWORK}\") {\n\n                                def scmVars = checkout scm\n                                env.IROHA_VERSION = \"0x${scmVars.GIT_COMMIT}\"\n                                env.IROHA_HOME = \"/opt/iroha\"\n                                env.IROHA_BUILD = \"/opt/iroha/build\"\n                                env.IROHA_RELEASE = \"${env.IROHA_HOME}/docker/release\"\n\n                                sh \"\"\"\n                                    ccache --version\n                                    ccache --show-stats\n                                    ccache --zero-stats\n                                    ccache --max-size=1G\n                                \"\"\"\n                                sh \"\"\"\n                                    cmake \\\n                                      -DCOVERAGE=ON \\\n                                      -DTESTING=ON \\\n                                      -H. \\\n                                      -Bbuild \\\n                                      -DCMAKE_BUILD_TYPE=${params.BUILD_TYPE} \\\n                                      -DIROHA_VERSION=${env.IROHA_VERSION}\n                                \"\"\"\n                                sh \"cmake --build build -- -j${params.PARALLELISM}\"\n                                sh \"ccache --cleanup\"\n                                sh \"ccache --show-stats\"\n\n                                sh \"cmake --build build --target test\"\n                                sh \"cmake --build build --target gcovr\"\n                                sh \"cmake --build build --target cppcheck\"\n\n                                // Dockerize\n                                \n                                def dockerize = load \".jenkinsci/dockerize.groovy\"\n                                dockerize.doDockerize()\n                                \n                                // Codecov\n                                sh \"bash <(curl -s https://codecov.io/bash) -f build/reports/gcovr.xml -t ${CODECOV_TOKEN} || echo 'Codecov did not collect coverage reports'\"\n\n                                // Sonar\n                                if (env.CHANGE_ID != null) {\n                                    sh \"\"\"\n                                        sonar-scanner \\\n                                            -Dsonar.github.disableInlineComments \\\n                                            -Dsonar.github.repository='hyperledger/iroha' \\\n                                            -Dsonar.analysis.mode=preview \\\n                                            -Dsonar.login=${SONAR_TOKEN} \\\n                                            -Dsonar.projectVersion=${BUILD_TAG} \\\n                                            -Dsonar.github.oauth=${SORABOT_TOKEN} \\\n                                            -Dsonar.github.pullRequest=${CHANGE_ID}\n                                    \"\"\"\n                                }\n\n                                //stash(allowEmpty: true, includes: 'build/compile_commands.json', name: 'Compile commands')\n                                //stash(allowEmpty: true, includes: 'build/reports/', name: 'Reports')\n                                archive(includes: 'build/bin/,compile_commands.json')\n                            }"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "when": {
                                        "conditions": [
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "return params.Linux"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ARM",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "echo ARM build will be running there"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "when": {
                                        "conditions": [
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "return params.ARM"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "MacOS",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "MacOS build will be running there"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "when": {
                                        "conditions": [
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "return  params.MacOS"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "expression",
                                        "arguments": [
                                            {
                                                "key": "scriptBlock",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "params.BUILD_TYPE == 'Debug'"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Build Release",
                            "parallel": [
                                {
                                    "name": "Linux",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "script",
                                                    "arguments": [
                                                        {
                                                            "key": "scriptBlock",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "def scmVars = checkout scm\n                            env.IROHA_VERSION = \"0x${scmVars.GIT_COMMIT}\""
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "\n                            ccache --version\n                            ccache --show-stats\n                            ccache --zero-stats\n                            ccache --max-size=1G\n                        "
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": false,
                                                                "value": "\"\"\"\n                            cmake \\\n                              -DCOVERAGE=OFF \\\n                              -DTESTING=OFF \\\n                              -H. \\\n                              -Bbuild \\\n                              -DCMAKE_BUILD_TYPE=${params.BUILD_TYPE} \\\n                              -DPACKAGE_DEB=ON \\\n                              -DPACKAGE_TGZ=ON \\\n                              -DIROHA_VERSION=${IROHA_VERSION}\n                        \"\"\""
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": false,
                                                                "value": "\"cmake --build build -- -j${params.PARALLELISM}\""
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "ccache --cleanup"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "ccache --show-stats"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": false,
                                                                "value": "\"\"\"\n                        mv build/iroha-{*,linux}.deb && mv build/iroha-{*,linux}.tar.gz\n                        echo ${IROHA_VERSION} > version.txt\n                        \"\"\""
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "archive",
                                                    "arguments": [
                                                        {
                                                            "key": "includes",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "build/iroha-linux.deb,build/iroha-linux.tar.gz,build/version.txt"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "when": {
                                        "conditions": [
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "return params.Linux"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ARM",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "echo ARM build will be running there"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "when": {
                                        "conditions": [
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "return params.ARM"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "MacOS",
                                    "branches": [
                                        {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "MacOS build will be running there"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "when": {
                                        "conditions": [
                                            {
                                                "name": "expression",
                                                "arguments": [
                                                    {
                                                        "key": "scriptBlock",
                                                        "value": {
                                                            "isLiteral": true,
                                                            "value": "return params.MacOS"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "expression",
                                        "arguments": [
                                            {
                                                "key": "scriptBlock",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "params.BUILD_TYPE == 'Release'"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "SonarQube",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"\"\"\n                    if [ -n ${SONAR_TOKEN} ] && \\\n                      [ -n ${BUILD_TAG} ] && \\\n                      [ -n ${BRANCH_NAME} ]; then\n                      sonar-scanner \\\n                        -Dsonar.login=${SONAR_TOKEN} \\\n                        -Dsonar.projectVersion=${BUILD_TAG} \\\n                        -Dsonar.branch=${BRANCH_NAME}\n                    else\n                      echo 'required env vars not found'\n                    fi\n                \"\"\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "expression",
                                        "arguments": [
                                            {
                                                "key": "scriptBlock",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "params.BUILD_TYPE == 'Release'"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    ],
                    "post": {
                        "conditions": [
                            {
                                "condition": "always",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "sh \"\"\"\n                  docker stop $IROHA_POSTGRES_HOST $IROHA_REDIS_HOST\n                  docker rm $IROHA_POSTGRES_HOST $IROHA_REDIS_HOST\n                  docker network rm $IROHA_NETWORK\n                \"\"\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "environment": [
                        {
                            "key": "SORABOT_TOKEN",
                            "value": {
                                "name": "credentials",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "SORABOT_TOKEN"
                                    }
                                ]
                            }
                        },
                        {
                            "key": "SONAR_TOKEN",
                            "value": {
                                "name": "credentials",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "SONAR_TOKEN"
                                    }
                                ]
                            }
                        },
                        {
                            "key": "CODECOV_TOKEN",
                            "value": {
                                "name": "credentials",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "CODECOV_TOKEN"
                                    }
                                ]
                            }
                        },
                        {
                            "key": "DOCKERHUB",
                            "value": {
                                "name": "credentials",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "DOCKERHUB"
                                    }
                                ]
                            }
                        },
                        {
                            "key": "DOCKER_IMAGE",
                            "value": {
                                "isLiteral": true,
                                "value": "hyperledger/iroha-docker-develop:v1"
                            }
                        },
                        {
                            "key": "IROHA_NETWORK",
                            "value": {
                                "isLiteral": false,
                                "value": "\"iroha-${GIT_COMMIT}\""
                            }
                        },
                        {
                            "key": "IROHA_POSTGRES_HOST",
                            "value": {
                                "isLiteral": false,
                                "value": "\"pg-${GIT_COMMIT}\""
                            }
                        },
                        {
                            "key": "IROHA_POSTGRES_USER",
                            "value": {
                                "isLiteral": false,
                                "value": "\"pg-user-${GIT_COMMIT}\""
                            }
                        },
                        {
                            "key": "IROHA_POSTGRES_PASSWORD",
                            "value": {
                                "isLiteral": false,
                                "value": "\"${GIT_COMMIT}\""
                            }
                        },
                        {
                            "key": "IROHA_REDIS_HOST",
                            "value": {
                                "isLiteral": false,
                                "value": "\"redis-${GIT_COMMIT}\""
                            }
                        },
                        {
                            "key": "IROHA_POSTGRES_PORT",
                            "value": {
                                "isLiteral": true,
                                "value": 5432
                            }
                        },
                        {
                            "key": "IROHA_REDIS_PORT",
                            "value": {
                                "isLiteral": true,
                                "value": 6379
                            }
                        }
                    ],
                    "agent": {
                        "type": "label",
                        "argument": {
                            "isLiteral": true,
                            "value": "docker_1"
                        }
                    }
                }
            }
        },
        {
            "full_repo_name": "MunKongChan/dcep-sample-api",
            "repo_url": "https://github.com/MunKongChan/dcep-sample-api",
            "html_url_jenkinsfile": "https://github.com/MunKongChan/dcep-sample-api/blob/30f0b1dc1d92c522155d0ae5f22312f439687e59/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/131815568/git/blobs/7c0a34c7c50d0b41876d01e7eaad693cf2968769",
            "jenkins_pipeline": [
                {
                    "error": [
                        "Tool type \"maven\" does not have an install of \"maven\" configured - did you mean \"Jenkins_maven\"? @ line 7, column 15.",
                        "Tool type \"jdk\" does not have an install of \"java9\" configured - did you mean \"null\"? @ line 8, column 13."
                    ]
                }
            ]
        },
        {
            "full_repo_name": "hyperledger/iroha",
            "repo_url": "https://github.com/hyperledger/iroha",
            "html_url_jenkinsfile": "https://github.com/hyperledger/iroha/blob/ed665deb84aba285e2dfc217188bba8a9cc5ce2e/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/67340575/git/blobs/6a6d71bf16041b310189147d56e174a5ba4db63d",
            "jenkins_pipeline": [
                {
                    "error": "Invalid trigger type \"parameterizedCron\". Valid trigger types: [upstream, cron, bitbucketPush, gitlab, snapshotDependencies, githubPush, pollSCM] @ line 46, column 9."
                }
            ]
        },
        {
            "full_repo_name": "cvarjao/openshift-spring-petclinic",
            "repo_url": "https://github.com/cvarjao/openshift-spring-petclinic",
            "html_url_jenkinsfile": "https://github.com/cvarjao/openshift-spring-petclinic/blob/8379adf3beffd64fe98ca4387c405bb0b24f53d2/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/124612587/git/blobs/b4f6b016b53738a86ae868d1e8b4df3d9f4bec65",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Prepare",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "milestone",
                                            "arguments": [
                                                {
                                                    "key": "ordinal",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": 1
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "sayHello('World')\n                killOldBuilds()"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "checkout",
                                            "arguments": [
                                                {
                                                    "key": "scm",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${scm}"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "git show-ref --head"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "git show-ref --head --dereference"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "env"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${'Building Branch: '+env.BRANCH_NAME}"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${'Build Number: '+env.BUILD_NUMBER}"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "${'CHANGE_ID: '+env.CHANGE_ID}"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"CHANGE_TARGET: ${env.CHANGE_TARGET}\""
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"JOB_NAME: ${env.JOB_NAME}\""
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"JOB_BASE_NAME: ${env.JOB_BASE_NAME}\""
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "gitCommitId = sh(returnStdout: true, script: 'git rev-parse HEAD').trim()\n                isPullRequest=(env.CHANGE_ID != null && env.CHANGE_ID.trim().length()>0)\n\n                echo \"gitCommitId:${gitCommitId}\"\n                echo \"isPullRequest:${isPullRequest}\"\n\n\n                gitRepoUrl = scm.getUserRemoteConfigs()[0].getUrl()\n                def envName = null;\n\n\n                if (isPullRequest){\n                  pullRequestNumber=env.CHANGE_ID\n                  gitBranchRemoteRef=\"refs/pull/${pullRequestNumber}/head\";\n                  buildBranchName = env.BRANCH_NAME;\n                  sh \"git remote -v\"\n                  sh \"git ls-remote origin refs/pull/${pullRequestNumber}/*\"\n                }else{\n                  buildBranchName = env.BRANCH_NAME;\n                  resourceBuildNamePrefix = \"-dev\";\n                }\n\n                echo \"gitRepoUrl:${gitRepoUrl}\"\n                echo \"appName:${appName}\"\n                echo \"appId:${appId}\"\n                echo \"buildBranchName:${buildBranchName}\"\n                echo \"scm.getBranches():${scm.getBranches()}\"\n                echo \"scm.getKey():${scm.getKey()}\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "agent": {
                                "type": "any"
                            }
                        },
                        {
                            "name": "GitHub Deployment (Start)",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "ghDeployment(gitCommitId, \"PREVIEW\")"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "agent": {
                                "type": "any"
                            },
                            "when": {
                                "conditions": [
                                    {
                                        "name": "expression",
                                        "arguments": [
                                            {
                                                "key": "scriptBlock",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "return true"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Build",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "def bcPrefix=appName;\n                    def bcSuffix='-dev';\n                    def buildRefBranchName=gitBranchRemoteRef;\n\n                    if (isPullRequest){\n                        buildEnvName = \"pr-${pullRequestNumber}\"\n                        bcSuffix=\"-pr-${pullRequestNumber}\";\n                    }else{\n                        buildEnvName = 'dev'\n                    }\n\n                    def bcSelector=['app-name':appName, 'env-name':buildEnvName];\n\n                    openshift.withCluster() {\n                        echo \"Waiting for all builds to complete/cancel\"\n                        openshift.selector( 'bc', bcSelector).cancelBuild();\n\n                        openshift.selector( 'builds', bcSelector).watch {\n                          if ( it.count() == 0 ) return true\n                          def allDone = true\n                          it.withEach {\n                              def buildModel = it.object()\n                              //echo \"${it.name()}:status.phase: ${it.object().status.phase}\"\n                              if ( it.object().status.phase != \"Complete\" &&  it.object().status.phase != \"Failed\") {\n                                  allDone = false\n                              }\n                          }\n                          return allDone;\n                        }\n\n                        //create or patch DCs\n                        def models = openshift.process(\"-f\", \"openshift.bc.json\",\n                                \"-p\", \"APP_NAME=${appName}\",\n                                \"-p\", \"ENV_NAME=${buildEnvName}\",\n                                \"-p\", \"NAME_PREFIX=${bcPrefix}\",\n                                \"-p\", \"NAME_SUFFIX=${bcSuffix}\",\n                                \"-p\", \"GIT_REPO_URL=${gitRepoUrl}\")\n                        echo \"The template will create/update ${models.size()} objects\"\n                        for ( o in models ) {\n                            o.metadata.labels[ \"app\" ] = \"${appName}-${buildEnvName}\"\n                            /*\n                            def sel=openshift.selector(\"${o.kind}/${o.metadata.name}\");\n                            if (sel.count()==0){\n                                echo \"Creating '${o.kind}/${o.metadata.name}\"\n                                openshift.create([o]);\n                            }else{\n                                echo \"Patching '${o.kind}/${o.metadata.name}\"\n                                openshift.apply(o);\n                            }\n                            */\n\n                        }\n                        openshift.apply(models);\n\n                        def gitAppCommitId = sh(returnStdout: true, script: 'git rev-list -1 HEAD -- spring-petclinic').trim()\n                        echo \"gitAppCommitId:${gitAppCommitId}\"\n\n                        def buildSelector = openshift.selector( 'builds', bcSelector + ['commit-id':\"${gitAppCommitId}\"]);\n                        if (buildSelector.count()==0){\n                            echo \"Starting new build\"\n                            buildSelector = openshift.selector( 'bc', bcSelector).narrow('bc').startBuild(\"--commit=${buildRefBranchName}\")\n                            echo \"New build started - ${buildSelector.name()}\"\n                            buildSelector.label(['commit-id':\"${gitAppCommitId}\"], \"--overwrite\")\n                            buildSelector.logs('-f');\n\n                            openshift.selector(\"${buildSelector.name()}\").watch {\n                                def build=it.object();\n                                return !\"Running\".equalsIgnoreCase(build.status.phase)\n                            }\n\n                            def build=openshift.selector(\"${buildSelector.name()}\").object();\n                            if (!\"Complete\".equalsIgnoreCase(build.status.phase)){\n                                error \"Build '${buildSelector.name()}' did not successfully complete (${build.status.phase})\"\n                            }\n                            echo \"OutputImageDigest: '${build.status.output.to.imageDigest}'\"\n                            echo \"outputDockerImageReference: '${build.status.outputDockerImageReference}'\"\n                        }else{\n                            echo \"Skipping new build. Reusing '${buildSelector.name()}'\"\n                            def build=buildSelector.object()\n                            echo \"OutputImageDigest: '${build.status.output.to.imageDigest}'\"\n                            echo \"outputDockerImageReference: '${build.status.outputDockerImageReference}'\"\n                        }\n\n\n                        //TODO: Re-add build triggers (ImageChange, ConfigurationChange)\n                    }"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "agent": {
                                "type": "any"
                            },
                            "when": {
                                "conditions": [
                                    {
                                        "name": "expression",
                                        "arguments": [
                                            {
                                                "key": "scriptBlock",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "return false"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "deploy - DEV",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "Deploying"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "def dcPrefix=appName;\n                    def dcSuffix='-dev';\n                    def envName=\"dev\"\n\n\n\n                    if (isPullRequest){\n                        envName = \"pr-${pullRequestNumber}\"\n                        dcSuffix=\"-pr-${pullRequestNumber}\";\n                    }\n\n                    def dcSelector=['app-name':appName, 'env-name':envName];\n\n                    openshift.withCluster() {\n                       def buildProjectName=\"${openshift.project()}\"\n                       def buildImageStreams=[:];\n                       openshift.selector( 'is', ['app-name':appName, 'env-name':buildEnvName]).withEach {\n                         buildImageStreams[\"${it.object().metadata.name}\"]=true;\n                       }\n\n                       echo \"buildImageStreams:${buildImageStreams}\"\n                    openshift.withCredentials( 'jenkins-deployer-dev.token' ) {\n                    openshift.withProject( 'csnr-devops-lab-deploy' ) {\n                        def whoamiResult = openshift.raw( 'whoami' )\n                        def models = [];\n                        echo \"WhoAmI:${whoamiResult.out}\"\n\n                        //Database\n                        /*\n                        models = openshift.process(\n                            'openshift//postgresql-ephemeral',\n                            \"-p\", \"DATABASE_SERVICE_NAME=${dcPrefix}-pgsql${dcSuffix}\",\n                            '-p', \"POSTGRESQL_DATABASE=petclinic\"\n                        )\n                        echo \"The 'openshift/postgresql' template will create/update ${models.size()} objects\"\n                        */\n                      \n                        models.addAll(openshift.process(\n                            'openshift//mysql-ephemeral',\n                            \"-p\", \"DATABASE_SERVICE_NAME=${dcPrefix}-db${dcSuffix}\",\n                            '-p', \"MYSQL_DATABASE=petclinic\"\n                        ));\n                        \n                        models.addAll(openshift.process(\"-f\", \"openshift.dc.json\",\n                                \"-p\", \"APP_NAME=${appName}\",\n                                \"-p\", \"ENV_NAME=${envName}\",\n                                \"-p\", \"NAME_PREFIX=${dcPrefix}\",\n                                \"-p\", \"NAME_SUFFIX=${dcSuffix}\",\n                                \"-p\", \"BC_PROJECT=${openshift.project()}\",\n                                \"-p\", \"DC_PROJECT=${openshift.project()}\"\n                        ));\n                        for ( m in models ) {\n                            if (\"DeploymentConfig\".equals(m.kind)){\n                                m.spec.replicas = 0\n                                updateContainerImages(m.spec.template.spec.containers, m.spec.triggers);\n                            }\n                        }\n                      \n                        echo \"Scaling down\"\n                        openshift.selector( 'dc', dcSelector).scale('--replicas=0', '--timeout=2m')\n                      \n                        echo \"The template will create/update ${models.size()} objects\"\n                        //TODO: needs to review usage of 'apply' it recreates Secrets!!!\n                        def selector=openshift.apply(models);\n                        selector.label(['app':\"${appName}-${envName}\", 'app-name':\"${appName}\", 'env-name':\"${envName}\"], \"--overwrite\")\n\n                        selector.narrow('is').withEach { imageStream ->\n                            def o=imageStream.object();\n                            def imageStreamName=\"${o.metadata.name}\"\n\n                            if (buildImageStreams[imageStreamName] != null ){\n                                echo \"Tagging '${buildProjectName}/${o.metadata.name}:latest' as '${o.metadata.name}:${envName}'\"\n                                openshift.tag(\"${buildProjectName}/${o.metadata.name}:latest\", \"${o.metadata.name}:${envName}\")\n                            }\n                        }\n\n\n\n                        openshift.selector( 'dc', dcSelector).scale('--replicas=1', '--timeout=4m')\n                        //openshift.selector(\"dc/${dcPrefix}${dcSuffix}\").rollout().resume();\n\n                        //def buildSelector = openshift.selector( 'dc', dcSelector);\n\n                        //TODO: Re-add build triggers (ImageChange, ConfigurationChange)\n                    } // end openshift.withProject()\n                    } // end openshift.withCredentials()\n                    } // end openshift.withCluster()"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "agent": {
                                "type": "any"
                            },
                            "when": {
                                "conditions": [
                                    {
                                        "name": "expression",
                                        "arguments": [
                                            {
                                                "key": "scriptBlock",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "return false"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Deploy - TEST",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "Testing ..."
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "Testing ... Done!"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "agent": {
                                "type": "any"
                            },
                            "when": {
                                "conditions": [
                                    {
                                        "name": "expression",
                                        "arguments": [
                                            {
                                                "key": "scriptBlock",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "doDeploy == true"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Deploy - PROD",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "Packaging ..."
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "Packaging ... Done!"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "agent": {
                                "type": "any"
                            },
                            "when": {
                                "conditions": [
                                    {
                                        "name": "expression",
                                        "arguments": [
                                            {
                                                "key": "scriptBlock",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "doDeploy == true"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "name": "publishing",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "Publishing ..."
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "Publishing ... Done!"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "agent": {
                                "type": "any"
                            },
                            "when": {
                                "conditions": [
                                    {
                                        "name": "expression",
                                        "arguments": [
                                            {
                                                "key": "scriptBlock",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "doDeploy == true"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    ],
                    "agent": {
                        "type": "none"
                    },
                    "options": {
                        "options": [
                            {
                                "name": "buildDiscarder",
                                "arguments": [
                                    {
                                        "name": "logRotator",
                                        "arguments": [
                                            {
                                                "key": "numToKeepStr",
                                                "value": {
                                                    "isLiteral": true,
                                                    "value": "10"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "name": "skipDefaultCheckout",
                                "arguments": []
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "godsake/dashboard",
            "repo_url": "https://github.com/godsake/dashboard",
            "html_url_jenkinsfile": "https://github.com/godsake/dashboard/blob/47acf863f8dfdb7188a34260f2ad1ccf72394043/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/106436923/git/blobs/831f0b277d47af982a19b4236eabebd73ac9ebda",
            "jenkins_pipeline": [
                {
                    "error": [
                        "Tool type \"jdk\" does not have an install of \"jdk8\" configured - did you mean \"null\"? @ line 92, column 21.",
                        "Tool type \"maven\" does not have an install of \"Maven 3.5.0\" configured - did you mean \"Jenkins_maven\"? @ line 13, column 15.",
                        "Tool type \"jdk\" does not have an install of \"jdk7\" configured - did you mean \"null\"? @ line 14, column 13."
                    ]
                }
            ]
        },
        {
            "full_repo_name": "jenkinsci/pipeline-model-definition-plugin",
            "repo_url": "https://github.com/jenkinsci/pipeline-model-definition-plugin",
            "html_url_jenkinsfile": "https://github.com/jenkinsci/pipeline-model-definition-plugin/blob/147204adb42549a66ff917f5ac513e09eec8a374/pipeline-model-definition/src/main/groovy/org/jenkinsci/plugins/pipeline/modeldefinition/parser/ASTParserUtils.groovy",
            "api_url_jenkinsfile": "https://api.github.com/repositories/66677338/git/blobs/9b8b4f1d6f02f3b7e94e89e3263ed9883e907129",
            "jenkins_pipeline": [
                {
                    "error": "unable to resolve class edu.umd.cs.findbugs.annotations.SuppressFBWarnings\n @ line 27, column 1."
                }
            ]
        },
        {
            "full_repo_name": "MunKongChan/dcep-sample-ui",
            "repo_url": "https://github.com/MunKongChan/dcep-sample-ui",
            "html_url_jenkinsfile": "https://github.com/MunKongChan/dcep-sample-ui/blob/493792f76921ece3942318a24df6afc1c8d1b8e9/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/131815535/git/blobs/f7ade4dff7c0219f465e61a2cdd0d3044196d4f5",
            "jenkins_pipeline": [
                {
                    "error": "Invalid tool type \"nodejs\". Valid tool types: [ant, hudson.tasks.Ant$AntInstallation, org.jenkinsci.plugins.docker.commons.tools.DockerTool, git, hudson.plugins.git.GitTool, gradle, hudson.plugins.gradle.GradleInstallation, jdk, hudson.model.JDK, jgit, org.jenkinsci.plugins.gitclient.JGitTool, jgitapache, org.jenkinsci.plugins.gitclient.JGitApacheTool, maven, hudson.tasks.Maven$MavenInstallation, hudson.plugins.mercurial.MercurialInstallation, org.jvnet.hudson.plugins.SbtPluginBuilder$SbtInstallation] @ line 4, column 9."
                }
            ]
        },
        {
            "full_repo_name": "Energy1190/wrtomysql",
            "repo_url": "https://github.com/Energy1190/wrtomysql",
            "html_url_jenkinsfile": "https://github.com/Energy1190/wrtomysql/blob/bd542c2923fa0e39d5b41cd8b239da576bd98306/jenkinsfile.sh",
            "api_url_jenkinsfile": "https://api.github.com/repositories/110716677/git/blobs/f9c0baec50d984460840eef9b917d36f0a9fa4be",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Checkout",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "def scmCheckout = checkout([$class: 'GitSCM', \n                                        branches: [[name: '*/master']], \n                                        doGenerateSubmoduleConfigurations: false, \n                                        extensions: [], \n                                        submoduleCfg: [], \n                                        userRemoteConfigs: [[credentialsId: '8a5ae250-42f8-482a-ba21-af74658e34c2', url: 'https://github.com/Energy1190/wrtomysql']]\n                                       ])\n                    env.GPSC = scmCheckout.GIT_PREVIOUS_SUCCESSFUL_COMMIT\n                    env.GB= scmCheckout.GIT_BRANCH\n                    echo \"${env.GPSC}\"\n                    sh 'echo ${GPSC}'\n                    sh 'printenv'"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Test message",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "echo \"${env.GPSC}\"\n                    sh 'echo ${env.GPSC}'\n                    if (GIT_PREVIOUS_SUCCESSFUL_COMMIT) {\n                        COMMITLIST = sh(returnStdout: true, script:'git rev-list ${GIT_PREVIOUS_SUCCESSFUL_COMMIT}^..HEAD')\n                        BADLIST = loop_with_preceding_sh(COMMITLIST)\n                        BOOL = loop_bad_message(BADLIST)\n                        if (BOOL) {\n                            loop_mail_send(BADLIST)\n                    sh 'printenv'\n                        }\n                    }"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "agent": {
                        "type": "any"
                    },
                    "triggers": {
                        "triggers": [
                            {
                                "name": "pollSCM",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "H/10 * * * *"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "geneontology/pipeline",
            "repo_url": "https://github.com/geneontology/pipeline",
            "html_url_jenkinsfile": "https://github.com/geneontology/pipeline/blob/2d2d788e28436bbace3c0a33ae2f138428dd6675/Jenkinsfile",
            "api_url_jenkinsfile": "https://api.github.com/repositories/94938070/git/blobs/1f780e7960e99c1e2a2a5e5ef8abebdde45b6022",
            "jenkins_pipeline": {
                "pipeline": {
                    "stages": [
                        {
                            "name": "Ready and clean",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "script",
                                            "arguments": [
                                                {
                                                    "key": "scriptBlock",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "if( BRANCH_NAME != 'master' && TARGET_BUCKET == 'go-data-product-experimental'){\n\t\t\techo 'Only master can touch that target.'\n\t\t\tsh '`exit -1`'\n\t\t    }else if( BRANCH_NAME != 'snapshot' && TARGET_BUCKET == 'go-data-product-snapshot'){\n\t\t\techo 'Only master can touch that target.'\n\t\t\tsh '`exit -1`'\n\t\t    }else if( BRANCH_NAME != 'release' && TARGET_BUCKET == 'go-data-product-release'){\n\t\t\techo 'Only master can touch that target.'\n\t\t\tsh '`exit -1`'\n\t\t    }"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sleep",
                                            "arguments": [
                                                {
                                                    "key": "time",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": 1
                                                    }
                                                },
                                                {
                                                    "key": "unit",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "MINUTES"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "cleanWs",
                                            "arguments": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Initialize",
                            "branches": [
                                {
                                    "name": "Report",
                                    "steps": [
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "env > env.txt"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "echo $BRANCH_NAME > branch.txt"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "echo \"$BRANCH_NAME\""
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "cat env.txt"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "cat branch.txt"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "echo $START_DAY > dow.txt"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "echo \"$START_DAY\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "Reset base",
                                    "steps": [
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mkdir -p $WORKSPACE/mnt || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "withCredentials",
                                            "arguments": {
                                                "isLiteral": false,
                                                "value": "${[file(credentialsId: 'skyhook-private-key', variable: 'SKYHOOK_IDENTITY')]}"
                                            },
                                            "children": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "sshfs -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY -o idmap=user skyhook@skyhook.berkeleybop.org:/home/skyhook $WORKSPACE/mnt/"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "rm -r -f $WORKSPACE/mnt/$BRANCH_NAME || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mkdir -p $WORKSPACE/mnt/$BRANCH_NAME/bin || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mkdir -p $WORKSPACE/mnt/$BRANCH_NAME/lib || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mkdir -p $WORKSPACE/mnt/$BRANCH_NAME/products || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mkdir -p $WORKSPACE/mnt/$BRANCH_NAME/products/ttl || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mkdir -p $WORKSPACE/mnt/$BRANCH_NAME/products/blazegraph || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mkdir -p $WORKSPACE/mnt/$BRANCH_NAME/products/annotations || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mkdir -p $WORKSPACE/mnt/$BRANCH_NAME/products/pages || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mkdir -p $WORKSPACE/mnt/$BRANCH_NAME/products/solr || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mkdir -p $WORKSPACE/mnt/$BRANCH_NAME/metadata || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mkdir -p $WORKSPACE/mnt/$BRANCH_NAME/annotations || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mkdir -p $WORKSPACE/mnt/$BRANCH_NAME/ontology || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mkdir -p $WORKSPACE/mnt/$BRANCH_NAME/reports || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "echo \"TODO: Note software versions.\" > $WORKSPACE/mnt/$BRANCH_NAME/notes.txt"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "date >> $WORKSPACE/mnt/$BRANCH_NAME/notes.txt"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "fusermount -u $WORKSPACE/mnt/ || true"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Ready production software",
                            "branches": [
                                {
                                    "name": "Ready owltools",
                                    "steps": [
                                        {
                                            "name": "dir",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "./owltools"
                                            },
                                            "children": [
                                                {
                                                    "name": "git",
                                                    "arguments": [
                                                        {
                                                            "key": "url",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "https://github.com/owlcollab/owltools.git"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "mvn -f OWLTools-Parent/pom.xml -U clean install -DskipTests -Dmaven.javadoc.skip=true -Dsource.skip=true"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "withCredentials",
                                                    "arguments": {
                                                        "isLiteral": false,
                                                        "value": "${[file(credentialsId: 'skyhook-private-key', variable: 'SKYHOOK_IDENTITY')]}"
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" OWLTools-Runner/target/owltools skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/bin/"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" OWLTools-Oort/bin/* skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/bin/"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" OWLTools-NCBI/bin/* skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/bin/"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "rsync -vhac -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" --exclude \".git\" OWLTools-Oort/reporting/* skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/bin/"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "rsync -vhac -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" --exclude \".git\" OWLTools-Runner/contrib/* skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/bin/"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "Ready robot",
                                    "steps": [
                                        {
                                            "name": "dir",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "./robot"
                                            },
                                            "children": [
                                                {
                                                    "name": "git",
                                                    "arguments": [
                                                        {
                                                            "key": "url",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "https://github.com/ontodev/robot.git"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "mvn org.apache.maven.plugins:maven-help-plugin:2.1.1:evaluate -Dexpression=project.version"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "VERSION=`mvn org.apache.maven.plugins:maven-help-plugin:2.1.1:evaluate -Dexpression=project.version | grep -v '\\[' | sed 's/-SNAPSHOT//'`"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "BUILD=`git rev-parse --short HEAD`"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "mvn versions:set -DnewVersion=$VERSION+$BUILD"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "mvn -U clean install -DskipTests"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "withCredentials",
                                                    "arguments": {
                                                        "isLiteral": false,
                                                        "value": "${[file(credentialsId: 'skyhook-private-key', variable: 'SKYHOOK_IDENTITY')]}"
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" bin/* skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/bin/"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "Ready arachne",
                                    "steps": [
                                        {
                                            "name": "dir",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "./arachne"
                                            },
                                            "children": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "wget -N https://github.com/balhoff/arachne/releases/download/v1.0.2/arachne-1.0.2.tgz"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "tar -xvf arachne-1.0.2.tgz"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "withCredentials",
                                                    "arguments": {
                                                        "isLiteral": false,
                                                        "value": "${[file(credentialsId: 'skyhook-private-key', variable: 'SKYHOOK_IDENTITY')]}"
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" arachne-1.0.2/bin/* skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/bin/"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" arachne-1.0.2/lib/* skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/lib/"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "Ready blazegraph-runner",
                                    "steps": [
                                        {
                                            "name": "dir",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "./blazegraph-runner"
                                            },
                                            "children": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "wget -N https://github.com/balhoff/blazegraph-runner/releases/download/v1.3/blazegraph-runner-1.3.tgz"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "tar -xvf blazegraph-runner-1.3.tgz"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "withCredentials",
                                                    "arguments": {
                                                        "isLiteral": false,
                                                        "value": "${[file(credentialsId: 'skyhook-private-key', variable: 'SKYHOOK_IDENTITY')]}"
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" blazegraph-runner-1.3/bin/* skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/bin/"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" blazegraph-runner-1.3/lib/* skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/lib/"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Produce ontology",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "dir",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "./go-ontology"
                                            },
                                            "children": [
                                                {
                                                    "name": "git",
                                                    "arguments": [
                                                        {
                                                            "key": "url",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "https://github.com/geneontology/go-ontology.git"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "OBO=http://purl.obolibrary.org/obo"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "mkdir -p bin/"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "withCredentials",
                                                    "arguments": {
                                                        "isLiteral": false,
                                                        "value": "${[file(credentialsId: 'skyhook-private-key', variable: 'SKYHOOK_IDENTITY')]}"
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/bin/* ./bin/"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "chmod +x bin/*"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "dir",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": "./src/ontology"
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "retry",
                                                            "arguments": {
                                                                "isLiteral": true,
                                                                "value": 3
                                                            },
                                                            "children": [
                                                                {
                                                                    "name": "withEnv",
                                                                    "arguments": {
                                                                        "isLiteral": false,
                                                                        "value": "${['PATH+EXTRA=../../bin']}"
                                                                    },
                                                                    "children": [
                                                                        {
                                                                            "name": "sh",
                                                                            "arguments": [
                                                                                {
                                                                                    "key": "script",
                                                                                    "value": {
                                                                                        "isLiteral": true,
                                                                                        "value": "$MAKECMD all"
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "name": "sh",
                                                                            "arguments": [
                                                                                {
                                                                                    "key": "script",
                                                                                    "value": {
                                                                                        "isLiteral": true,
                                                                                        "value": "$MAKECMD prepare_release"
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "withCredentials",
                                                    "arguments": {
                                                        "isLiteral": false,
                                                        "value": "${[file(credentialsId: 'skyhook-private-key', variable: 'SKYHOOK_IDENTITY')]}"
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" target/* skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/ontology"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Produce GAFs, TTLs, and journal (mega-step)",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "dir",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "./go-site"
                                            },
                                            "children": [
                                                {
                                                    "name": "git",
                                                    "arguments": [
                                                        {
                                                            "key": "branch",
                                                            "value": {
                                                                "isLiteral": false,
                                                                "value": "${TARGET_GO_SITE_BRANCH}"
                                                            }
                                                        },
                                                        {
                                                            "key": "url",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "https://github.com/geneontology/go-site.git"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "mkdir -p bin/"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "mkdir -p lib/"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "withCredentials",
                                                    "arguments": {
                                                        "isLiteral": false,
                                                        "value": "${[file(credentialsId: 'skyhook-private-key', variable: 'SKYHOOK_IDENTITY')]}"
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/bin/* ./bin/"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/lib/* ./lib/"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "chmod +x bin/*"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "dir",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": "./pipeline"
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "python3 -m venv mypyenv"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "withEnv",
                                                            "arguments": {
                                                                "isLiteral": false,
                                                                "value": "${['JAVA_OPTS=-Xmx32G', \"PATH+EXTRA=${WORKSPACE}/go-site/bin:${WORKSPACE}/go-site/pipeline/mypyenv/bin\", 'PYTHONHOME=', \"VIRTUAL_ENV=${WORKSPACE}/go-site/pipeline/mypyenv\", 'PY_ENV=mypyenv', 'PY_BIN=mypyenv/bin']}"
                                                            },
                                                            "children": [
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "env > env.txt"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "cat env.txt"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "python3 ./mypyenv/bin/pip3 install -r requirements.txt"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "python3 ./mypyenv/bin/pip3 install ../graphstore/rule-runner"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "$MAKECMD clean"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "timeout",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "time",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": 20
                                                                            }
                                                                        },
                                                                        {
                                                                            "key": "unit",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "HOURS"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "name": "script",
                                                                            "arguments": [
                                                                                {
                                                                                    "key": "scriptBlock",
                                                                                    "value": {
                                                                                        "isLiteral": true,
                                                                                        "value": "sh '$MAKECMD -e target/sparta-report.json'"
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "withCredentials",
                                                            "arguments": {
                                                                "isLiteral": false,
                                                                "value": "${[file(credentialsId: 'skyhook-private-key', variable: 'SKYHOOK_IDENTITY')]}"
                                                            },
                                                            "children": [
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "find ./target/groups -type f -regex \"^.*\\(\\-src.gaf\\|\\_noiea.gaf\\|\\_valid.gaf\\|paint\\_.*\\).gz$\" -not -regex \"^.*goa_uniprot_all.*$\" -not -regex \"^.*.ttl.gz$\" -not -regex \"^.*goa_uniprot_all_noiea.gaf.gz$\" -not -regex \"^.*.ttl.gz$\" -exec scp -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY {} skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/products/annotations \\;"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "scp -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY ./target/groups/goa/goa_uniprot_all-src.gaf.gz skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/products/annotations"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "find ./target/groups -type f -regex \"^.*\\-prediction.gaf$\" -exec scp -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY {} skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/products/annotations \\;"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "find ./target/groups -type f -regex \"^.*.\\(gaf\\|gpad\\|gpi\\).gz$\" -not -regex \"^.*\\(\\-src.gaf\\|\\_noiea.gaf\\|\\_valid.gaf\\|paint_.*\\).gz$\" -exec scp -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY {} skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/annotations \\;"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "scp -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY ./target/groups/goa/goa_uniprot_all.gaf.gz skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/annotations"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "scp -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY ./target/groups/goa/goa_uniprot_all_noiea.gaf.gz skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/annotations"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "scp -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY ./target/groups/goa/goa_uniprot_all_noiea.gpi.gz skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/annotations"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "scp -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY ./target/groups/goa/goa_uniprot_all_noiea.gpad.gz skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/annotations"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "find ./target/groups -type f -name \"*.ttl.gz\" -exec scp -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY {} skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/products/ttl \\;"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "pigz target/blazegraph-internal.jnl"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "pigz target/blazegraph-production.jnl"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" target/blazegraph-production.jnl.gz skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/products/blazegraph/"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" target/blazegraph-internal.jnl.gz skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/products/blazegraph/"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" target/sparta-report.json skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/reports/"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "find ./target/groups -type f -regex \"^.*\\.\\(json\\|txt\\|md\\)$\" -exec scp -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY {} skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/reports \\;"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Produce metadata",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mkdir -p $WORKSPACE/copyover/ || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mkdir -p $WORKSPACE/mnt/ || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "withCredentials",
                                            "arguments": {
                                                "isLiteral": false,
                                                "value": "${[file(credentialsId: 'skyhook-private-key', variable: 'SKYHOOK_IDENTITY')]}"
                                            },
                                            "children": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "sshfs -oStrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY -o idmap=user skyhook@skyhook.berkeleybop.org:/home/skyhook $WORKSPACE/mnt/"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/* $WORKSPACE/copyover/"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/reports/* $WORKSPACE/copyover/"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mkdir -p $WORKSPACE/bin/ || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "withCredentials",
                                            "arguments": {
                                                "isLiteral": false,
                                                "value": "${[file(credentialsId: 'skyhook-private-key', variable: 'SKYHOOK_IDENTITY')]}"
                                            },
                                            "children": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/bin/* $WORKSPACE/bin/"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "chmod +x $WORKSPACE/bin/*"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "dir",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "./go-site"
                                            },
                                            "children": [
                                                {
                                                    "name": "git",
                                                    "arguments": [
                                                        {
                                                            "key": "branch",
                                                            "value": {
                                                                "isLiteral": false,
                                                                "value": "${TARGET_GO_SITE_BRANCH}"
                                                            }
                                                        },
                                                        {
                                                            "key": "url",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "https://github.com/geneontology/go-site.git"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "python3 ./scripts/aggregate-json-reports.py -v --directory $WORKSPACE/copyover --metadata ./metadata/datasets --output ./combined.report.json"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "python3 ./scripts/downloads-page-gen.py -v --report ./combined.report.json --inject ./scripts/downloads-page-template.html > ./downloads.html"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "python3 ./scripts/sanity-check-users-and-groups.py --users metadata/users.yaml --groups metadata/groups.yaml > ./users-and-groups-report.txt"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "withEnv",
                                                    "arguments": {
                                                        "isLiteral": false,
                                                        "value": "${['PATH+EXTRA=../bin:node_modules/.bin']}"
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "npm install"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "echo '{\"@context\": ' > ./metadata/groups.tmp.jsonld"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "yaml2json ./metadata/users-groups-context.yaml >> ./metadata/groups.tmp.jsonld"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "echo ', \"@graph\": ' >> ./metadata/groups.tmp.jsonld"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "yaml2json metadata/groups.yaml >> ./metadata/groups.tmp.jsonld"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "echo '}' >> ./metadata/groups.tmp.jsonld"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "robot convert -i ./metadata/groups.tmp.jsonld -o ./metadata/groups.ttl"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "echo '{\"@context\": ' > ./metadata/users.tmp.jsonld"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "yaml2json ./metadata/users-groups-context.yaml >> ./metadata/users.tmp.jsonld"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "echo ', \"@graph\": ' >> ./metadata/users.tmp.jsonld"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "yaml2json metadata/users.yaml >> ./metadata/users.tmp.jsonld"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "echo '}' >> ./metadata/users.tmp.jsonld"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "robot convert -i ./metadata/users.tmp.jsonld -o ./metadata/users.ttl"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "withCredentials",
                                                    "arguments": {
                                                        "isLiteral": false,
                                                        "value": "${[file(credentialsId: 'skyhook-private-key', variable: 'SKYHOOK_IDENTITY')]}"
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" metadata/* skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/metadata"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" ./combined.report.json skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/reports"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" ./users-and-groups-report.txt skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/reports"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" ./downloads.html skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/products/pages"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "post": {
                                "conditions": [
                                    {
                                        "condition": "always",
                                        "branch": {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "fusermount -u $WORKSPACE/mnt/ || true"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "rm -r -f $WORKSPACE/copyover || true"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Sanity I",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mkdir -p $WORKSPACE/copyover/ || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mkdir -p $WORKSPACE/mnt/ || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "withCredentials",
                                            "arguments": {
                                                "isLiteral": false,
                                                "value": "${[file(credentialsId: 'skyhook-private-key', variable: 'SKYHOOK_IDENTITY')]}"
                                            },
                                            "children": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "sshfs -oStrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY -o idmap=user skyhook@skyhook.berkeleybop.org:/home/skyhook $WORKSPACE/mnt/"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/* $WORKSPACE/copyover/"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/reports/* $WORKSPACE/copyover/"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "dir",
                                            "arguments": {
                                                "isLiteral": true,
                                                "value": "./go-site"
                                            },
                                            "children": [
                                                {
                                                    "name": "git",
                                                    "arguments": [
                                                        {
                                                            "key": "branch",
                                                            "value": {
                                                                "isLiteral": false,
                                                                "value": "${TARGET_GO_SITE_BRANCH}"
                                                            }
                                                        },
                                                        {
                                                            "key": "url",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "https://github.com/geneontology/go-site.git"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "python3 ./scripts/sanity-check-ann-report.py -v -d $WORKSPACE/copyover/"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "jq '.build' $WORKSPACE/copyover/sparta-report.json > $WORKSPACE/build-status.txt"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "grep -v 'fail' $WORKSPACE/build-status.txt"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "post": {
                                "conditions": [
                                    {
                                        "condition": "always",
                                        "branch": {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "fusermount -u $WORKSPACE/mnt/ || true"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "rm -r -f $WORKSPACE/copyover || true"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Produce derivatives",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "bash /tmp/run-indexer.sh"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "tar --use-compress-program=pigz -cvf /tmp/golr-index-contents.tgz -C /srv/solr/data/index ."
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "withCredentials",
                                            "arguments": {
                                                "isLiteral": false,
                                                "value": "${[file(credentialsId: 'skyhook-private-key', variable: 'SKYHOOK_IDENTITY')]}"
                                            },
                                            "children": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" /tmp/golr-index-contents.tgz skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/products/solr/"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "rsync -avz -e \"ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY\" /tmp/golr_timestamp.log skyhook@skyhook.berkeleybop.org:/home/skyhook/$BRANCH_NAME/products/solr/"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "agent": {
                                "type": "docker",
                                "arguments": [
                                    {
                                        "key": "image",
                                        "value": {
                                            "isLiteral": true,
                                            "value": "geneontology/golr-autoindex:2018-03-30T145420"
                                        }
                                    },
                                    {
                                        "key": "args",
                                        "value": {
                                            "isLiteral": true,
                                            "value": "-u root:root --mount type=tmpfs,destination=/srv/solr/data"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Sanity II",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "TODO: Sanity II"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Archive",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mkdir -p $WORKSPACE/mnt/ || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "withCredentials",
                                            "arguments": {
                                                "isLiteral": false,
                                                "value": "${[file(credentialsId: 'skyhook-private-key', variable: 'SKYHOOK_IDENTITY')]}"
                                            },
                                            "children": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "sshfs -oStrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY -o idmap=user skyhook@skyhook.berkeleybop.org:/home/skyhook $WORKSPACE/mnt/"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "withCredentials",
                                            "arguments": {
                                                "isLiteral": false,
                                                "value": "${[file(credentialsId: 'aws_go_push_json', variable: 'S3_PUSH_JSON'), file(credentialsId: 's3cmd_go_push_configuration', variable: 'S3CMD_JSON'), string(credentialsId: 'zenodo_go_sandbox_token', variable: 'ZENODO_TOKEN')]}"
                                            },
                                            "children": [
                                                {
                                                    "name": "dir",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": "./go-site"
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "git",
                                                            "arguments": [
                                                                {
                                                                    "key": "branch",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${TARGET_GO_SITE_BRANCH}"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "url",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "https://github.com/geneontology/go-site.git"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "python3 -m venv mypyenv"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "withEnv",
                                                            "arguments": {
                                                                "isLiteral": false,
                                                                "value": "${[\"PATH+EXTRA=${WORKSPACE}/go-site/bin:${WORKSPACE}/go-site/mypyenv/bin\", 'PYTHONHOME=', \"VIRTUAL_ENV=${WORKSPACE}/go-site/mypyenv\", 'PY_ENV=mypyenv', 'PY_BIN=mypyenv/bin']}"
                                                            },
                                                            "children": [
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "python3 ./mypyenv/bin/pip3 install pystache"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "python3 ./mypyenv/bin/pip3 install boto3"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "python3 ./mypyenv/bin/pip3 install filechunkio"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "python3 ./mypyenv/bin/pip3 install bdbag"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "python3 ./mypyenv/bin/pip3 install requests-toolbelt"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "script",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "scriptBlock",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "if( env.BRANCH_NAME == 'release' ){\n\t\t\t\t    sh 'python3 ./scripts/create-bdbag-remote-file-manifest.py -v --walk $WORKSPACE/mnt/$BRANCH_NAME/ --remote http://release.geneontology.org/$START_DATE --output manifest.json'\n\t\t\t\t}else if( env.BRANCH_NAME == 'master' ){\n\t\t\t\t    sh 'python3 ./scripts/create-bdbag-remote-file-manifest.py -v --walk $WORKSPACE/mnt/$BRANCH_NAME/ --remote $TARGET_INDEXER_PREFIX --output manifest.json'\n\t\t\t\t}\n\n\t\t\t\t// Make holey BDBag in fixed directory.\n\t\t\t\tsh 'mkdir go-release-reference'\n\t\t\t\tsh 'python3 ./mypyenv/bin/bdbag ./go-release-reference --remote-file-manifest manifest.json --archive tgz'\n\n\t\t\t\t// TODO: Archive the holey bdbag for\n\t\t\t\t// this run.\n\t\t\t\t//sh 'python3 ./scripts/zenodo-version-update.py --verbose --sandbox --key $ZENODO_TOKEN --concept $ZENODO_REFERENCE_CONCEPT --file go-release-reference.tgz --output ./release-reference-doi.json --revision $START_DATE'\n\n\t\t\t\t// Tarball the whole directory\n\t\t\t\t// structure.\n\t\t\t\tsh 'tar --use-compress-program=pigz -cvf go-release-archive.tgz -C $WORKSPACE/mnt/$BRANCH_NAME .'\n\n\t\t\t\t// TODO: Archive it too.\n\t\t\t\t//sh 'python3 ./scripts/zenodo-version-update.py --verbose --sandbox --key $ZENODO_TOKEN --concept $ZENODO_ARCHIVE_CONCEPT --file go-release-archive.tgz --output ./release-archive-doi.json --revision $START_DATE'\n\n\t\t\t\t// NOTE: Due to size and weirdness of\n\t\t\t\t// putting an archive in itself, we do\n\t\t\t\t// not copy the archive off of the\n\t\t\t\t// local filesystem.\n\n\t\t\t\t// Copy the files and DOIs to skyhook\n\t\t\t\t// metadata/ for easy inspection.\n\t\t\t\tsh 'cp go-release-reference.tgz $WORKSPACE/mnt/$BRANCH_NAME/metadata/go-release-reference.tgz'\n\t\t\t\tsh 'cp manifest.json $WORKSPACE/mnt/$BRANCH_NAME/metadata/bdbag-manifest.json'"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "anyOf",
                                        "children": [
                                            {
                                                "name": "branch",
                                                "arguments": {
                                                    "isLiteral": true,
                                                    "value": "release"
                                                }
                                            },
                                            {
                                                "name": "branch",
                                                "arguments": {
                                                    "isLiteral": true,
                                                    "value": "master"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            },
                            "post": {
                                "conditions": [
                                    {
                                        "condition": "always",
                                        "branch": {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "fusermount -u $WORKSPACE/mnt/ || true"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Publish",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mkdir -p $WORKSPACE/mnt/ || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "withCredentials",
                                            "arguments": {
                                                "isLiteral": false,
                                                "value": "${[file(credentialsId: 'skyhook-private-key', variable: 'SKYHOOK_IDENTITY')]}"
                                            },
                                            "children": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "sshfs -oStrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY -o idmap=user skyhook@skyhook.berkeleybop.org:/home/skyhook $WORKSPACE/mnt/"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "withCredentials",
                                            "arguments": {
                                                "isLiteral": false,
                                                "value": "${[file(credentialsId: 'aws_go_push_json', variable: 'S3_PUSH_JSON'), file(credentialsId: 's3cmd_go_push_configuration', variable: 'S3CMD_JSON')]}"
                                            },
                                            "children": [
                                                {
                                                    "name": "dir",
                                                    "arguments": {
                                                        "isLiteral": true,
                                                        "value": "./go-site"
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "git",
                                                            "arguments": [
                                                                {
                                                                    "key": "branch",
                                                                    "value": {
                                                                        "isLiteral": false,
                                                                        "value": "${TARGET_GO_SITE_BRANCH}"
                                                                    }
                                                                },
                                                                {
                                                                    "key": "url",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "https://github.com/geneontology/go-site.git"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "python3 -m venv mypyenv"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "withEnv",
                                                            "arguments": {
                                                                "isLiteral": false,
                                                                "value": "${[\"PATH+EXTRA=${WORKSPACE}/go-site/bin:${WORKSPACE}/go-site/mypyenv/bin\", 'PYTHONHOME=', \"VIRTUAL_ENV=${WORKSPACE}/go-site/mypyenv\", 'PY_ENV=mypyenv', 'PY_BIN=mypyenv/bin']}"
                                                            },
                                                            "children": [
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "python3 ./mypyenv/bin/pip3 install pystache"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "python3 ./mypyenv/bin/pip3 install boto3"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "python3 ./mypyenv/bin/pip3 install filechunkio"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "script",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "scriptBlock",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "sh 'python3 ./scripts/directory_indexer.py -v --inject ./scripts/directory-index-template.html --directory $WORKSPACE/mnt/$BRANCH_NAME --prefix $TARGET_INDEXER_PREFIX -x'\n\n\t\t\t\t// Push into S3 buckets. Simple\n\t\t\t\t// overall case: copy tree directly\n\t\t\t\t// over. For \"release\", this will be\n\t\t\t\t// \"current\". For \"snapshot\", this\n\t\t\t\t// will be \"snapshot\".\n\t\t\t\tsh 'python3 ./scripts/s3-uploader.py -v --credentials $S3_PUSH_JSON --directory $WORKSPACE/mnt/$BRANCH_NAME/ --bucket $TARGET_BUCKET --number $BUILD_ID --pipeline $BRANCH_NAME'\n\n\t\t\t\t// Also, some runs have special maps\n\t\t\t\t// to buckets...\n\t\t\t\tif( env.BRANCH_NAME == 'release' ){\n\n\t\t\t\t    // \"release\" -> dated path for\n\t\t\t\t    // indexing (clobbering\n\t\t\t\t    // \"current\"'s index.\n\t\t \t\t    sh 'python3 ./scripts/directory_indexer.py -v --inject ./scripts/directory-index-template.html --directory $WORKSPACE/mnt/$BRANCH_NAME --prefix http://release.geneontology.org/$START_DATE -x -u'\n\t\t\t\t    // \"release\" -> dated path for S3.\n\t\t\t\t    sh 'python3 ./scripts/s3-uploader.py -v --credentials $S3_PUSH_JSON --directory $WORKSPACE/mnt/$BRANCH_NAME/ --bucket go-data-product-release/$START_DATE --number $BUILD_ID --pipeline $BRANCH_NAME'\n\n\t\t\t\t    // Build the capper index.html...\n\t\t\t\t    sh 'python3 ./scripts/bucket-indexer.py --credentials $S3_PUSH_JSON --bucket go-data-product-release --inject ./scripts/directory-index-template.html --prefix http://release.geneontology.org > top-level-index.html'\n\t\t\t\t    // ...and push it up to S3.\n\t\t\t\t    sh 's3cmd -c $S3CMD_JSON --acl-public --mime-type=text/html --cf-invalidate put top-level-index.html s3://go-data-product-release/index.html'\n\n\t\t\t\t}else if( env.BRANCH_NAME == 'snapshot' ){\n\n\t\t\t\t    // Currently, the \"daily\"\n\t\t\t\t    // debugging buckets are intended\n\t\t\t\t    // to be RO directly in S3 for\n\t\t\t\t    // debugging.\n\t\t\t\t    sh 'python3 ./scripts/s3-uploader.py -v --credentials $S3_PUSH_JSON --directory $WORKSPACE/mnt/$BRANCH_NAME/ --bucket go-data-product-daily/$START_DAY --number $BUILD_ID --pipeline $BRANCH_NAME'\n\n\t\t\t\t}else if( env.BRANCH_NAME == 'master' ){\n\t\t\t\t    // Pass.\n\t\t\t\t}"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "anyOf",
                                        "children": [
                                            {
                                                "name": "branch",
                                                "arguments": {
                                                    "isLiteral": true,
                                                    "value": "release"
                                                }
                                            },
                                            {
                                                "name": "branch",
                                                "arguments": {
                                                    "isLiteral": true,
                                                    "value": "snapshot"
                                                }
                                            },
                                            {
                                                "name": "branch",
                                                "arguments": {
                                                    "isLiteral": true,
                                                    "value": "master"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            },
                            "post": {
                                "conditions": [
                                    {
                                        "condition": "always",
                                        "branch": {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "fusermount -u $WORKSPACE/mnt/ || true"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Deploy",
                            "branches": [
                                {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "Backport to legacy SVN"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "sh",
                                            "arguments": [
                                                {
                                                    "key": "script",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": "mkdir -p $WORKSPACE/mnt || true"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "withCredentials",
                                            "arguments": {
                                                "isLiteral": false,
                                                "value": "${[file(credentialsId: 'skyhook-private-key', variable: 'SKYHOOK_IDENTITY'), file(credentialsId: 'go-svn-private-key', variable: 'GO_SVN_IDENTITY')]}"
                                            },
                                            "children": [
                                                {
                                                    "name": "withEnv",
                                                    "arguments": {
                                                        "isLiteral": false,
                                                        "value": "${[\"SVN_SSH=ssh -l jenkins -i ${GO_SVN_IDENTITY}\"]}"
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "sshfs -oStrictHostKeyChecking=no -o IdentitiesOnly=true -o IdentityFile=$SKYHOOK_IDENTITY -o idmap=user skyhook@skyhook.berkeleybop.org:/home/skyhook $WORKSPACE/mnt/"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "svn --non-interactive --ignore-externals --depth files checkout svn+ssh://ext.geneontology.org/share/go/svn/trunk/gene-associations $WORKSPACE/goannsvn"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/aspgd.gaf.gz $WORKSPACE/goannsvn/gene_association.aspgd.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/cgd.gaf.gz $WORKSPACE/goannsvn/gene_association.cgd.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/dictybase.gaf.gz $WORKSPACE/goannsvn/gene_association.dictyBase.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/ecocyc.gaf.gz $WORKSPACE/goannsvn/gene_association.ecocyc.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/fb.gaf.gz $WORKSPACE/goannsvn/gene_association.fb.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/gramene_oryza.gaf.gz $WORKSPACE/goannsvn/gene_association.gramene_oryza.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/jcvi.gaf.gz $WORKSPACE/goannsvn/gene_association.jcvi.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/mgi.gaf.gz $WORKSPACE/goannsvn/gene_association.mgi.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/pombase.gaf.gz $WORKSPACE/goannsvn/gene_association.pombase.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/pseudocap.gaf.gz $WORKSPACE/goannsvn/gene_association.pseudocap.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/reactome.gaf.gz $WORKSPACE/goannsvn/gene_association.reactome.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/rgd.gaf.gz $WORKSPACE/goannsvn/gene_association.rgd.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/sgd.gaf.gz $WORKSPACE/goannsvn/gene_association.sgd.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/sgn.gaf.gz $WORKSPACE/goannsvn/gene_association.sgn.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/tair.gaf.gz $WORKSPACE/goannsvn/gene_association.tair.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/wb.gaf.gz $WORKSPACE/goannsvn/gene_association.wb.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/zfin.gaf.gz $WORKSPACE/goannsvn/gene_association.zfin.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/genedb_lmajor.gaf.gz $WORKSPACE/goannsvn/gene_association.GeneDB_Lmajor.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/genedb_pfalciparum.gaf.gz $WORKSPACE/goannsvn/gene_association.GeneDB_Pfalciparum.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/genedb_tbrucei.gaf.gz $WORKSPACE/goannsvn/gene_association.GeneDB_Tbrucei.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/pamgo_atumefaciens.gaf.gz $WORKSPACE/goannsvn/gene_association.PAMGO_Atumefaciens.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/pamgo_ddadantii.gaf.gz $WORKSPACE/goannsvn/gene_association.PAMGO_Ddadantii.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/pamgo_mgrisea.gaf.gz $WORKSPACE/goannsvn/gene_association.PAMGO_Mgrisea.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/pamgo_oomycetes.gaf.gz $WORKSPACE/goannsvn/gene_association.PAMGO_Oomycetes.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/goa_chicken_complex.gaf.gz $WORKSPACE/goannsvn/goa_chicken_complex.gaf.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/goa_chicken.gaf.gz $WORKSPACE/goannsvn/goa_chicken.gaf.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/goa_chicken_isoform.gaf.gz $WORKSPACE/goannsvn/goa_chicken_isoform.gaf.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/goa_chicken_rna.gaf.gz $WORKSPACE/goannsvn/goa_chicken_rna.gaf.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/goa_cow_complex.gaf.gz $WORKSPACE/goannsvn/goa_cow_complex.gaf.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/goa_cow.gaf.gz $WORKSPACE/goannsvn/goa_cow.gaf.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/goa_cow_isoform.gaf.gz $WORKSPACE/goannsvn/goa_cow_isoform.gaf.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/goa_cow_rna.gaf.gz $WORKSPACE/goannsvn/goa_cow_rna.gaf.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/goa_dog_complex.gaf.gz $WORKSPACE/goannsvn/goa_dog_complex.gaf.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/goa_dog.gaf.gz $WORKSPACE/goannsvn/goa_dog.gaf.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/goa_dog_isoform.gaf.gz $WORKSPACE/goannsvn/goa_dog_isoform.gaf.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/goa_dog_rna.gaf.gz $WORKSPACE/goannsvn/goa_dog_rna.gaf.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/goa_human_complex.gaf.gz $WORKSPACE/goannsvn/goa_human_complex.gaf.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/goa_human.gaf.gz $WORKSPACE/goannsvn/goa_human.gaf.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/goa_human_isoform.gaf.gz $WORKSPACE/goannsvn/goa_human_isoform.gaf.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/goa_human_rna.gaf.gz $WORKSPACE/goannsvn/goa_human_rna.gaf.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/goa_pig_complex.gaf.gz $WORKSPACE/goannsvn/goa_pig_complex.gaf.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/goa_pig.gaf.gz $WORKSPACE/goannsvn/goa_pig.gaf.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/goa_pig_isoform.gaf.gz $WORKSPACE/goannsvn/goa_pig_isoform.gaf.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/goa_pig_rna.gaf.gz $WORKSPACE/goannsvn/goa_pig_rna.gaf.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "sh",
                                                            "arguments": [
                                                                {
                                                                    "key": "script",
                                                                    "value": {
                                                                        "isLiteral": true,
                                                                        "value": "cp $WORKSPACE/mnt/$BRANCH_NAME/annotations/goa_uniprot_all_noiea.gaf.gz $WORKSPACE/goannsvn/goa_uniprot_all_noiea.gaf.gz"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "dir",
                                                            "arguments": {
                                                                "isLiteral": true,
                                                                "value": "./goannsvn"
                                                            },
                                                            "children": [
                                                                {
                                                                    "name": "sh",
                                                                    "arguments": [
                                                                        {
                                                                            "key": "script",
                                                                            "value": {
                                                                                "isLiteral": true,
                                                                                "value": "svn commit -m \"Jenkins pipeline backport from $BRANCH_NAME\""
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "when": {
                                "conditions": [
                                    {
                                        "name": "anyOf",
                                        "children": [
                                            {
                                                "name": "branch",
                                                "arguments": {
                                                    "isLiteral": true,
                                                    "value": "release"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            },
                            "post": {
                                "conditions": [
                                    {
                                        "condition": "always",
                                        "branch": {
                                            "name": "default",
                                            "steps": [
                                                {
                                                    "name": "sh",
                                                    "arguments": [
                                                        {
                                                            "key": "script",
                                                            "value": {
                                                                "isLiteral": true,
                                                                "value": "fusermount -u $WORKSPACE/mnt/ || true"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "post": {
                        "conditions": [
                            {
                                "condition": "changed",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"There has been a change in the ${env.BRANCH_NAME} pipeline.\""
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "mail",
                                            "arguments": [
                                                {
                                                    "key": "bcc",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": ""
                                                    }
                                                },
                                                {
                                                    "key": "body",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"There has been a pipeline status change in ${env.BRANCH_NAME}. Please see: https://build.geneontology.org/job/geneontology/job/pipeline/job/${env.BRANCH_NAME}\""
                                                    }
                                                },
                                                {
                                                    "key": "cc",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": ""
                                                    }
                                                },
                                                {
                                                    "key": "from",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": ""
                                                    }
                                                },
                                                {
                                                    "key": "replyTo",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": ""
                                                    }
                                                },
                                                {
                                                    "key": "subject",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"GO Pipeline change for ${env.BRANCH_NAME}\""
                                                    }
                                                },
                                                {
                                                    "key": "to",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"${TARGET_ADMIN_EMAILS}\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            {
                                "condition": "failure",
                                "branch": {
                                    "name": "default",
                                    "steps": [
                                        {
                                            "name": "echo",
                                            "arguments": [
                                                {
                                                    "key": "message",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"There has been a failure in the ${env.BRANCH_NAME} pipeline.\""
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "mail",
                                            "arguments": [
                                                {
                                                    "key": "bcc",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": ""
                                                    }
                                                },
                                                {
                                                    "key": "body",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"There has been a pipeline failure in ${env.BRANCH_NAME}. Please see: https://build.geneontology.org/job/geneontology/job/pipeline/job/${env.BRANCH_NAME}\""
                                                    }
                                                },
                                                {
                                                    "key": "cc",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": ""
                                                    }
                                                },
                                                {
                                                    "key": "from",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": ""
                                                    }
                                                },
                                                {
                                                    "key": "replyTo",
                                                    "value": {
                                                        "isLiteral": true,
                                                        "value": ""
                                                    }
                                                },
                                                {
                                                    "key": "subject",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"GO Pipeline FAIL for ${env.BRANCH_NAME}\""
                                                    }
                                                },
                                                {
                                                    "key": "to",
                                                    "value": {
                                                        "isLiteral": false,
                                                        "value": "\"${TARGET_ADMIN_EMAILS}\""
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "environment": [
                        {
                            "key": "START_DATE",
                            "value": {
                                "isLiteral": false,
                                "value": "${sh (\n\t    script: 'date +%Y-%m-%d',\n\t    returnStdout: true\n\t).trim()}"
                            }
                        },
                        {
                            "key": "START_DAY",
                            "value": {
                                "isLiteral": false,
                                "value": "${sh (\n\t    script: 'date +%A',\n\t    returnStdout: true\n\t).trim()}"
                            }
                        },
                        {
                            "key": "TARGET_GO_SITE_BRANCH",
                            "value": {
                                "isLiteral": true,
                                "value": "iteration"
                            }
                        },
                        {
                            "key": "TARGET_ADMIN_EMAILS",
                            "value": {
                                "isLiteral": true,
                                "value": "sjcarbon@lbl.gov"
                            }
                        },
                        {
                            "key": "TARGET_BUCKET",
                            "value": {
                                "isLiteral": true,
                                "value": "go-data-product-experimental"
                            }
                        },
                        {
                            "key": "TARGET_INDEXER_PREFIX",
                            "value": {
                                "isLiteral": true,
                                "value": "http://experimental.geneontology.io"
                            }
                        },
                        {
                            "key": "ZENODO_REFERENCE_CONCEPT",
                            "value": {
                                "isLiteral": true,
                                "value": "199441"
                            }
                        },
                        {
                            "key": "ZENODO_ARCHIVE_CONCEPT",
                            "value": {
                                "isLiteral": true,
                                "value": "212052"
                            }
                        },
                        {
                            "key": "MAKECMD",
                            "value": {
                                "isLiteral": true,
                                "value": "make"
                            }
                        },
                        {
                            "key": "GOLR_SOLR_MEMORY",
                            "value": {
                                "isLiteral": true,
                                "value": "4G"
                            }
                        },
                        {
                            "key": "GOLR_LOADER_MEMORY",
                            "value": {
                                "isLiteral": true,
                                "value": "8G"
                            }
                        },
                        {
                            "key": "GOLR_INPUT_ONTOLOGIES",
                            "value": {
                                "isLiteral": false,
                                "value": "${[\n\t    \"http://skyhook.berkeleybop.org/master/ontology/extensions/go-gaf.owl\"\n\t].join(\" \")}"
                            }
                        },
                        {
                            "key": "GOLR_INPUT_GAFS",
                            "value": {
                                "isLiteral": false,
                                "value": "${[\n\t    \"http://www.geneontology.org/gene-associations/submission/paint/pre-submission/gene_association.paint_other.gaf\",\n\t    \"http://skyhook.berkeleybop.org/master/annotations/goa_chicken_complex.gaf.gz\",\n\t    \"http://skyhook.berkeleybop.org/master/annotations/goa_uniprot_all_noiea.gaf.gz\",\n\t    \"http://skyhook.berkeleybop.org/master/annotations/wb.gaf.gz\"\n\t].join(\" \")}"
                            }
                        }
                    ],
                    "agent": {
                        "type": "any"
                    },
                    "options": {
                        "options": [
                            {
                                "name": "timestamps",
                                "arguments": []
                            }
                        ]
                    },
                    "triggers": {
                        "triggers": [
                            {
                                "name": "cron",
                                "arguments": [
                                    {
                                        "isLiteral": true,
                                        "value": "0 0 31 2 *"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "full_repo_name": "jenkinsci/pipeline-model-definition-plugin",
            "repo_url": "https://github.com/jenkinsci/pipeline-model-definition-plugin",
            "html_url_jenkinsfile": "https://github.com/jenkinsci/pipeline-model-definition-plugin/blob/b492733adb2ef8a81be644f9582d7afd041372d9/pipeline-model-definition/src/main/groovy/org/jenkinsci/plugins/pipeline/modeldefinition/parser/ModelParser.groovy",
            "api_url_jenkinsfile": "https://api.github.com/repositories/66677338/git/blobs/cb1f3186c2102a1a586cb32e7dc2b1f06301f500",
            "jenkins_pipeline": [
                {
                    "error": "unable to resolve class edu.umd.cs.findbugs.annotations.SuppressFBWarnings\n @ line 26, column 1."
                }
            ]
        }
    ]
}